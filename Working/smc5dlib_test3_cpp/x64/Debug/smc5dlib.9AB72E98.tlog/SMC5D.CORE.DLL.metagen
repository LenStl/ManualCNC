  De.Boenigk.SMC5D.Dialogs.DlgPicTester.resources - Embedded, ContainedInManifestFile, 
ImageRuntimeVersion: v4.0.30319
Assembly smc5d.core, Version=1.0.*, Culture=Invariant Language (Invariant Country): 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Assembly System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly WinUSBNet, Version=1.0.*, Culture=Invariant Language (Invariant Country): 
	hash=None, flags=None
Class MicroLibrary.MicroStopwatch: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Diagnostics.Stopwatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int64 ElapsedMicroseconds 'get ' : 
  Methods:
    get_ElapsedMicroseconds(): PrivateScope, Public, HideBySig, SpecialName
Class MicroLibrary.MicroTimer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int64 Interval 'get set' : 
    Int64 IgnoreEventIfLateBy 'get set' : 
    Boolean Enabled 'get set' : 
  Events:
    MicroTimerElapsedEventHandler MicroTimerElapsed: 
  Methods:
    add_MicroTimerElapsed(MicroTimerElapsedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_MicroTimerElapsed(MicroTimerElapsedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    get_Interval(): PrivateScope, Public, HideBySig, SpecialName
    set_Interval(Int64): PrivateScope, Public, HideBySig, SpecialName
    get_IgnoreEventIfLateBy(): PrivateScope, Public, HideBySig, SpecialName
    set_IgnoreEventIfLateBy(Int64): PrivateScope, Public, HideBySig, SpecialName
    set_Enabled(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Enabled(): PrivateScope, Public, HideBySig, SpecialName
    Start(): PrivateScope, Public, HideBySig
    Stop(): PrivateScope, Public, HideBySig
    StopAndWait(): PrivateScope, Public, HideBySig
    StopAndWait(Int32): PrivateScope, Public, HideBySig
    Abort(): PrivateScope, Public, HideBySig
Class MicroLibrary.MicroTimerEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(Int32, Int64, Int64, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 TimerCount 'get set' : 
    Int64 ElapsedMicroseconds 'get set' : 
    Int64 TimerLateBy 'get set' : 
    Int64 CallbackFunctionExecutionTime 'get set' : 
  Methods:
    get_TimerCount(): PrivateScope, Public, HideBySig, SpecialName
    get_ElapsedMicroseconds(): PrivateScope, Public, HideBySig, SpecialName
    get_TimerLateBy(): PrivateScope, Public, HideBySig, SpecialName
    get_CallbackFunctionExecutionTime(): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.Test.SpeedComparison: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Core.INIT, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 NumberOfDopiszDane 'get ' : 
    UInt16 Delta 'get ' : 
  Methods:
    Set(DOPISZ_DANE): PrivateScope, Public, HideBySig
    Loop(): PrivateScope, Public, HideBySig
    GetSpeedDiv(): PrivateScope, Public, HideBySig
    IsBreak(): PrivateScope, Public, HideBySig
    get_NumberOfDopiszDane(): PrivateScope, Public, HideBySig, SpecialName
    get_Delta(): PrivateScope, Public, HideBySig, SpecialName
Struct De.Boenigk.SMC5D.Settings.AAxisUnit: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    De.Boenigk.SMC5D.Settings.AAxisUnit AMM = 0 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Settings.AAxisUnit AGrad = 1 : Public, Static, Literal, HasDefault
Class De.Boenigk.SMC5D.Settings.AutoToolMonitoring: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean On 'get set' : 
    De.Boenigk.SMC5D.Basics.Input InputPin 'get set' : 
    Boolean InputPinInvert 'get set' : 
    System.String Message 'get set' : 
  Methods:
    get_On(): PrivateScope, Public, HideBySig, SpecialName
    set_On(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_InputPin(): PrivateScope, Public, HideBySig, SpecialName
    set_InputPin(Input): PrivateScope, Public, HideBySig, SpecialName
    get_InputPinInvert(): PrivateScope, Public, HideBySig, SpecialName
    set_InputPinInvert(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Message(): PrivateScope, Public, HideBySig, SpecialName
    set_Message(String): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.AutoToolOffset: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
  Properties:
    Boolean View 'get set' : 
    Int32 Txx  'get set' : 
    Double X   'get set' : 
    Double Y   'get set' : 
    Double Z   'get set' : 
    Double A   'get set' : 
    Double B   'get set' : 
  Methods:
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_View(): PrivateScope, Public, HideBySig, SpecialName
    set_View(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Txx(): PrivateScope, Public, HideBySig, SpecialName
    set_Txx(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    set_X(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    set_Y(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Z(): PrivateScope, Public, HideBySig, SpecialName
    set_Z(Double): PrivateScope, Public, HideBySig, SpecialName
    get_A(): PrivateScope, Public, HideBySig, SpecialName
    set_A(Double): PrivateScope, Public, HideBySig, SpecialName
    get_B(): PrivateScope, Public, HideBySig, SpecialName
    set_B(Double): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.AutoToolSettings: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean On 'get set' : 
    Boolean ShowTreeListAsAbsPositions 'get set' : 
    Boolean AutoToolChangeHavePlaces 'get set' : 
    Boolean BSpeed 'get set' : 
    Boolean XToB 'get set' : 
    Double XToBOffset 'get set' : 
    Boolean HoodOn 'get set' : 
    System.Collections.Generic.List`1[De.Boenigk.SMC5D.Settings.OutputStatus] HoodOnOutputList 'get set' : 
    Boolean WhenMeasured 'get set' : 
    De.Boenigk.SMC5D.Basics.Output HoodOutput 'get set' : 
    De.Boenigk.SMC5D.Basics.Input HoodInput 'get set' : 
    Boolean HoodInputInvert 'get set' : 
    Boolean HoodInputOn 'get set' : 
    Boolean CheckSpindleStopped 'get set' : 
    De.Boenigk.SMC5D.Basics.Input SpindleStoppedInput 'get set' : 
    Boolean SpindleStoppedInvert 'get set' : 
    Boolean Reference 'get set' : 
    Boolean SpeedReference 'get set' : 
    System.Collections.Generic.List`1[De.Boenigk.SMC5D.Settings.AutoToolOffset] AutoToolOffset 'get set' : 
    ToolPosition StartPosition 'get set' : 
    Boolean XOn 'get set' : 
    Boolean YOn 'get set' : 
    De.Boenigk.SMC5D.Basics.Output ClampingDevice 'get set' : 
    Boolean ClampingDeviceOn 'get set' : 
    Double ZTop 'get set' : 
    Double Way 'get set' : 
    Boolean WayWithoutFreePuffOn 'get set' : 
    Double WayWithoutFreePuff 'get set' : 
    Double WayXY 'get set' : 
    Boolean WayInX 'get set' : 
    Boolean WayInY 'get set' : 
    Boolean WayInZ 'get set' : 
    Int32 BusyArgbColor 'get set' : 
    Int32 FreeArgbColor 'get set' : 
    Int32 UnUsedArgbColor 'get set' : 
    Double Speed 'get set' : 
    Double PUSpeed 'get set' : 
    Int32 WaitTime 'get set' : 
    Int16 SpindleWaitTime 'get set' : 
    Boolean FreePuffPermanently 'get set' : 
    Boolean FreePuffOn 'get set' : 
    Int32 FreePuffSec 'get set' : 
    De.Boenigk.SMC5D.Basics.Output FreePuffPin 'get set' : 
    De.Boenigk.SMC5D.Settings.AutoToolMonitoring AutoToolHoodMonitoring 'get set' : 
    Boolean RelaySpindleCheckOn 'get set' : 
    Boolean RelaySpindleCheckOff 'get set' : 
    Boolean AllowMeasuringOutside 'get set' : 
    De.Boenigk.SMC5D.Basics.Input RelaySpindelCheck 'get set' : 
    Int32 RelaySpindelCheckDelay 'get set' : 
    Boolean RelaySpindelCheckInvert 'get set' : 
    Boolean AfterEndPutOff 'get set' : 
    Boolean UseT0 'get set' : 
    MoveAfter MoveAfterScanUP 'get set' : 
    Boolean MoveXYAfterEnd 'get set' : 
    Double MoveXAfterEnd 'get set' : 
    Double MoveYAfterEnd 'get set' : 
    Boolean ZeroMoveAtTheEndOfProcess 'get set' : 
    MoveAfter MoveAfterAutoToolUp 'get set' : 
    Boolean CloseAfterPutOffs 'get set' : 
    Boolean CheckToolExcluded 'get set' : 
    Double MinZ 'get set' : 
    Boolean MoveToFirstTool 'get set' : 
  Methods:
    get_CheckToolExcluded(): PrivateScope, Public, HideBySig, SpecialName
    set_CheckToolExcluded(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MinZ(): PrivateScope, Public, HideBySig, SpecialName
    set_MinZ(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MoveToFirstTool(): PrivateScope, Public, HideBySig, SpecialName
    set_MoveToFirstTool(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_On(): PrivateScope, Public, HideBySig, SpecialName
    set_On(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ShowTreeListAsAbsPositions(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowTreeListAsAbsPositions(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AutoToolChangeHavePlaces(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoToolChangeHavePlaces(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_BSpeed(): PrivateScope, Public, HideBySig, SpecialName
    set_BSpeed(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_XToB(): PrivateScope, Public, HideBySig, SpecialName
    set_XToB(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_XToBOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_XToBOffset(Double): PrivateScope, Public, HideBySig, SpecialName
    get_HoodOn(): PrivateScope, Public, HideBySig, SpecialName
    set_HoodOn(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_HoodOnOutputList(): PrivateScope, Public, HideBySig, SpecialName
    set_HoodOnOutputList(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_WhenMeasured(): PrivateScope, Public, HideBySig, SpecialName
    set_WhenMeasured(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_HoodOutput(): PrivateScope, Public, HideBySig, SpecialName
    set_HoodOutput(Output): PrivateScope, Public, HideBySig, SpecialName
    get_HoodInput(): PrivateScope, Public, HideBySig, SpecialName
    set_HoodInput(Input): PrivateScope, Public, HideBySig, SpecialName
    get_HoodInputInvert(): PrivateScope, Public, HideBySig, SpecialName
    set_HoodInputInvert(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_HoodInputOn(): PrivateScope, Public, HideBySig, SpecialName
    set_HoodInputOn(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_CheckSpindleStopped(): PrivateScope, Public, HideBySig, SpecialName
    set_CheckSpindleStopped(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_SpindleStoppedInput(): PrivateScope, Public, HideBySig, SpecialName
    set_SpindleStoppedInput(Input): PrivateScope, Public, HideBySig, SpecialName
    get_SpindleStoppedInvert(): PrivateScope, Public, HideBySig, SpecialName
    set_SpindleStoppedInvert(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Reference(): PrivateScope, Public, HideBySig, SpecialName
    set_Reference(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_SpeedReference(): PrivateScope, Public, HideBySig, SpecialName
    set_SpeedReference(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AutoToolOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoToolOffset(List`1): PrivateScope, Public, HideBySig, SpecialName
    GetPlaceNumber(Int32): PrivateScope, Public, HideBySig
    GetHighestTool(): PrivateScope, Public, HideBySig
    ClearAutoToolOffset(Int32): PrivateScope, Public, HideBySig
    get_StartPosition(): PrivateScope, Public, HideBySig, SpecialName
    set_StartPosition(ToolPosition): PrivateScope, Public, HideBySig, SpecialName
    get_XOn(): PrivateScope, Public, HideBySig, SpecialName
    set_XOn(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_YOn(): PrivateScope, Public, HideBySig, SpecialName
    set_YOn(Boolean): PrivateScope, Public, HideBySig, SpecialName
    GetAfterEndPutOff(): PrivateScope, Public, HideBySig
    GetPosition(Int32, Connector): PrivateScope, Public, HideBySig
    GetToolPosForFreePlaces(Int32): PrivateScope, Public, HideBySig
    GetPositionXToB(Int32): PrivateScope, Public, HideBySig
    SetAfterEndPutOff(Boolean): PrivateScope, Public, HideBySig
    IsUsed(Int32): PrivateScope, Public, HideBySig
    get_ClampingDevice(): PrivateScope, Public, HideBySig, SpecialName
    set_ClampingDevice(Output): PrivateScope, Public, HideBySig, SpecialName
    get_ClampingDeviceOn(): PrivateScope, Public, HideBySig, SpecialName
    set_ClampingDeviceOn(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ZTop(): PrivateScope, Public, HideBySig, SpecialName
    set_ZTop(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Way(): PrivateScope, Public, HideBySig, SpecialName
    set_Way(Double): PrivateScope, Public, HideBySig, SpecialName
    get_WayWithoutFreePuffOn(): PrivateScope, Public, HideBySig, SpecialName
    set_WayWithoutFreePuffOn(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_WayWithoutFreePuff(): PrivateScope, Public, HideBySig, SpecialName
    set_WayWithoutFreePuff(Double): PrivateScope, Public, HideBySig, SpecialName
    get_WayXY(): PrivateScope, Public, HideBySig, SpecialName
    set_WayXY(Double): PrivateScope, Public, HideBySig, SpecialName
    get_WayInX(): PrivateScope, Public, HideBySig, SpecialName
    set_WayInX(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_WayInY(): PrivateScope, Public, HideBySig, SpecialName
    set_WayInY(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_WayInZ(): PrivateScope, Public, HideBySig, SpecialName
    set_WayInZ(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_BusyArgbColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BusyArgbColor(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_FreeArgbColor(): PrivateScope, Public, HideBySig, SpecialName
    set_FreeArgbColor(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_UnUsedArgbColor(): PrivateScope, Public, HideBySig, SpecialName
    set_UnUsedArgbColor(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Speed(): PrivateScope, Public, HideBySig, SpecialName
    set_Speed(Double): PrivateScope, Public, HideBySig, SpecialName
    get_PUSpeed(): PrivateScope, Public, HideBySig, SpecialName
    set_PUSpeed(Double): PrivateScope, Public, HideBySig, SpecialName
    get_WaitTime(): PrivateScope, Public, HideBySig, SpecialName
    set_WaitTime(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SpindleWaitTime(): PrivateScope, Public, HideBySig, SpecialName
    set_SpindleWaitTime(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_FreePuffPermanently(): PrivateScope, Public, HideBySig, SpecialName
    set_FreePuffPermanently(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_FreePuffOn(): PrivateScope, Public, HideBySig, SpecialName
    set_FreePuffOn(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_FreePuffSec(): PrivateScope, Public, HideBySig, SpecialName
    set_FreePuffSec(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_FreePuffPin(): PrivateScope, Public, HideBySig, SpecialName
    set_FreePuffPin(Output): PrivateScope, Public, HideBySig, SpecialName
    get_AutoToolHoodMonitoring(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoToolHoodMonitoring(AutoToolMonitoring): PrivateScope, Public, HideBySig, SpecialName
    get_RelaySpindleCheckOn(): PrivateScope, Public, HideBySig, SpecialName
    set_RelaySpindleCheckOn(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_RelaySpindleCheckOff(): PrivateScope, Public, HideBySig, SpecialName
    set_RelaySpindleCheckOff(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AllowMeasuringOutside(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowMeasuringOutside(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_RelaySpindelCheck(): PrivateScope, Public, HideBySig, SpecialName
    set_RelaySpindelCheck(Input): PrivateScope, Public, HideBySig, SpecialName
    get_RelaySpindelCheckDelay(): PrivateScope, Public, HideBySig, SpecialName
    set_RelaySpindelCheckDelay(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_RelaySpindelCheckInvert(): PrivateScope, Public, HideBySig, SpecialName
    set_RelaySpindelCheckInvert(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AfterEndPutOff(): PrivateScope, Public, HideBySig, SpecialName
    set_AfterEndPutOff(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_UseT0(): PrivateScope, Public, HideBySig, SpecialName
    set_UseT0(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MoveAfterScanUP(): PrivateScope, Public, HideBySig, SpecialName
    set_MoveAfterScanUP(MoveAfter): PrivateScope, Public, HideBySig, SpecialName
    get_MoveXYAfterEnd(): PrivateScope, Public, HideBySig, SpecialName
    set_MoveXYAfterEnd(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MoveXAfterEnd(): PrivateScope, Public, HideBySig, SpecialName
    set_MoveXAfterEnd(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MoveYAfterEnd(): PrivateScope, Public, HideBySig, SpecialName
    set_MoveYAfterEnd(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ZeroMoveAtTheEndOfProcess(): PrivateScope, Public, HideBySig, SpecialName
    set_ZeroMoveAtTheEndOfProcess(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MoveAfterAutoToolUp(): PrivateScope, Public, HideBySig, SpecialName
    set_MoveAfterAutoToolUp(MoveAfter): PrivateScope, Public, HideBySig, SpecialName
    get_CloseAfterPutOffs(): PrivateScope, Public, HideBySig, SpecialName
    set_CloseAfterPutOffs(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.OutputStatus: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    De.Boenigk.SMC5D.Basics.Output Output 'get set' : 
    Boolean Invert 'get set' : 
    Int32 Wait 'get set' : 
  Methods:
    get_Output(): PrivateScope, Public, HideBySig, SpecialName
    set_Output(Output): PrivateScope, Public, HideBySig, SpecialName
    get_Invert(): PrivateScope, Public, HideBySig, SpecialName
    set_Invert(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Wait(): PrivateScope, Public, HideBySig, SpecialName
    set_Wait(Int32): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.BacklashSettings: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean MM 'get set' : 
    Boolean On 'get set' : 
    Double X   'get set' : 
    Double Y   'get set' : 
    Double Z   'get set' : 
    Double A   'get set' : 
    Double B   'get set' : 
  Methods:
    get_MM(): PrivateScope, Public, HideBySig, SpecialName
    set_MM(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_On(): PrivateScope, Public, HideBySig, SpecialName
    set_On(Boolean): PrivateScope, Public, HideBySig, SpecialName
    CalculateStartStopStepsToMMs(Connector, Axis, ManualMoveAxis): PrivateScope, Assembly, HideBySig
    GetMaxSteps(SMCSettings): PrivateScope, Public, HideBySig
    GetXSteps(SMCSettings): PrivateScope, Public, HideBySig
    GetYSteps(SMCSettings): PrivateScope, Public, HideBySig
    GetZSteps(SMCSettings): PrivateScope, Public, HideBySig
    GetASteps(SMCSettings): PrivateScope, Public, HideBySig
    GetBSteps(SMCSettings): PrivateScope, Public, HideBySig
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    set_X(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    set_Y(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Z(): PrivateScope, Public, HideBySig, SpecialName
    set_Z(Double): PrivateScope, Public, HideBySig, SpecialName
    get_A(): PrivateScope, Public, HideBySig, SpecialName
    set_A(Double): PrivateScope, Public, HideBySig, SpecialName
    get_B(): PrivateScope, Public, HideBySig, SpecialName
    set_B(Double): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.CompensationSettings: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean On 'get set' : 
    Boolean Show 'get set' : 
    System.Collections.Generic.List`1[De.Boenigk.SMC5D.Basics.XYPointD] Points 'get set' : 
    De.Boenigk.SMC5D.Basics.XYPointD Offset 'get set' : 
  Methods:
    get_On(): PrivateScope, Public, HideBySig, SpecialName
    set_On(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Show(): PrivateScope, Public, HideBySig, SpecialName
    set_Show(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Points(): PrivateScope, Public, HideBySig, SpecialName
    set_Points(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(XYPointD): PrivateScope, Public, HideBySig, SpecialName
    ImportFile(String, String, XYPointD): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Settings.DoubleX2Y2Settings: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Adjust 'get set' : 
    AdjustAxes AdjustAx 'get set' : 
    Boolean X2Y2Invert 'get set' : 
  Methods:
    get_Adjust(): PrivateScope, Public, HideBySig, SpecialName
    set_Adjust(Double): PrivateScope, Public, HideBySig, SpecialName
    get_AdjustAx(): PrivateScope, Public, HideBySig, SpecialName
    set_AdjustAx(AdjustAxes): PrivateScope, Public, HideBySig, SpecialName
    get_X2Y2Invert(): PrivateScope, Public, HideBySig, SpecialName
    set_X2Y2Invert(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.EmbossingPen: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean UseToolPropertyOffset 'get set' : 
    Boolean ON 'get set' : 
    System.Decimal OffsetX 'get set' : 
    System.Decimal OffsetY 'get set' : 
    De.Boenigk.SMC5D.Basics.Output RelayEmbossingOut 'get set' : 
  Methods:
    get_UseToolPropertyOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_UseToolPropertyOffset(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ON(): PrivateScope, Public, HideBySig, SpecialName
    set_ON(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetX(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetX(Decimal): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetY(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetY(Decimal): PrivateScope, Public, HideBySig, SpecialName
    get_RelayEmbossingOut(): PrivateScope, Public, HideBySig, SpecialName
    set_RelayEmbossingOut(Output): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.EmergencySettings: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean On 'get set' : 
    System.String IgnoreConditionString 'get set' : 
    Boolean IfMilling 'get set' : 
    Boolean MonitoringWhileWaitingG04H 'get set' : 
    System.String[] MillingTs 'get set' : 
    Boolean Tool 'get set' : 
    Boolean OutputOn 'get set' : 
    De.Boenigk.SMC5D.Basics.Output Output 'get set' : 
    Boolean DelOn 'get set' : 
    Int32 Del  'get set' : 
    Int32 InputDelay 'get set' : 
    De.Boenigk.SMC5D.Basics.Input Input 'get set' : 
    De.Boenigk.SMC5D.Basics.Module Module 'get set' : 
    Boolean Invert 'get set' : 
    Boolean Automatically 'get set' : 
    System.String Text 'get set' : 
    Boolean ReduceJobSpeed 'get set' : 
    Byte JobSpeed 'get set' : 
    Boolean ExecuteReference 'get set' : 
  Methods:
    get_On(): PrivateScope, Public, HideBySig, SpecialName
    set_On(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IgnoreConditionString(): PrivateScope, Public, HideBySig, SpecialName
    set_IgnoreConditionString(String): PrivateScope, Public, HideBySig, SpecialName
    get_IfMilling(): PrivateScope, Public, HideBySig, SpecialName
    set_IfMilling(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MonitoringWhileWaitingG04H(): PrivateScope, Public, HideBySig, SpecialName
    set_MonitoringWhileWaitingG04H(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MillingTs(): PrivateScope, Public, HideBySig, SpecialName
    set_MillingTs(String[]): PrivateScope, Public, HideBySig, SpecialName
    IsMillingTs(Int32): PrivateScope, Public, HideBySig
    get_Tool(): PrivateScope, Public, HideBySig, SpecialName
    set_Tool(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_OutputOn(): PrivateScope, Public, HideBySig, SpecialName
    set_OutputOn(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Output(): PrivateScope, Public, HideBySig, SpecialName
    set_Output(Output): PrivateScope, Public, HideBySig, SpecialName
    get_DelOn(): PrivateScope, Public, HideBySig, SpecialName
    set_DelOn(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Del(): PrivateScope, Public, HideBySig, SpecialName
    set_Del(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetStartDateTime(): PrivateScope, Public, HideBySig
    ResetStartDateTime(): PrivateScope, Public, HideBySig
    get_InputDelay(): PrivateScope, Public, HideBySig, SpecialName
    set_InputDelay(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Input(): PrivateScope, Public, HideBySig, SpecialName
    set_Input(Input): PrivateScope, Public, HideBySig, SpecialName
    get_Module(): PrivateScope, Public, HideBySig, SpecialName
    set_Module(Module): PrivateScope, Public, HideBySig, SpecialName
    get_Invert(): PrivateScope, Public, HideBySig, SpecialName
    set_Invert(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Automatically(): PrivateScope, Public, HideBySig, SpecialName
    set_Automatically(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
    get_ReduceJobSpeed(): PrivateScope, Public, HideBySig, SpecialName
    set_ReduceJobSpeed(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_JobSpeed(): PrivateScope, Public, HideBySig, SpecialName
    set_JobSpeed(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_ExecuteReference(): PrivateScope, Public, HideBySig, SpecialName
    set_ExecuteReference(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.HandWheelSettings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsLicensed 'get set' : 
    Boolean On 'get set' : 
    Byte SpeedStep 'get set' : 
    Boolean KeypadOff 'get set' : 
    System.Decimal Speed01 'get set' : 
    System.Decimal Speed001 'get set' : 
    System.Decimal MaxSpeedXY 'get set' : 
    System.Decimal MaxSpeedZ 'get set' : 
    System.Decimal MaxSpeedA 'get set' : 
    System.Decimal MaxSpeedB 'get set' : 
    Byte Option 'get set' : 
  Methods:
    get_IsLicensed(): PrivateScope, Public, HideBySig, SpecialName
    set_IsLicensed(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_On(): PrivateScope, Public, HideBySig, SpecialName
    set_On(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_SpeedStep(): PrivateScope, Public, HideBySig, SpecialName
    set_SpeedStep(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_KeypadOff(): PrivateScope, Public, HideBySig, SpecialName
    set_KeypadOff(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Speed01(): PrivateScope, Public, HideBySig, SpecialName
    set_Speed01(Decimal): PrivateScope, Public, HideBySig, SpecialName
    get_Speed001(): PrivateScope, Public, HideBySig, SpecialName
    set_Speed001(Decimal): PrivateScope, Public, HideBySig, SpecialName
    get_MaxSpeedXY(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxSpeedXY(Decimal): PrivateScope, Public, HideBySig, SpecialName
    get_MaxSpeedZ(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxSpeedZ(Decimal): PrivateScope, Public, HideBySig, SpecialName
    get_MaxSpeedA(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxSpeedA(Decimal): PrivateScope, Public, HideBySig, SpecialName
    get_MaxSpeedB(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxSpeedB(Decimal): PrivateScope, Public, HideBySig, SpecialName
    get_Option(): PrivateScope, Public, HideBySig, SpecialName
    set_Option(Byte): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.HeightSensor: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double SensorOffsetX 'get set' : 
    Double SensorOffsetY 'get set' : 
    Int32 Hill 'get set' : 
    Boolean HillDin 'get set' : 
    System.Decimal HillDistanceLength 'get set' : 
    Boolean ScanAreaPinInvert 'get set' : 
    De.Boenigk.SMC5D.Basics.Input ScanAreaPin 'get set' : 
    Boolean MeasureToolPinInvert 'get set' : 
    De.Boenigk.SMC5D.Basics.Input MeasureToolPin 'get set' : 
  Methods:
    get_SensorOffsetX(): PrivateScope, Public, HideBySig, SpecialName
    set_SensorOffsetX(Double): PrivateScope, Public, HideBySig, SpecialName
    get_SensorOffsetY(): PrivateScope, Public, HideBySig, SpecialName
    set_SensorOffsetY(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Hill(): PrivateScope, Public, HideBySig, SpecialName
    set_Hill(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_HillDin(): PrivateScope, Public, HideBySig, SpecialName
    set_HillDin(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_HillDistanceLength(): PrivateScope, Public, HideBySig, SpecialName
    set_HillDistanceLength(Decimal): PrivateScope, Public, HideBySig, SpecialName
    get_ScanAreaPinInvert(): PrivateScope, Public, HideBySig, SpecialName
    set_ScanAreaPinInvert(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ScanAreaPin(): PrivateScope, Public, HideBySig, SpecialName
    set_ScanAreaPin(Input): PrivateScope, Public, HideBySig, SpecialName
    get_MeasureToolPinInvert(): PrivateScope, Public, HideBySig, SpecialName
    set_MeasureToolPinInvert(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MeasureToolPin(): PrivateScope, Public, HideBySig, SpecialName
    set_MeasureToolPin(Input): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.Hood: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 InputDelay 'get set' : 
    System.Collections.Generic.List`1[De.Boenigk.SMC5D.Settings.HoodSettings] Hoods 'get set' : 
  Methods:
    get_InputDelay(): PrivateScope, Public, HideBySig, SpecialName
    set_InputDelay(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Hoods(): PrivateScope, Public, HideBySig, SpecialName
    set_Hoods(List`1): PrivateScope, Public, HideBySig, SpecialName
    GetMinSpeed(List`1): PrivateScope, Public, HideBySig
    GetMessages(List`1): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Settings.HoodSettings: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean On 'get set' : 
    Double SpeedOff 'get set' : 
    System.String HoodMessage 'get set' : 
    De.Boenigk.SMC5D.Basics.Module Module 'get set' : 
    Boolean ReduceSpeedIfHoodOpen 'get set' : 
    De.Boenigk.SMC5D.Basics.Input Input 'get set' : 
    Boolean Invert 'get set' : 
    Int32 InputDelay 'get set' : 
  Methods:
    get_On(): PrivateScope, Public, HideBySig, SpecialName
    set_On(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_SpeedOff(): PrivateScope, Public, HideBySig, SpecialName
    set_SpeedOff(Double): PrivateScope, Public, HideBySig, SpecialName
    get_HoodMessage(): PrivateScope, Public, HideBySig, SpecialName
    set_HoodMessage(String): PrivateScope, Public, HideBySig, SpecialName
    get_Module(): PrivateScope, Public, HideBySig, SpecialName
    set_Module(Module): PrivateScope, Public, HideBySig, SpecialName
    get_ReduceSpeedIfHoodOpen(): PrivateScope, Public, HideBySig, SpecialName
    set_ReduceSpeedIfHoodOpen(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Input(): PrivateScope, Public, HideBySig, SpecialName
    set_Input(Input): PrivateScope, Public, HideBySig, SpecialName
    get_Invert(): PrivateScope, Public, HideBySig, SpecialName
    set_Invert(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_InputDelay(): PrivateScope, Public, HideBySig, SpecialName
    set_InputDelay(Int32): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.InputRequestSettings: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Byte RequestCount 'get set' : 
    Int32 RequestTime 'get set' : 
  Methods:
    get_RequestCount(): PrivateScope, Public, HideBySig, SpecialName
    set_RequestCount(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_RequestTime(): PrivateScope, Public, HideBySig, SpecialName
    set_RequestTime(Int32): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.JoystickSettings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean On 'get set' : 
    System.Decimal MaxSpeedXY 'get set' : 
    System.Decimal MaxSpeedZ 'get set' : 
    Byte Options 'get set' : 
    UInt32 XYDiagonal 'get set' : 
  Methods:
    get_On(): PrivateScope, Public, HideBySig, SpecialName
    set_On(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MaxSpeedXY(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxSpeedXY(Decimal): PrivateScope, Public, HideBySig, SpecialName
    get_MaxSpeedZ(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxSpeedZ(Decimal): PrivateScope, Public, HideBySig, SpecialName
    get_Options(): PrivateScope, Public, HideBySig, SpecialName
    set_Options(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_XYDiagonal(): PrivateScope, Public, HideBySig, SpecialName
    set_XYDiagonal(UInt32): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.LanSettings: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String IP 'get set' : 
    System.String IPn 'get set' : 
    System.String Mask 'get set' : 
    System.String DefaultGateway 'get set' : 
    System.String Hostname 'get set' : 
    Int32 Port 'get set' : 
    Boolean DHCPServer 'get set' : 
  Methods:
    get_IP(): PrivateScope, Public, HideBySig, SpecialName
    set_IP(String): PrivateScope, Public, HideBySig, SpecialName
    get_IPn(): PrivateScope, Public, HideBySig, SpecialName
    set_IPn(String): PrivateScope, Public, HideBySig, SpecialName
    get_Mask(): PrivateScope, Public, HideBySig, SpecialName
    set_Mask(String): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultGateway(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultGateway(String): PrivateScope, Public, HideBySig, SpecialName
    get_Hostname(): PrivateScope, Public, HideBySig, SpecialName
    set_Hostname(String): PrivateScope, Public, HideBySig, SpecialName
    get_Port(): PrivateScope, Public, HideBySig, SpecialName
    set_Port(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_DHCPServer(): PrivateScope, Public, HideBySig, SpecialName
    set_DHCPServer(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.LatheSettings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 StepsTurn 'get set' : 
    Byte Acceleration 'get set' : 
    Boolean LatheDirection 'get set' : 
    Int32 LatheSpeed 'get set' : 
  Methods:
    get_StepsTurn(): PrivateScope, Public, HideBySig, SpecialName
    set_StepsTurn(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Acceleration(): PrivateScope, Public, HideBySig, SpecialName
    set_Acceleration(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_LatheDirection(): PrivateScope, Public, HideBySig, SpecialName
    set_LatheDirection(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_LatheSpeed(): PrivateScope, Public, HideBySig, SpecialName
    set_LatheSpeed(Int32): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.MMoveSettings: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 Interval 'get set' : 
    UInt32 StepLong 'get set' : 
    System.Decimal SpeedXY 'get set' : 
    System.Decimal SpeedZ 'get set' : 
    System.Decimal SpeedA 'get set' : 
    System.Decimal SpeedB 'get set' : 
  Methods:
    get_Interval(): PrivateScope, Public, HideBySig, SpecialName
    set_Interval(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_StepLong(): PrivateScope, Public, HideBySig, SpecialName
    set_StepLong(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_SpeedXY(): PrivateScope, Public, HideBySig, SpecialName
    set_SpeedXY(Decimal): PrivateScope, Public, HideBySig, SpecialName
    get_SpeedZ(): PrivateScope, Public, HideBySig, SpecialName
    set_SpeedZ(Decimal): PrivateScope, Public, HideBySig, SpecialName
    get_SpeedA(): PrivateScope, Public, HideBySig, SpecialName
    set_SpeedA(Decimal): PrivateScope, Public, HideBySig, SpecialName
    get_SpeedB(): PrivateScope, Public, HideBySig, SpecialName
    set_SpeedB(Decimal): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.MeasureZForZeroPoint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    De.Boenigk.SMC5D.Basics.Input Pin 'get set' : 
    Boolean PinInvert 'get set' : 
    Boolean MoveDirectionMeasureZAutomaticallyInvert 'get set' : 
    Double AutomaticallyZScanSpeed 'get set' : 
  Methods:
    get_Pin(): PrivateScope, Public, HideBySig, SpecialName
    set_Pin(Input): PrivateScope, Public, HideBySig, SpecialName
    get_PinInvert(): PrivateScope, Public, HideBySig, SpecialName
    set_PinInvert(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MoveDirectionMeasureZAutomaticallyInvert(): PrivateScope, Public, HideBySig, SpecialName
    set_MoveDirectionMeasureZAutomaticallyInvert(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AutomaticallyZScanSpeed(): PrivateScope, Public, HideBySig, SpecialName
    set_AutomaticallyZScanSpeed(Double): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.Monitoring: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean On 'get set' : 
    Double MonitoringToollength 'get set' : 
    Int32 Min  'get set' : 
    Double AreaMonitoringTolerance 'get set' : 
  Methods:
    get_On(): PrivateScope, Public, HideBySig, SpecialName
    set_On(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MonitoringToollength(): PrivateScope, Public, HideBySig, SpecialName
    set_MonitoringToollength(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Min(): PrivateScope, Public, HideBySig, SpecialName
    set_Min(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetSecury(Double): PrivateScope, Public, HideBySig
    get_AreaMonitoringTolerance(): PrivateScope, Public, HideBySig, SpecialName
    set_AreaMonitoringTolerance(Double): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.MotorCurrent: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean On 'get set' : 
    Boolean Invert 'get set' : 
    UInt32 Time 'get set' : 
    De.Boenigk.SMC5D.Basics.Output Output 'get ' : 
  Methods:
    get_On(): PrivateScope, Public, HideBySig, SpecialName
    set_On(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Invert(): PrivateScope, Public, HideBySig, SpecialName
    set_Invert(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Time(): PrivateScope, Public, HideBySig, SpecialName
    set_Time(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Output(): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.OutputSignal: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, De.Boenigk.SMC5D.Basics.Output): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, De.Boenigk.SMC5D.Basics.Output, OutputType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    OutputType Type 'get set' : 
    Boolean ON 'get set' : 
    Boolean Invert 'get set' : 
    De.Boenigk.SMC5D.Basics.Output Output 'get set' : 
    System.String Name 'get set' : 
  Methods:
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(OutputType): PrivateScope, Public, HideBySig, SpecialName
    get_ON(): PrivateScope, Public, HideBySig, SpecialName
    set_ON(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Invert(): PrivateScope, Public, HideBySig, SpecialName
    set_Invert(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Output(): PrivateScope, Public, HideBySig, SpecialName
    set_Output(Output): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.OutputSignals: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 C_Count = 2 : Public, Static, Literal, HasDefault
  Properties:
    System.Collections.Generic.List`1[De.Boenigk.SMC5D.Settings.OutputSignal] Outputs 'get set' : 
  Methods:
    get_Outputs(): PrivateScope, Public, HideBySig, SpecialName
    set_Outputs(List`1): PrivateScope, Public, HideBySig, SpecialName
    Get(OutputType): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Settings.OutputsInvert: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt16 OutputsOfCon2 'get set' : 
    UInt16 OutputsOfCon3 'get set' : 
    UInt16 OutputsOfCon4 'get set' : 
    UInt16 OutputsOfMod1Con3 'get set' : 
    UInt16 OutputsOfMod1Con4 'get set' : 
    UInt16 OutputsOfMod2Con3 'get set' : 
    UInt16 OutputsOfMod2Con4 'get set' : 
    UInt16 OutputsOfMod3Con3 'get set' : 
    UInt16 OutputsOfMod3Con4 'get set' : 
    UInt16 OutputsOfMod4Con3 'get set' : 
    UInt16 OutputsOfMod4Con4 'get set' : 
    UInt16 OutputsOfMod5Con3 'get set' : 
    UInt16 OutputsOfMod5Con4 'get set' : 
  Methods:
    get_OutputsOfCon2(): PrivateScope, Public, HideBySig, SpecialName
    set_OutputsOfCon2(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_OutputsOfCon3(): PrivateScope, Public, HideBySig, SpecialName
    set_OutputsOfCon3(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_OutputsOfCon4(): PrivateScope, Public, HideBySig, SpecialName
    set_OutputsOfCon4(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_OutputsOfMod1Con3(): PrivateScope, Public, HideBySig, SpecialName
    set_OutputsOfMod1Con3(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_OutputsOfMod1Con4(): PrivateScope, Public, HideBySig, SpecialName
    set_OutputsOfMod1Con4(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_OutputsOfMod2Con3(): PrivateScope, Public, HideBySig, SpecialName
    set_OutputsOfMod2Con3(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_OutputsOfMod2Con4(): PrivateScope, Public, HideBySig, SpecialName
    set_OutputsOfMod2Con4(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_OutputsOfMod3Con3(): PrivateScope, Public, HideBySig, SpecialName
    set_OutputsOfMod3Con3(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_OutputsOfMod3Con4(): PrivateScope, Public, HideBySig, SpecialName
    set_OutputsOfMod3Con4(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_OutputsOfMod4Con3(): PrivateScope, Public, HideBySig, SpecialName
    set_OutputsOfMod4Con3(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_OutputsOfMod4Con4(): PrivateScope, Public, HideBySig, SpecialName
    set_OutputsOfMod4Con4(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_OutputsOfMod5Con3(): PrivateScope, Public, HideBySig, SpecialName
    set_OutputsOfMod5Con3(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_OutputsOfMod5Con4(): PrivateScope, Public, HideBySig, SpecialName
    set_OutputsOfMod5Con4(UInt16): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.PasswordSettings: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Password 'get set' : 
    System.String Clause 'get set' : 
    Boolean LockTable 'get set' : 
  Methods:
    get_Password(): PrivateScope, Public, HideBySig, SpecialName
    set_Password(String): PrivateScope, Public, HideBySig, SpecialName
    get_Clause(): PrivateScope, Public, HideBySig, SpecialName
    set_Clause(String): PrivateScope, Public, HideBySig, SpecialName
    get_LockTable(): PrivateScope, Public, HideBySig, SpecialName
    set_LockTable(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Settings.Pause: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ON 'get set' : 
    Boolean Invert 'get set' : 
  Methods:
    get_ON(): PrivateScope, Public, HideBySig, SpecialName
    set_ON(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Invert(): PrivateScope, Public, HideBySig, SpecialName
    set_Invert(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.PufferSettings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Default 'get set' : 
    Int32 Seconds 'get set' : 
    Int32 SpeedPercent 'get set' : 
  Methods:
    get_Default(): PrivateScope, Public, HideBySig, SpecialName
    set_Default(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Seconds(): PrivateScope, Public, HideBySig, SpecialName
    set_Seconds(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SpeedPercent(): PrivateScope, Public, HideBySig, SpecialName
    set_SpeedPercent(Int32): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.ReduceMaxSpeed: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean On 'get set' : 
    Int32 MinSteps 'get set' : 
    System.Decimal ReduceConstant 'get set' : 
  Methods:
    get_On(): PrivateScope, Public, HideBySig, SpecialName
    set_On(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MinSteps(): PrivateScope, Public, HideBySig, SpecialName
    set_MinSteps(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ReduceConstant(): PrivateScope, Public, HideBySig, SpecialName
    set_ReduceConstant(Decimal): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.ReferencePosition: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ReferenceLU 'get set' : 
    Boolean ReferenceRU 'get set' : 
    Boolean ReferenceRO 'get set' : 
    Boolean ReferenceLO 'get set' : 
  Methods:
    get_ReferenceLU(): PrivateScope, Public, HideBySig, SpecialName
    set_ReferenceLU(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ReferenceRU(): PrivateScope, Public, HideBySig, SpecialName
    set_ReferenceRU(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ReferenceRO(): PrivateScope, Public, HideBySig, SpecialName
    set_ReferenceRO(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ReferenceLO(): PrivateScope, Public, HideBySig, SpecialName
    set_ReferenceLO(Boolean): PrivateScope, Public, HideBySig, SpecialName
Struct De.Boenigk.SMC5D.Settings.ReferenceSequence: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    De.Boenigk.SMC5D.Settings.ReferenceSequence ZXYA = 0 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Settings.ReferenceSequence ZYXA = 1 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Settings.ReferenceSequence XZYA = 2 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Settings.ReferenceSequence YZXA = 3 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Settings.ReferenceSequence ZABYX = 4 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Settings.ReferenceSequence ZXYBA = 5 : Public, Static, Literal, HasDefault
Class De.Boenigk.SMC5D.Settings.RestrictedArea: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean On 'get set' : 
    System.String Text 'get set' : 
    Double X1  'get set' : 
    Double Y1  'get set' : 
    Double X2  'get set' : 
    Double Y2  'get set' : 
    Int32 Allow 'get set' : 
  Methods:
    get_On(): PrivateScope, Public, HideBySig, SpecialName
    set_On(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
    get_X1(): PrivateScope, Public, HideBySig, SpecialName
    set_X1(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Y1(): PrivateScope, Public, HideBySig, SpecialName
    set_Y1(Double): PrivateScope, Public, HideBySig, SpecialName
    get_X2(): PrivateScope, Public, HideBySig, SpecialName
    set_X2(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Y2(): PrivateScope, Public, HideBySig, SpecialName
    set_Y2(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Allow(): PrivateScope, Public, HideBySig, SpecialName
    set_Allow(Int32): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.RestrictedAreaSettings: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.ArrayList Area 'get ' : 
  Methods:
    get_Area(): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.Rotate: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean On 'get set' : 
    Boolean XRotateAxis 'get set' : 
    System.Decimal Diameter 'get set' : 
    Int32 StepsTurn 'get set' : 
    Boolean DriveDirectionInvert 'get set' : 
    Boolean ReferenceDriveDirectionInvert 'get set' : 
    Boolean ReferenceSwitchInvert 'get set' : 
    De.Boenigk.SMC5D.Basics.AxisUnit AxisUnit 'get set' : 
  Methods:
    get_On(): PrivateScope, Public, HideBySig, SpecialName
    set_On(Boolean): PrivateScope, Public, HideBySig, SpecialName
    set_XRotateAxis(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_XRotateAxis(): PrivateScope, Public, HideBySig, SpecialName
    get_Diameter(): PrivateScope, Public, HideBySig, SpecialName
    set_Diameter(Decimal): PrivateScope, Public, HideBySig, SpecialName
    get_StepsTurn(): PrivateScope, Public, HideBySig, SpecialName
    set_StepsTurn(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_DriveDirectionInvert(): PrivateScope, Public, HideBySig, SpecialName
    set_DriveDirectionInvert(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ReferenceDriveDirectionInvert(): PrivateScope, Public, HideBySig, SpecialName
    set_ReferenceDriveDirectionInvert(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ReferenceSwitchInvert(): PrivateScope, Public, HideBySig, SpecialName
    set_ReferenceSwitchInvert(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AxisUnit(): PrivateScope, Public, HideBySig, SpecialName
    set_AxisUnit(AxisUnit): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.SMCAxis: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    De.Boenigk.SMC5D.Settings.Tangential Tangential 'get set' : 
    De.Boenigk.SMC5D.Settings.Rotate Rotate 'get set' : 
    De.Boenigk.SMC5D.Settings.Monitoring Monitoring 'get set' : 
    Int32 MoveFromReferenceSwitch 'get set' : 
    Int32 FastMoveToReferencePoint 'get set' : 
    Byte DoubleRefPin 'get set' : 
    Boolean DoubleRefPinInvert 'get set' : 
    Boolean Double 'get set' : 
    Boolean On 'get set' : 
    Double Length 'get set' : 
    Int32 StepsTurn 'get set' : 
    Double WayTurn 'get set' : 
    Boolean StartStopReferenceValue 'get set' : 
    Double StartStopSpeed 'get set' : 
    Double MaximumSpeed 'get set' : 
    Double ReferenceSpeed 'get set' : 
    Byte ReferencePinNumber 'get set' : 
    Boolean ReferenceDriveDirectionInvert 'get set' : 
    Boolean DriveDirectionInvert 'get set' : 
    Boolean ReferenceSwitchInvert 'get set' : 
  Methods:
    GetDriveDirectionInvert(): PrivateScope, Public, HideBySig
    GetReferenceSwitchInvert(): PrivateScope, Public, HideBySig
    GetReferenceDriveDirectionInvert(): PrivateScope, Public, HideBySig
    get_Tangential(): PrivateScope, Public, HideBySig, SpecialName
    set_Tangential(Tangential): PrivateScope, Public, HideBySig, SpecialName
    get_Rotate(): PrivateScope, Public, HideBySig, SpecialName
    set_Rotate(Rotate): PrivateScope, Public, HideBySig, SpecialName
    get_Monitoring(): PrivateScope, Public, HideBySig, SpecialName
    set_Monitoring(Monitoring): PrivateScope, Public, HideBySig, SpecialName
    get_MoveFromReferenceSwitch(): PrivateScope, Public, HideBySig, SpecialName
    set_MoveFromReferenceSwitch(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_FastMoveToReferencePoint(): PrivateScope, Public, HideBySig, SpecialName
    set_FastMoveToReferencePoint(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_DoubleRefPin(): PrivateScope, Public, HideBySig, SpecialName
    set_DoubleRefPin(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_DoubleRefPinInvert(): PrivateScope, Public, HideBySig, SpecialName
    set_DoubleRefPinInvert(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Double(): PrivateScope, Public, HideBySig, SpecialName
    set_Double(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_On(): PrivateScope, Public, HideBySig, SpecialName
    set_On(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    set_Length(Double): PrivateScope, Public, HideBySig, SpecialName
    get_StepsTurn(): PrivateScope, Public, HideBySig, SpecialName
    set_StepsTurn(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_WayTurn(): PrivateScope, Public, HideBySig, SpecialName
    set_WayTurn(Double): PrivateScope, Public, HideBySig, SpecialName
    get_StartStopReferenceValue(): PrivateScope, Public, HideBySig, SpecialName
    set_StartStopReferenceValue(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_StartStopSpeed(): PrivateScope, Public, HideBySig, SpecialName
    set_StartStopSpeed(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MaximumSpeed(): PrivateScope, Public, HideBySig, SpecialName
    set_MaximumSpeed(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ReferenceSpeed(): PrivateScope, Public, HideBySig, SpecialName
    set_ReferenceSpeed(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ReferencePinNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_ReferencePinNumber(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_ReferenceDriveDirectionInvert(): PrivateScope, Public, HideBySig, SpecialName
    set_ReferenceDriveDirectionInvert(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_DriveDirectionInvert(): PrivateScope, Public, HideBySig, SpecialName
    set_DriveDirectionInvert(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ReferenceSwitchInvert(): PrivateScope, Public, HideBySig, SpecialName
    set_ReferenceSwitchInvert(Boolean): PrivateScope, Public, HideBySig, SpecialName
Struct De.Boenigk.SMC5D.Settings.SMC: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    De.Boenigk.SMC5D.Settings.SMC SMC5D_P32 = 0 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Settings.SMC SMC5D_M4 = 1 : Public, Static, Literal, HasDefault
Class De.Boenigk.SMC5D.Settings.SMCSettings: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte C_DAC_INT_10V = 226 : Public, Static, Literal, HasDefault
    Byte C_DAC_INT_10V02 = 255 : Public, Static, Literal, HasDefault
  Properties:
    De.Boenigk.SMC5D.Settings.SMC SMCType 'get set' : 
    System.String MACAddress 'get set' : 
    De.Boenigk.SMC5D.Settings.LatheSettings Lathe 'get set' : 
    Int32 Interval 'get set' : 
    UInt32 PicFreq 'get set' : 
    De.Boenigk.SMC5D.Basics.GlobPosition GlobPosition 'get set' : 
    De.Boenigk.SMC5D.Settings.USBSettings Usb 'get set' : 
    De.Boenigk.SMC5D.Settings.TangentialGlobal TangentialGlobal 'get set' : 
    De.Boenigk.SMC5D.Settings.CompensationSettings CompensationSettings 'get set' : 
    Byte Log   'get set' : 
    Byte MAXSpindleSpeedOutput 'get set' : 
    Boolean CreateJobInBackGround 'get set' : 
    Int16 WaitAfterAxisSwitch 'get set' : 
    Int16 WaitAfterSwitch 'get set' : 
    Boolean AGEM_XY2 'get set' : 
    Boolean IgnoreFirstInputChanged 'get set' : 
    De.Boenigk.SMC5D.Settings.OutputSignals OutputSignals 'get set' : 
    De.Boenigk.SMC5D.Settings.SmoothSpeed SmoothSpeed 'get set' : 
    De.Boenigk.SMC5D.Settings.ReduceMaxSpeed ReduceMaxSpeed 'get set' : 
    Single AngleConst 'get set' : 
    Double CurrentToollength 'get set' : 
    Boolean UserCurrentToollengthForMonitoring 'get set' : 
    Double Alpha 'get set' : 
    System.Decimal ASpeedFactor 'get set' : 
    Single CurveSpeed 'get set' : 
    Byte SpindleSpeed 'get set' : 
    Boolean ConnectionByUSB 'get set' : 
    Byte SecurityTime 'get set' : 
    De.Boenigk.SMC5D.Settings.LanSettings Lan 'get set' : 
    Boolean LaserOn 'get set' : 
    De.Boenigk.SMC5D.Settings.OutputsInvert OutputsInvert 'get set' : 
    System.Collections.Generic.List`1[De.Boenigk.SMC5D.Settings.EmergencySettings] Emergency 'get set' : 
    De.Boenigk.SMC5D.Settings.EmergencySettings Emergency1 'get set' : 
    De.Boenigk.SMC5D.Settings.EmergencySettings Emergency2 'get set' : 
    De.Boenigk.SMC5D.Settings.EmergencySettings Emergency3 'get set' : 
    De.Boenigk.SMC5D.Settings.EmergencySettings Emergency4 'get set' : 
    De.Boenigk.SMC5D.Settings.EmergencySettings Emergency5 'get set' : 
    De.Boenigk.SMC5D.Settings.EmergencySettings Emergency6 'get set' : 
    De.Boenigk.SMC5D.Settings.EmergencySettings Emergency7 'get set' : 
    De.Boenigk.SMC5D.Settings.EmergencySettings Emergency8 'get set' : 
    De.Boenigk.SMC5D.Settings.EmergencySettings Emergency9 'get set' : 
    De.Boenigk.SMC5D.Settings.Hood HoodControl 'get set' : 
    De.Boenigk.SMC5D.Settings.HoodSettings Hood 'get set' : 
    De.Boenigk.SMC5D.Settings.MMoveSettings ManualMove 'get set' : 
    Double MaximumSpeedXY 'get ' : 
    De.Boenigk.SMC5D.Settings.Tact Tact 'get set' : 
    Int32 FirmwareVersion 'get set' : 
    UInt16 OutputGranit 'get set' : 
    UInt16 LengthOfOutputGranit 'get set' : 
    UInt16 OptionsGranit 'get set' : 
    De.Boenigk.SMC5D.Settings.HandWheelSettings HandWheelSettings 'get set' : 
    De.Boenigk.SMC5D.Core.INIT_HANDWHEEL INIT_HANDWHEEL 'get set' : 
    De.Boenigk.SMC5D.Settings.JoystickSettings JoystickSettings 'get set' : 
    De.Boenigk.SMC5D.Core.INIT_JOYSTICK INIT_JOYSTICK 'get set' : 
    De.Boenigk.SMC5D.Core.INIT INIT 'get set' : 
    De.Boenigk.SMC5D.Core.INIT_REFERENCE INIT_REFERENCE 'get set' : 
    De.Boenigk.SMC5D.Core.INIT_LASER INIT_LASER 'get set' : 
    De.Boenigk.SMC5D.Settings.PasswordSettings Password 'get set' : 
    De.Boenigk.SMC5D.Settings.DoubleX2Y2Settings DoubleX2Y2 'get set' : 
    De.Boenigk.SMC5D.Settings.ReferencePosition ReferencePosition 'get set' : 
    De.Boenigk.SMC5D.Settings.RestrictedAreaSettings RestrictedArea 'get set' : 
    Boolean KeyMoveNormal 'get set' : 
    De.Boenigk.SMC5D.Settings.EmbossingPen EmbossingPen 'get set' : 
    De.Boenigk.SMC5D.Settings.Z2Settings Z2 'get set' : 
    De.Boenigk.SMC5D.Settings.BacklashSettings Backlash 'get set' : 
    De.Boenigk.SMC5D.Settings.InputRequestSettings InputRequestSettings 'get set' : 
    De.Boenigk.SMC5D.Settings.Pause Pause 'get set' : 
    Boolean ResetSwitchesWhileReference 'get set' : 
    De.Boenigk.SMC5D.Basics.Output Spindle 'get set' : 
    Boolean SpindleOn 'get set' : 
    De.Boenigk.SMC5D.Basics.Output Pump 'get set' : 
    De.Boenigk.SMC5D.Settings.SMCAxis AxisX 'get set' : 
    De.Boenigk.SMC5D.Settings.SMCAxis AxisY 'get set' : 
    De.Boenigk.SMC5D.Settings.SMCAxis AxisZ 'get set' : 
    De.Boenigk.SMC5D.Settings.SMCAxis AxisA 'get set' : 
    De.Boenigk.SMC5D.Settings.SMCAxis AxisB 'get set' : 
    System.String Name 'get set' : 
    De.Boenigk.SMC5D.Settings.HeightSensor HeightSensor 'get set' : 
    De.Boenigk.SMC5D.Settings.MeasureZForZeroPoint MeasureZForZeroPoint 'get set' : 
    De.Boenigk.SMC5D.Settings.ReferenceSequence ReferenceSequence 'get set' : 
    Boolean ReferenceXYSimultan 'get set' : 
    Boolean ConstantWorkingSpeed 'get set' : 
    De.Boenigk.SMC5D.Settings.MotorCurrent MotorCurrent 'get set' : 
    Int32 ManualAdvanceAcceleration 'get set' : 
    Int32 ReferenceAcceleration 'get set' : 
    Double MeasureToolSpeed 'get set' : 
    Double MeasureScanSpeed 'get set' : 
    UInt16 SpeedIncrement 'get set' : 
    UInt16 RefSpeedIncrement 'get set' : 
    Byte Slope 'get set' : 
    Byte IncrementSlope 'get set' : 
    UInt16 StepDirectionTime 'get set' : 
    UInt16 Frequence 'get set' : 
    De.Boenigk.SMC5D.Settings.SteppingDriverSettings SteppingDriver 'get set' : 
    Byte PauseSlope 'get set' : 
    De.Boenigk.SMC5D.Settings.AutoToolSettings AutoToolChangeSettings 'get set' : 
    De.Boenigk.SMC5D.Settings.VacuumSettings Vacuum 'get set' : 
    De.Boenigk.SMC5D.Settings.PufferSettings Puffer 'get set' : 
    UInt32 PlasmaUp 'get set' : 
    UInt32 PlasmaDown 'get set' : 
    Double PlasmaSpeed 'get set' : 
    UInt16 DebouncingTime 'get set' : 
    De.Boenigk.SMC5D.Basics.Output Out8kHz 'get set' : 
    Boolean Out8kHzOn 'get set' : 
    Int32 OutkHz 'get set' : 
    Byte SpeedChangerLevel 'get set' : 
    Boolean ReduceJerking 'get set' : 
    Single ReduceJerkingValue 'get set' : 
  Events:
    UpdateDelegate SettingsUpdated: 
  Methods:
    set_DoubleX2Y2(DoubleX2Y2Settings): PrivateScope, Public, HideBySig, SpecialName
    get_ReferencePosition(): PrivateScope, Public, HideBySig, SpecialName
    set_ReferencePosition(ReferencePosition): PrivateScope, Public, HideBySig, SpecialName
    get_RestrictedArea(): PrivateScope, Public, HideBySig, SpecialName
    set_RestrictedArea(RestrictedAreaSettings): PrivateScope, Public, HideBySig, SpecialName
    get_KeyMoveNormal(): PrivateScope, Public, HideBySig, SpecialName
    set_KeyMoveNormal(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_EmbossingPen(): PrivateScope, Public, HideBySig, SpecialName
    set_EmbossingPen(EmbossingPen): PrivateScope, Public, HideBySig, SpecialName
    get_Z2(): PrivateScope, Public, HideBySig, SpecialName
    set_Z2(Z2Settings): PrivateScope, Public, HideBySig, SpecialName
    get_Backlash(): PrivateScope, Public, HideBySig, SpecialName
    set_Backlash(BacklashSettings): PrivateScope, Public, HideBySig, SpecialName
    get_InputRequestSettings(): PrivateScope, Public, HideBySig, SpecialName
    set_InputRequestSettings(InputRequestSettings): PrivateScope, Public, HideBySig, SpecialName
    get_Pause(): PrivateScope, Public, HideBySig, SpecialName
    set_Pause(Pause): PrivateScope, Public, HideBySig, SpecialName
    get_ResetSwitchesWhileReference(): PrivateScope, Public, HideBySig, SpecialName
    set_ResetSwitchesWhileReference(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Spindle(): PrivateScope, Public, HideBySig, SpecialName
    set_Spindle(Output): PrivateScope, Public, HideBySig, SpecialName
    get_SpindleOn(): PrivateScope, Public, HideBySig, SpecialName
    set_SpindleOn(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Pump(): PrivateScope, Public, HideBySig, SpecialName
    set_Pump(Output): PrivateScope, Public, HideBySig, SpecialName
    get_AxisX(): PrivateScope, Public, HideBySig, SpecialName
    set_AxisX(SMCAxis): PrivateScope, Public, HideBySig, SpecialName
    get_AxisY(): PrivateScope, Public, HideBySig, SpecialName
    set_AxisY(SMCAxis): PrivateScope, Public, HideBySig, SpecialName
    get_AxisZ(): PrivateScope, Public, HideBySig, SpecialName
    set_AxisZ(SMCAxis): PrivateScope, Public, HideBySig, SpecialName
    get_AxisA(): PrivateScope, Public, HideBySig, SpecialName
    set_AxisA(SMCAxis): PrivateScope, Public, HideBySig, SpecialName
    get_AxisB(): PrivateScope, Public, HideBySig, SpecialName
    set_AxisB(SMCAxis): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_HeightSensor(): PrivateScope, Public, HideBySig, SpecialName
    set_HeightSensor(HeightSensor): PrivateScope, Public, HideBySig, SpecialName
    get_MeasureZForZeroPoint(): PrivateScope, Public, HideBySig, SpecialName
    set_MeasureZForZeroPoint(MeasureZForZeroPoint): PrivateScope, Public, HideBySig, SpecialName
    get_ReferenceSequence(): PrivateScope, Public, HideBySig, SpecialName
    set_ReferenceSequence(ReferenceSequence): PrivateScope, Public, HideBySig, SpecialName
    get_ReferenceXYSimultan(): PrivateScope, Public, HideBySig, SpecialName
    set_ReferenceXYSimultan(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ConstantWorkingSpeed(): PrivateScope, Public, HideBySig, SpecialName
    set_ConstantWorkingSpeed(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MotorCurrent(): PrivateScope, Public, HideBySig, SpecialName
    set_MotorCurrent(MotorCurrent): PrivateScope, Public, HideBySig, SpecialName
    get_ManualAdvanceAcceleration(): PrivateScope, Public, HideBySig, SpecialName
    set_ManualAdvanceAcceleration(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ReferenceAcceleration(): PrivateScope, Public, HideBySig, SpecialName
    set_ReferenceAcceleration(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MeasureToolSpeed(): PrivateScope, Public, HideBySig, SpecialName
    set_MeasureToolSpeed(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MeasureScanSpeed(): PrivateScope, Public, HideBySig, SpecialName
    set_MeasureScanSpeed(Double): PrivateScope, Public, HideBySig, SpecialName
    get_SpeedIncrement(): PrivateScope, Public, HideBySig, SpecialName
    set_SpeedIncrement(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_RefSpeedIncrement(): PrivateScope, Public, HideBySig, SpecialName
    set_RefSpeedIncrement(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_Slope(): PrivateScope, Public, HideBySig, SpecialName
    set_Slope(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_IncrementSlope(): PrivateScope, Public, HideBySig, SpecialName
    set_IncrementSlope(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_StepDirectionTime(): PrivateScope, Public, HideBySig, SpecialName
    set_StepDirectionTime(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_Frequence(): PrivateScope, Public, HideBySig, SpecialName
    set_Frequence(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_SteppingDriver(): PrivateScope, Public, HideBySig, SpecialName
    set_SteppingDriver(SteppingDriverSettings): PrivateScope, Public, HideBySig, SpecialName
    get_PauseSlope(): PrivateScope, Public, HideBySig, SpecialName
    set_PauseSlope(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_AutoToolChangeSettings(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoToolChangeSettings(AutoToolSettings): PrivateScope, Public, HideBySig, SpecialName
    get_Vacuum(): PrivateScope, Public, HideBySig, SpecialName
    set_Vacuum(VacuumSettings): PrivateScope, Public, HideBySig, SpecialName
    get_Puffer(): PrivateScope, Public, HideBySig, SpecialName
    set_Puffer(PufferSettings): PrivateScope, Public, HideBySig, SpecialName
    GetAccelerationX(): PrivateScope, Public, HideBySig
    GetAccelerationZ(): PrivateScope, Public, HideBySig
    Load(String): PrivateScope, Public, Static, HideBySig
    Save(String): PrivateScope, Public, HideBySig
    get_PlasmaUp(): PrivateScope, Public, HideBySig, SpecialName
    set_PlasmaUp(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_PlasmaDown(): PrivateScope, Public, HideBySig, SpecialName
    set_PlasmaDown(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_PlasmaSpeed(): PrivateScope, Public, HideBySig, SpecialName
    set_PlasmaSpeed(Double): PrivateScope, Public, HideBySig, SpecialName
    get_DebouncingTime(): PrivateScope, Public, HideBySig, SpecialName
    set_DebouncingTime(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_Out8kHz(): PrivateScope, Public, HideBySig, SpecialName
    set_Out8kHz(Output): PrivateScope, Public, HideBySig, SpecialName
    get_Out8kHzOn(): PrivateScope, Public, HideBySig, SpecialName
    set_Out8kHzOn(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_OutkHz(): PrivateScope, Public, HideBySig, SpecialName
    set_OutkHz(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SpeedChangerLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_SpeedChangerLevel(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_ReduceJerking(): PrivateScope, Public, HideBySig, SpecialName
    set_ReduceJerking(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ReduceJerkingValue(): PrivateScope, Public, HideBySig, SpecialName
    set_ReduceJerkingValue(Single): PrivateScope, Public, HideBySig, SpecialName
    GetXAxisResolution(): PrivateScope, Public, HideBySig
    GetXStepsMM(): PrivateScope, Public, HideBySig
    GetYAxisResolution(): PrivateScope, Public, HideBySig
    GetYStepsMM(): PrivateScope, Public, HideBySig
    GetZAxisResolution(): PrivateScope, Public, HideBySig
    GetZStepsMM(): PrivateScope, Public, HideBySig
    GetAAxisResolution(): PrivateScope, Public, HideBySig
    GetAStepsMM(): PrivateScope, Public, HideBySig
    GetBAxisResolution(): PrivateScope, Public, HideBySig
    GetBStepsMM(): PrivateScope, Public, HideBySig
    get_SMCType(): PrivateScope, Public, HideBySig, SpecialName
    set_SMCType(SMC): PrivateScope, Public, HideBySig, SpecialName
    get_MACAddress(): PrivateScope, Public, HideBySig, SpecialName
    set_MACAddress(String): PrivateScope, Public, HideBySig, SpecialName
    get_Lathe(): PrivateScope, Public, HideBySig, SpecialName
    set_Lathe(LatheSettings): PrivateScope, Public, HideBySig, SpecialName
    get_Interval(): PrivateScope, Public, HideBySig, SpecialName
    set_Interval(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_PicFreq(): PrivateScope, Public, HideBySig, SpecialName
    set_PicFreq(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_GlobPosition(): PrivateScope, Public, HideBySig, SpecialName
    set_GlobPosition(GlobPosition): PrivateScope, Public, HideBySig, SpecialName
    get_Usb(): PrivateScope, Public, HideBySig, SpecialName
    set_Usb(USBSettings): PrivateScope, Public, HideBySig, SpecialName
    get_TangentialGlobal(): PrivateScope, Public, HideBySig, SpecialName
    set_TangentialGlobal(TangentialGlobal): PrivateScope, Public, HideBySig, SpecialName
    get_CompensationSettings(): PrivateScope, Public, HideBySig, SpecialName
    set_CompensationSettings(CompensationSettings): PrivateScope, Public, HideBySig, SpecialName
    get_Log(): PrivateScope, Public, HideBySig, SpecialName
    set_Log(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_MAXSpindleSpeedOutput(): PrivateScope, Public, HideBySig, SpecialName
    set_MAXSpindleSpeedOutput(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_CreateJobInBackGround(): PrivateScope, Public, HideBySig, SpecialName
    set_CreateJobInBackGround(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_WaitAfterAxisSwitch(): PrivateScope, Public, HideBySig, SpecialName
    set_WaitAfterAxisSwitch(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_WaitAfterSwitch(): PrivateScope, Public, HideBySig, SpecialName
    set_WaitAfterSwitch(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_AGEM_XY2(): PrivateScope, Public, HideBySig, SpecialName
    set_AGEM_XY2(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IgnoreFirstInputChanged(): PrivateScope, Public, HideBySig, SpecialName
    set_IgnoreFirstInputChanged(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_OutputSignals(): PrivateScope, Public, HideBySig, SpecialName
    set_OutputSignals(OutputSignals): PrivateScope, Public, HideBySig, SpecialName
    get_SmoothSpeed(): PrivateScope, Public, HideBySig, SpecialName
    set_SmoothSpeed(SmoothSpeed): PrivateScope, Public, HideBySig, SpecialName
    get_ReduceMaxSpeed(): PrivateScope, Public, HideBySig, SpecialName
    set_ReduceMaxSpeed(ReduceMaxSpeed): PrivateScope, Public, HideBySig, SpecialName
    get_AngleConst(): PrivateScope, Public, HideBySig, SpecialName
    set_AngleConst(Single): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentToollength(): PrivateScope, Public, HideBySig, SpecialName
    set_CurrentToollength(Double): PrivateScope, Public, HideBySig, SpecialName
    get_UserCurrentToollengthForMonitoring(): PrivateScope, Public, HideBySig, SpecialName
    set_UserCurrentToollengthForMonitoring(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Alpha(): PrivateScope, Public, HideBySig, SpecialName
    set_Alpha(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ASpeedFactor(): PrivateScope, Public, HideBySig, SpecialName
    set_ASpeedFactor(Decimal): PrivateScope, Public, HideBySig, SpecialName
    get_CurveSpeed(): PrivateScope, Public, HideBySig, SpecialName
    set_CurveSpeed(Single): PrivateScope, Public, HideBySig, SpecialName
    get_SpindleSpeed(): PrivateScope, Public, HideBySig, SpecialName
    set_SpindleSpeed(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_ConnectionByUSB(): PrivateScope, Public, HideBySig, SpecialName
    set_ConnectionByUSB(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_SecurityTime(): PrivateScope, Public, HideBySig, SpecialName
    set_SecurityTime(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_Lan(): PrivateScope, Public, HideBySig, SpecialName
    set_Lan(LanSettings): PrivateScope, Public, HideBySig, SpecialName
    add_SettingsUpdated(UpdateDelegate): PrivateScope, Public, HideBySig, SpecialName
    remove_SettingsUpdated(UpdateDelegate): PrivateScope, Public, HideBySig, SpecialName
    SendEventUpdateDelegate(): PrivateScope, Public, HideBySig
    get_LaserOn(): PrivateScope, Public, HideBySig, SpecialName
    set_LaserOn(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_OutputsInvert(): PrivateScope, Public, HideBySig, SpecialName
    set_OutputsInvert(OutputsInvert): PrivateScope, Public, HideBySig, SpecialName
    get_Emergency(): PrivateScope, Public, HideBySig, SpecialName
    set_Emergency(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Emergency1(): PrivateScope, Public, HideBySig, SpecialName
    set_Emergency1(EmergencySettings): PrivateScope, Public, HideBySig, SpecialName
    get_Emergency2(): PrivateScope, Public, HideBySig, SpecialName
    set_Emergency2(EmergencySettings): PrivateScope, Public, HideBySig, SpecialName
    get_Emergency3(): PrivateScope, Public, HideBySig, SpecialName
    set_Emergency3(EmergencySettings): PrivateScope, Public, HideBySig, SpecialName
    get_Emergency4(): PrivateScope, Public, HideBySig, SpecialName
    set_Emergency4(EmergencySettings): PrivateScope, Public, HideBySig, SpecialName
    get_Emergency5(): PrivateScope, Public, HideBySig, SpecialName
    set_Emergency5(EmergencySettings): PrivateScope, Public, HideBySig, SpecialName
    get_Emergency6(): PrivateScope, Public, HideBySig, SpecialName
    set_Emergency6(EmergencySettings): PrivateScope, Public, HideBySig, SpecialName
    get_Emergency7(): PrivateScope, Public, HideBySig, SpecialName
    set_Emergency7(EmergencySettings): PrivateScope, Public, HideBySig, SpecialName
    get_Emergency8(): PrivateScope, Public, HideBySig, SpecialName
    set_Emergency8(EmergencySettings): PrivateScope, Public, HideBySig, SpecialName
    get_Emergency9(): PrivateScope, Public, HideBySig, SpecialName
    set_Emergency9(EmergencySettings): PrivateScope, Public, HideBySig, SpecialName
    get_HoodControl(): PrivateScope, Public, HideBySig, SpecialName
    set_HoodControl(Hood): PrivateScope, Public, HideBySig, SpecialName
    get_Hood(): PrivateScope, Public, HideBySig, SpecialName
    set_Hood(HoodSettings): PrivateScope, Public, HideBySig, SpecialName
    IsMonitoringOn(): PrivateScope, Public, HideBySig
    get_ManualMove(): PrivateScope, Public, HideBySig, SpecialName
    set_ManualMove(MMoveSettings): PrivateScope, Public, HideBySig, SpecialName
    get_MaximumSpeedXY(): PrivateScope, Public, HideBySig, SpecialName
    GetMaxSpeed(): PrivateScope, Public, HideBySig
    get_Tact(): PrivateScope, Public, HideBySig, SpecialName
    set_Tact(Tact): PrivateScope, Public, HideBySig, SpecialName
    get_FirmwareVersion(): PrivateScope, Public, HideBySig, SpecialName
    set_FirmwareVersion(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OutputGranit(): PrivateScope, Public, HideBySig, SpecialName
    set_OutputGranit(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_LengthOfOutputGranit(): PrivateScope, Public, HideBySig, SpecialName
    set_LengthOfOutputGranit(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_OptionsGranit(): PrivateScope, Public, HideBySig, SpecialName
    set_OptionsGranit(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_HandWheelSettings(): PrivateScope, Public, HideBySig, SpecialName
    set_HandWheelSettings(HandWheelSettings): PrivateScope, Public, HideBySig, SpecialName
    get_INIT_HANDWHEEL(): PrivateScope, Assembly, HideBySig, SpecialName
    set_INIT_HANDWHEEL(INIT_HANDWHEEL): PrivateScope, Assembly, HideBySig, SpecialName
    get_JoystickSettings(): PrivateScope, Public, HideBySig, SpecialName
    set_JoystickSettings(JoystickSettings): PrivateScope, Public, HideBySig, SpecialName
    get_INIT_JOYSTICK(): PrivateScope, Assembly, HideBySig, SpecialName
    set_INIT_JOYSTICK(INIT_JOYSTICK): PrivateScope, Assembly, HideBySig, SpecialName
    GetINIT2Struct(Connector): PrivateScope, Assembly, HideBySig
    SetLaserMaterial(LaserMaterial): PrivateScope, Public, HideBySig
    SetGranitToInitLaserStruct(): PrivateScope, Assembly, HideBySig
    SetToInitHandWheelStruct(): PrivateScope, Assembly, HideBySig
    SetToInitJoystickStruct(): PrivateScope, Assembly, HideBySig
    SetToInitStruct(): PrivateScope, Assembly, HideBySig
    SetToInitReferenceStruct(): PrivateScope, Assembly, HideBySig
    get_INIT(): PrivateScope, Assembly, HideBySig, SpecialName
    set_INIT(INIT): PrivateScope, Assembly, HideBySig, SpecialName
    get_INIT_REFERENCE(): PrivateScope, Assembly, HideBySig, SpecialName
    set_INIT_REFERENCE(INIT_REFERENCE): PrivateScope, Assembly, HideBySig, SpecialName
    get_INIT_LASER(): PrivateScope, Assembly, HideBySig, SpecialName
    set_INIT_LASER(INIT_LASER): PrivateScope, Assembly, HideBySig, SpecialName
    get_Password(): PrivateScope, Public, HideBySig, SpecialName
    set_Password(PasswordSettings): PrivateScope, Public, HideBySig, SpecialName
    get_DoubleX2Y2(): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.SmoothSpeed: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean On 'get set' : 
    System.Decimal Distance 'get set' : 
  Methods:
    get_On(): PrivateScope, Public, HideBySig, SpecialName
    set_On(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Distance(): PrivateScope, Public, HideBySig, SpecialName
    set_Distance(Decimal): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.SpeedIncrementConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Settings.SMCSettings): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class De.Boenigk.SMC5D.Settings.SteppingDriverSettings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt16 Frequence 'get set' : 
    UInt16 StepDirectionTime 'get set' : 
    System.String Name 'get set' : 
    Boolean TactInvert 'get set' : 
  Methods:
    get_Frequence(): PrivateScope, Public, HideBySig, SpecialName
    set_Frequence(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_StepDirectionTime(): PrivateScope, Public, HideBySig, SpecialName
    set_StepDirectionTime(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_TactInvert(): PrivateScope, Public, HideBySig, SpecialName
    set_TactInvert(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.Tact: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Invert 'get set' : 
  Methods:
    get_Invert(): PrivateScope, Public, HideBySig, SpecialName
    set_Invert(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.Tangential: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean On 'get set' : 
    Int32 StepsTurn 'get set' : 
    Double UpZ 'get set' : 
    System.Decimal SpeedOfZ 'get set' : 
    System.Decimal SpeedZ 'get set' : 
    Boolean UseSpeed 'get set' : 
    Boolean DoubleEdged 'get set' : 
    System.Decimal RotateAngle 'get set' : 
    System.Decimal RotateAngleTo 'get set' : 
    Boolean ResetAAfterReference 'get set' : 
  Methods:
    get_On(): PrivateScope, Public, HideBySig, SpecialName
    set_On(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_StepsTurn(): PrivateScope, Public, HideBySig, SpecialName
    set_StepsTurn(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_UpZ(): PrivateScope, Public, HideBySig, SpecialName
    set_UpZ(Double): PrivateScope, Public, HideBySig, SpecialName
    get_SpeedOfZ(): PrivateScope, Public, HideBySig, SpecialName
    set_SpeedOfZ(Decimal): PrivateScope, Public, HideBySig, SpecialName
    get_SpeedZ(): PrivateScope, Public, HideBySig, SpecialName
    set_SpeedZ(Decimal): PrivateScope, Public, HideBySig, SpecialName
    get_UseSpeed(): PrivateScope, Public, HideBySig, SpecialName
    set_UseSpeed(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_DoubleEdged(): PrivateScope, Public, HideBySig, SpecialName
    set_DoubleEdged(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_RotateAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_RotateAngle(Decimal): PrivateScope, Public, HideBySig, SpecialName
    get_RotateAngleTo(): PrivateScope, Public, HideBySig, SpecialName
    set_RotateAngleTo(Decimal): PrivateScope, Public, HideBySig, SpecialName
    get_ResetAAfterReference(): PrivateScope, Public, HideBySig, SpecialName
    set_ResetAAfterReference(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.TangentialGlobal: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean OffForZ 'get set' : 
    De.Boenigk.SMC5D.Settings.TangentialRelay TangentialRelay 'get set' : 
    De.Boenigk.SMC5D.Settings.TangentialTxx TangentialTxx 'get set' : 
    De.Boenigk.SMC5D.Settings.TangentialTxx TangentialTxxB 'get set' : 
    Boolean GCode 'get set' : 
  Methods:
    get_OffForZ(): PrivateScope, Public, HideBySig, SpecialName
    set_OffForZ(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_TangentialRelay(): PrivateScope, Public, HideBySig, SpecialName
    set_TangentialRelay(TangentialRelay): PrivateScope, Public, HideBySig, SpecialName
    get_TangentialTxx(): PrivateScope, Public, HideBySig, SpecialName
    set_TangentialTxx(TangentialTxx): PrivateScope, Public, HideBySig, SpecialName
    get_TangentialTxxB(): PrivateScope, Public, HideBySig, SpecialName
    set_TangentialTxxB(TangentialTxx): PrivateScope, Public, HideBySig, SpecialName
    get_GCode(): PrivateScope, Public, HideBySig, SpecialName
    set_GCode(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.TangentialRelay: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean On 'get set' : 
    De.Boenigk.SMC5D.Basics.Output Output 'get set' : 
    Int16 Wait 'get set' : 
  Methods:
    get_On(): PrivateScope, Public, HideBySig, SpecialName
    set_On(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Output(): PrivateScope, Public, HideBySig, SpecialName
    set_Output(Output): PrivateScope, Public, HideBySig, SpecialName
    get_Wait(): PrivateScope, Public, HideBySig, SpecialName
    set_Wait(Int16): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.TangentialTxx: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean OnlyOneToolOn 'get set' : 
    System.Collections.Generic.List`1[System.Int32] Tools 'get set' : 
  Methods:
    get_OnlyOneToolOn(): PrivateScope, Public, HideBySig, SpecialName
    set_OnlyOneToolOn(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Tools(): PrivateScope, Public, HideBySig, SpecialName
    set_Tools(List`1): PrivateScope, Public, HideBySig, SpecialName
    IsTool(Int32): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Settings.USBSettings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 CPipeTimeout 'get set' : 
    System.String Guid 'get set' : 
    Int32 Version 'get set' : 
  Methods:
    get_CPipeTimeout(): PrivateScope, Public, HideBySig, SpecialName
    set_CPipeTimeout(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Guid(): PrivateScope, Public, HideBySig, SpecialName
    set_Guid(String): PrivateScope, Public, HideBySig, SpecialName
    get_Version(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Version(Int32): PrivateScope, Assembly, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.VacuumArea: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Decimal XStart 'get set' : 
    System.Decimal YStart 'get set' : 
    System.Decimal XEnd 'get set' : 
    System.Decimal YEnd 'get set' : 
    De.Boenigk.SMC5D.Basics.Output Output 'get set' : 
  Methods:
    get_XStart(): PrivateScope, Public, HideBySig, SpecialName
    set_XStart(Decimal): PrivateScope, Public, HideBySig, SpecialName
    get_YStart(): PrivateScope, Public, HideBySig, SpecialName
    set_YStart(Decimal): PrivateScope, Public, HideBySig, SpecialName
    get_XEnd(): PrivateScope, Public, HideBySig, SpecialName
    set_XEnd(Decimal): PrivateScope, Public, HideBySig, SpecialName
    get_YEnd(): PrivateScope, Public, HideBySig, SpecialName
    set_YEnd(Decimal): PrivateScope, Public, HideBySig, SpecialName
    get_Output(): PrivateScope, Public, HideBySig, SpecialName
    set_Output(Output): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.VacuumSettings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean On 'get set' : 
    Boolean Invert 'get set' : 
    VacuumType VType 'get set' : 
    System.Collections.Generic.List`1[De.Boenigk.SMC5D.Settings.VacuumArea] VacuumArea 'get set' : 
    System.Collections.Generic.List`1[De.Boenigk.SMC5D.Settings.VacuumArea] VacuumAreaDrawing 'get set' : 
    System.Collections.Generic.List`1[De.Boenigk.SMC5D.Settings.VacuumArea] VacuumAreaDrawingNotUsed 'get set' : 
    De.Boenigk.SMC5D.Basics.Module Mod 'get set' : 
  Methods:
    get_On(): PrivateScope, Public, HideBySig, SpecialName
    set_On(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Invert(): PrivateScope, Public, HideBySig, SpecialName
    set_Invert(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_VType(): PrivateScope, Public, HideBySig, SpecialName
    set_VType(VacuumType): PrivateScope, Public, HideBySig, SpecialName
    get_VacuumArea(): PrivateScope, Public, HideBySig, SpecialName
    set_VacuumArea(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_VacuumAreaDrawing(): PrivateScope, Public, HideBySig, SpecialName
    set_VacuumAreaDrawing(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_VacuumAreaDrawingNotUsed(): PrivateScope, Public, HideBySig, SpecialName
    set_VacuumAreaDrawingNotUsed(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Mod(): PrivateScope, Public, HideBySig, SpecialName
    set_Mod(Module): PrivateScope, Public, HideBySig, SpecialName
Struct De.Boenigk.SMC5D.Settings.Z2Mode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    De.Boenigk.SMC5D.Settings.Z2Mode Z2ToA = 0 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Settings.Z2Mode Z2ToB = 1 : Public, Static, Literal, HasDefault
Class De.Boenigk.SMC5D.Settings.Z2Settings: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    De.Boenigk.SMC5D.Settings.Z2Mode Mode 'get set' : 
    Boolean On 'get set' : 
    Double OffsetX 'get set' : 
    Double OffsetY 'get set' : 
    Boolean RelayOnForSpindleZ2 'get set' : 
    De.Boenigk.SMC5D.Basics.Output RelaySpindleZ2 'get set' : 
    Boolean AllowTangent 'get set' : 
  Methods:
    get_Mode(): PrivateScope, Public, HideBySig, SpecialName
    set_Mode(Z2Mode): PrivateScope, Public, HideBySig, SpecialName
    get_On(): PrivateScope, Public, HideBySig, SpecialName
    set_On(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetX(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetX(Double): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetY(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetY(Double): PrivateScope, Public, HideBySig, SpecialName
    get_RelayOnForSpindleZ2(): PrivateScope, Public, HideBySig, SpecialName
    set_RelayOnForSpindleZ2(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_RelaySpindleZ2(): PrivateScope, Public, HideBySig, SpecialName
    set_RelaySpindleZ2(Output): PrivateScope, Public, HideBySig, SpecialName
    get_AllowTangent(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowTangent(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.Laser.DutyWatt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Decimal, System.Decimal): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Decimal Watt 'get set' : 
    System.Decimal Duty 'get set' : 
  Methods:
    get_Watt(): PrivateScope, Public, HideBySig, SpecialName
    set_Watt(Decimal): PrivateScope, Public, HideBySig, SpecialName
    get_Duty(): PrivateScope, Public, HideBySig, SpecialName
    set_Duty(Decimal): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.Laser.LaserListSettings: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.List`1[De.Boenigk.SMC5D.Settings.Laser.LaserMaterial] List 'get set' : 
  Methods:
    get_List(): PrivateScope, Public, HideBySig, SpecialName
    set_List(List`1): PrivateScope, Public, HideBySig, SpecialName
    Get(Int32): PrivateScope, Public, HideBySig
    Load(String): PrivateScope, Public, Static, HideBySig
    Save(String): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Settings.Laser.LaserMaterial: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt16 ID  'get set' : 
    System.String Material 'get set' : 
    System.String MaterialNumber 'get set' : 
    Int32 Period 'get set' : 
    System.Decimal StartPower 'get set' : 
    System.Decimal MaxPower 'get set' : 
    System.Decimal MaterialThickness 'get set' : 
    System.String Comment 'get set' : 
    Double WorkingSpeedXY 'get set' : 
    Int32 Argb 'get set' : 
  Methods:
    Get(SMCSettings): PrivateScope, Assembly, HideBySig
    get_ID(): PrivateScope, Public, HideBySig, SpecialName
    set_ID(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_Material(): PrivateScope, Public, HideBySig, SpecialName
    set_Material(String): PrivateScope, Public, HideBySig, SpecialName
    get_MaterialNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_MaterialNumber(String): PrivateScope, Public, HideBySig, SpecialName
    get_Period(): PrivateScope, Public, HideBySig, SpecialName
    set_Period(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_StartPower(): PrivateScope, Public, HideBySig, SpecialName
    set_StartPower(Decimal): PrivateScope, Public, HideBySig, SpecialName
    get_MaxPower(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxPower(Decimal): PrivateScope, Public, HideBySig, SpecialName
    get_MaterialThickness(): PrivateScope, Public, HideBySig, SpecialName
    set_MaterialThickness(Decimal): PrivateScope, Public, HideBySig, SpecialName
    get_Comment(): PrivateScope, Public, HideBySig, SpecialName
    set_Comment(String): PrivateScope, Public, HideBySig, SpecialName
    get_WorkingSpeedXY(): PrivateScope, Public, HideBySig, SpecialName
    set_WorkingSpeedXY(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Argb(): PrivateScope, Public, HideBySig, SpecialName
    set_Argb(Int32): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Settings.Laser.PeriodWatt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Period 'get set' : 
    System.Collections.Generic.List`1[De.Boenigk.SMC5D.Settings.Laser.DutyWatt] List 'get set' : 
  Methods:
    get_Period(): PrivateScope, Public, HideBySig, SpecialName
    set_Period(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_List(): PrivateScope, Public, HideBySig, SpecialName
    set_List(List`1): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Move.Axis: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Basics.Connector): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    De.Boenigk.SMC5D.Basics.I_Connector
  Properties:
    System.String[] IgnoreConditions 'get set' : 
    De.Boenigk.SMC5D.Basics.SMCStatus Status 'get ' : 
    System.Collections.Generic.List`1[De.Boenigk.SMC5D.Settings.EmergencySettings] EmergencyStop 'get set' : 
    System.Collections.Generic.List`1[De.Boenigk.SMC5D.Settings.HoodSettings] HoodIsOpen 'get set' : 
    Boolean ResetSwitches 'get set' : 
    Boolean CheckInputs 'get set' : 
    De.Boenigk.SMC5D.Basics.GlobPosition GlobPosition 'get ' : 
    Boolean MinZReached 'get ' : 
  Events:
    SMCStatusEventHandler OnSMCStatusEventHandler: 
    RefDirectionEventHandle OnRefDirection: 
  Methods:
    add_OnSMCStatusEventHandler(SMCStatusEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_OnSMCStatusEventHandler(SMCStatusEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_OnRefDirection(RefDirectionEventHandle): PrivateScope, Public, HideBySig, SpecialName
    remove_OnRefDirection(RefDirectionEventHandle): PrivateScope, Public, HideBySig, SpecialName
    get_IgnoreConditions(): PrivateScope, Public, HideBySig, SpecialName
    set_IgnoreConditions(String[]): PrivateScope, Public, HideBySig, SpecialName
    get_Status(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_EmergencyStop(): PrivateScope, Public, HideBySig, SpecialName
    get_HoodIsOpen(): PrivateScope, Public, HideBySig, SpecialName
    Abort(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Pause(): PrivateScope, Public, HideBySig
    get_ResetSwitches(): PrivateScope, Public, HideBySig, SpecialName
    set_ResetSwitches(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_CheckInputs(): PrivateScope, Public, HideBySig, SpecialName
    set_CheckInputs(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_GlobPosition(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, HideBySig
    Run(MoveAxis, Input, Boolean, Single): PrivateScope, Public, HideBySig
    Run(MoveAxis, Boolean, Input, Boolean, Single): PrivateScope, Public, HideBySig
    RunZ(): PrivateScope, Public, HideBySig
    RunY(): PrivateScope, Public, HideBySig
    RunFromY(): PrivateScope, Public, HideBySig
    RunX(): PrivateScope, Public, HideBySig
    RunFromX(): PrivateScope, Public, HideBySig
    RunToXY(): PrivateScope, Public, HideBySig
    RunA(): PrivateScope, Public, HideBySig
    RunB(): PrivateScope, Public, HideBySig
    RunX2_AGEM(): PrivateScope, Public, HideBySig
    RunX2(): PrivateScope, Public, HideBySig
    RunY2_AGEM(): PrivateScope, Public, HideBySig
    RunY2(): PrivateScope, Public, HideBySig
    RunScanHeightZDepth(): PrivateScope, Public, HideBySig
    RunScanHeightZDepth(Double): PrivateScope, Public, HideBySig
    RunMeasureToolZDepth(): PrivateScope, Public, HideBySig
    RunMeasureToolZDepth(Double): PrivateScope, Public, HideBySig
    RunMeasureToolADepth(): PrivateScope, Public, HideBySig
    RunMeasureToolBDepth(): PrivateScope, Public, HideBySig
    get_MinZReached(): PrivateScope, Public, HideBySig, SpecialName
    GetMoveFromToSwitch(ManualMoveAxis, Input, Boolean, Single): PrivateScope, Assembly, HideBySig
Class De.Boenigk.SMC5D.Move.AxisToSwitchSettings: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    De.Boenigk.SMC5D.Core.JAZDA_NA_I_OD_LACZNIKA JAZDA_NA_I_OD_LACZNIKA 'get set' : 
    De.Boenigk.SMC5D.Basics.Input Input 'get set' : 
    Boolean Invert 'get set' : 
    Boolean Direction 'get set' : 
    De.Boenigk.SMC5D.Basics.MoveAxis MoveAxis 'get set' : 
    Single Speed 'get set' : 
  Methods:
    get_JAZDA_NA_I_OD_LACZNIKA(): PrivateScope, Public, HideBySig, SpecialName
    set_JAZDA_NA_I_OD_LACZNIKA(JAZDA_NA_I_OD_LACZNIKA): PrivateScope, Public, HideBySig, SpecialName
    get_Input(): PrivateScope, Public, HideBySig, SpecialName
    set_Input(Input): PrivateScope, Public, HideBySig, SpecialName
    get_Invert(): PrivateScope, Public, HideBySig, SpecialName
    set_Invert(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Direction(): PrivateScope, Public, HideBySig, SpecialName
    set_Direction(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MoveAxis(): PrivateScope, Public, HideBySig, SpecialName
    set_MoveAxis(MoveAxis): PrivateScope, Public, HideBySig, SpecialName
    get_Speed(): PrivateScope, Public, HideBySig, SpecialName
    set_Speed(Single): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Move.Job: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Basics.Connector): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(De.Boenigk.SMC5D.Basics.Connector, De.Boenigk.SMC5D.Basics.RestrictedAreaExcept): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    De.Boenigk.SMC5D.Basics.I_Connector
  Properties:
    Single TotalWorkTime 'get ' : 
    Single CurrentWorkTime 'get ' : 
    Int32 LastStepLineIndex 'get ' : 
    De.Boenigk.SMC5D.Basics.RestrictedAreaExcept RestrictedAreaExcept 'get set' : 
    De.Boenigk.SMC5D.Settings.RestrictedArea RestrictedArea 'get ' : 
    De.Boenigk.SMC5D.Basics.SMCStatus Status 'get set' : 
    System.Collections.Generic.List`1[De.Boenigk.SMC5D.Settings.EmergencySettings] EmergencyStop 'get set' : 
    System.Collections.Generic.List`1[De.Boenigk.SMC5D.Settings.HoodSettings] HoodIsOpen 'get set' : 
    Boolean SpeedTactEnable 'get ' : 
    Boolean AfterJobSetMotorPowerOff 'get set' : 
    Boolean JobCreateInBackGround 'get set' : 
    Boolean JobCompression 'get set' : 
    Boolean CreateJobTestFiles 'get set' : 
    Boolean IgnoreMonitoring 'get set' : 
    Int32 WorkingTool 'get set' : 
    Boolean UseDeflectorA 'get set' : 
    System.String[] IgnoreConditions 'get set' : 
  Events:
    SMCStatusEventHandler OnSMCStatusEventHandler: 
  Methods:
    add_OnSMCStatusEventHandler(SMCStatusEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_OnSMCStatusEventHandler(SMCStatusEventHandler): PrivateScope, Public, HideBySig, SpecialName
    get_TotalWorkTime(): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentWorkTime(): PrivateScope, Public, HideBySig, SpecialName
    GetPosition(): PrivateScope, Public, HideBySig
    GetCurrent(): PrivateScope, Public, HideBySig
    get_LastStepLineIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_RestrictedAreaExcept(): PrivateScope, Public, HideBySig, SpecialName
    set_RestrictedAreaExcept(RestrictedAreaExcept): PrivateScope, Public, HideBySig, SpecialName
    get_RestrictedArea(): PrivateScope, Public, HideBySig, SpecialName
    Abort(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Status(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_EmergencyStop(): PrivateScope, Public, HideBySig, SpecialName
    get_HoodIsOpen(): PrivateScope, Public, HideBySig, SpecialName
    Continue(Byte): PrivateScope, Public, HideBySig
    IsHalt(): PrivateScope, Public, HideBySig
    Wait(Int32): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, HideBySig
    GetSpeed(): PrivateScope, Public, HideBySig
    Pause(): PrivateScope, Public, HideBySig
    SetMotorPowerOff(): PrivateScope, Public, HideBySig
    SetStepList(String): PrivateScope, Public, HideBySig
    SetStepList(String, Int32): PrivateScope, Public, HideBySig
    SetStepList(List`1): PrivateScope, Public, HideBySig
    SetStepList(List`1, Int32): PrivateScope, Public, HideBySig
    Start(): PrivateScope, Public, HideBySig
    Start(Int32): PrivateScope, Public, HideBySig
    get_SpeedTactEnable(): PrivateScope, Public, HideBySig, SpecialName
    set_AfterJobSetMotorPowerOff(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AfterJobSetMotorPowerOff(): PrivateScope, Public, HideBySig, SpecialName
    get_JobCreateInBackGround(): PrivateScope, Public, HideBySig, SpecialName
    set_JobCreateInBackGround(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_JobCompression(): PrivateScope, Public, HideBySig, SpecialName
    set_JobCompression(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_CreateJobTestFiles(): PrivateScope, Public, HideBySig, SpecialName
    set_CreateJobTestFiles(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IgnoreMonitoring(): PrivateScope, Public, HideBySig, SpecialName
    set_IgnoreMonitoring(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_WorkingTool(): PrivateScope, Public, HideBySig, SpecialName
    set_WorkingTool(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_UseDeflectorA(): PrivateScope, Public, HideBySig, SpecialName
    set_UseDeflectorA(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IgnoreConditions(): PrivateScope, Public, HideBySig, SpecialName
    set_IgnoreConditions(String[]): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Move.ManualMove: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Basics.Connector): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Slantwise 'get ' : 
    De.Boenigk.SMC5D.Basics.SMCStatus Status 'get ' : 
    Boolean LaserOn 'get set' : 
    Boolean IgnoreMonitoring 'get set' : 
    Boolean StepByStep 'get ' : 
  Events:
    SMCStatusEventHandler OnSMCStatusEventHandler: 
  Methods:
    add_OnSMCStatusEventHandler(SMCStatusEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_OnSMCStatusEventHandler(SMCStatusEventHandler): PrivateScope, Public, HideBySig, SpecialName
    SetPin(Output, Module, Boolean): PrivateScope, Public, HideBySig
    IsOn(Output, Module): PrivateScope, Public, HideBySig
    get_Slantwise(): PrivateScope, Public, HideBySig, SpecialName
    get_Status(): PrivateScope, Public, HideBySig, SpecialName
    Step(MoveAxis, Boolean, Single): PrivateScope, Public, HideBySig
    StepXY(Boolean, Boolean, Single): PrivateScope, Public, HideBySig
    Stop(): PrivateScope, Public, HideBySig
    get_LaserOn(): PrivateScope, Public, HideBySig, SpecialName
    set_LaserOn(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IgnoreMonitoring(): PrivateScope, Public, HideBySig, SpecialName
    set_IgnoreMonitoring(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_StepByStep(): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Move.Monitoring: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Basics.Connector): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IgnoreMonitoring 'get set' : 
    De.Boenigk.SMC5D.Settings.RestrictedArea RestrictedArea 'get ' : 
  Methods:
    IsOn(SMCSettings): PrivateScope, Public, Static, HideBySig
    InRestrictedArea(GlobPosition): PrivateScope, Public, HideBySig
    OutOfArea(GlobPosition, RestrictedAreaExcept): PrivateScope, Public, HideBySig
    get_IgnoreMonitoring(): PrivateScope, Public, HideBySig, SpecialName
    set_IgnoreMonitoring(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_RestrictedArea(): PrivateScope, Public, HideBySig, SpecialName
    CheckRestrictedArea(MoveAxis, Boolean, GlobPosition, RestrictedAreaExcept, UInt32): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Move.Reference: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Basics.Connector): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    De.Boenigk.SMC5D.Basics.I_Connector
  Properties:
    De.Boenigk.SMC5D.Basics.Connector Connector 'get ' : 
    De.Boenigk.SMC5D.Basics.GlobPosition GlobPosition 'get ' : 
    Boolean RX 'get set' : 
    Boolean RY 'get set' : 
    Boolean RZ 'get set' : 
    Boolean RA 'get set' : 
    Boolean RB 'get set' : 
    Boolean CheckInputs 'get set' : 
    Boolean ResetAllSwitches 'get set' : 
    System.Collections.Generic.List`1[De.Boenigk.SMC5D.Settings.EmergencySettings] EmergencyStop 'get set' : 
    System.Collections.Generic.List`1[De.Boenigk.SMC5D.Settings.HoodSettings] HoodIsOpen 'get set' : 
    De.Boenigk.SMC5D.Basics.SMCStatus Status 'get ' : 
  Events:
    SMCAxisEventHandler OnSMCReferencedEventHandler: 
    SMCAxisEventHandler OnSMCRunRefenceEventHandler: 
    SMCStatusEventHandler OnSMCStatusEventHandler: 
    RefDirectionEventHandle OnRefDirection: 
  Methods:
    add_OnSMCReferencedEventHandler(SMCAxisEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_OnSMCReferencedEventHandler(SMCAxisEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_OnSMCRunRefenceEventHandler(SMCAxisEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_OnSMCRunRefenceEventHandler(SMCAxisEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_OnSMCStatusEventHandler(SMCStatusEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_OnSMCStatusEventHandler(SMCStatusEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_OnRefDirection(RefDirectionEventHandle): PrivateScope, Public, HideBySig, SpecialName
    remove_OnRefDirection(RefDirectionEventHandle): PrivateScope, Public, HideBySig, SpecialName
    Abort(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Connector(): PrivateScope, Public, HideBySig, SpecialName
    get_GlobPosition(): PrivateScope, Public, HideBySig, SpecialName
    get_RX(): PrivateScope, Public, HideBySig, SpecialName
    set_RX(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_RY(): PrivateScope, Public, HideBySig, SpecialName
    set_RY(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_RZ(): PrivateScope, Public, HideBySig, SpecialName
    set_RZ(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_RA(): PrivateScope, Public, HideBySig, SpecialName
    set_RA(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_RB(): PrivateScope, Public, HideBySig, SpecialName
    set_RB(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_CheckInputs(): PrivateScope, Public, HideBySig, SpecialName
    set_CheckInputs(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Start(): PrivateScope, Public, HideBySig
    get_ResetAllSwitches(): PrivateScope, Public, HideBySig, SpecialName
    set_ResetAllSwitches(Boolean): PrivateScope, Public, HideBySig, SpecialName
    SetAPos(Int32): PrivateScope, Public, HideBySig
    SetBPos(Int32): PrivateScope, Public, HideBySig
    get_EmergencyStop(): PrivateScope, Public, HideBySig, SpecialName
    get_HoodIsOpen(): PrivateScope, Public, HideBySig, SpecialName
    get_Status(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ResetCounters(Boolean): PrivateScope, Assembly, HideBySig
    ResetCounterX(Double): PrivateScope, Assembly, HideBySig
    ResetCounterY(Double): PrivateScope, Assembly, HideBySig
    ResetCounterZ(Double): PrivateScope, Assembly, HideBySig
    ResetCounterA(Double): PrivateScope, Assembly, HideBySig
    ResetCounterB(Double): PrivateScope, Assembly, HideBySig
Class De.Boenigk.SMC5D.Move.AxisSimply: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Basics.Connector): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    De.Boenigk.SMC5D.Basics.SMCStatus Status 'get ' : 
  Events:
    SMCStatusEventHandler OnSMCStatusEventHandler: 
  Methods:
    add_OnSMCStatusEventHandler(SMCStatusEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_OnSMCStatusEventHandler(SMCStatusEventHandler): PrivateScope, Public, HideBySig, SpecialName
    MoveTo(MoveAxis, Boolean, Input, Single): PrivateScope, Public, HideBySig
    MoveFrom(MoveAxis, Boolean, Input, Single): PrivateScope, Public, HideBySig
    Abort(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, HideBySig
    get_Status(): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Move.SpeedTact: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Basics.Connector): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 C_MaxPercent = 100 : Public, Static, Literal, HasDefault
  Properties:
    Byte Percent 'get ' : 
  Methods:
    get_Percent(): PrivateScope, Public, HideBySig, SpecialName
    Tact(UInt32): PrivateScope, Public, HideBySig
    IsLock(): PrivateScope, Public, HideBySig
    TactMinus(): PrivateScope, Public, HideBySig
    TactPlus(): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Move.Step: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Length 'get ' : 
    Boolean Down 'get set' : 
    Double X   'get set' : 
    Double Y   'get set' : 
    Double Z   'get set' : 
    Double A   'get set' : 
    Double B   'get set' : 
    Double Speed 'get set' : 
    Double SpindleSpeed 'get set' : 
    Int32 Wait 'get set' : 
    De.Boenigk.SMC5D.Basics.Output Out 'get set' : 
    Int32 Repeat 'get set' : 
    Int32 Index 'get set' : 
    Int32 LineIndex 'get set' : 
    Int32 ID   'get set' : 
    Byte Commands 'get set' : 
  Methods:
    get_Length(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Down(): PrivateScope, Public, HideBySig, SpecialName
    set_Down(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    set_X(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    set_Y(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Z(): PrivateScope, Public, HideBySig, SpecialName
    set_Z(Double): PrivateScope, Public, HideBySig, SpecialName
    get_A(): PrivateScope, Public, HideBySig, SpecialName
    set_A(Double): PrivateScope, Public, HideBySig, SpecialName
    get_B(): PrivateScope, Public, HideBySig, SpecialName
    set_B(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Speed(): PrivateScope, Public, HideBySig, SpecialName
    set_Speed(Double): PrivateScope, Public, HideBySig, SpecialName
    get_SpindleSpeed(): PrivateScope, Public, HideBySig, SpecialName
    set_SpindleSpeed(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Wait(): PrivateScope, Public, HideBySig, SpecialName
    set_Wait(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Out(): PrivateScope, Public, HideBySig, SpecialName
    set_Out(Output): PrivateScope, Public, HideBySig, SpecialName
    get_Repeat(): PrivateScope, Public, HideBySig, SpecialName
    set_Repeat(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Index(): PrivateScope, Public, HideBySig, SpecialName
    set_Index(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_LineIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_LineIndex(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ID(): PrivateScope, Public, HideBySig, SpecialName
    set_ID(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Commands(): PrivateScope, Public, HideBySig, SpecialName
    set_Commands(Byte): PrivateScope, Public, HideBySig, SpecialName
    SetOut(Output, Boolean): PrivateScope, Public, HideBySig
    SetOutModule(Module): PrivateScope, Public, HideBySig
    IsOutOn(Output): PrivateScope, Public, HideBySig
    GetCopy(): PrivateScope, Public, HideBySig
    IsEqual(Step, Boolean): PrivateScope, Public, HideBySig
    IsValue_XYZAB_Wait(): PrivateScope, Public, HideBySig
    GetTitle(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class De.Boenigk.SMC5D.Move.StepList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Settings.SMCSettings): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(De.Boenigk.SMC5D.Basics.GlobPosition, De.Boenigk.SMC5D.Settings.SMCSettings): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.List`1[De.Boenigk.SMC5D.Move.Step] List 'get set' : 
    De.Boenigk.SMC5D.Move.Step Last 'get ' : 
  Methods:
    ToString(): PrivateScope, Public, HideBySig
    Clear(GlobPosition): PrivateScope, Public, HideBySig
    AddBY(Double, Double, Double): PrivateScope, Public, HideBySig
    AddBX(Double, Double, Double): PrivateScope, Public, HideBySig
    AddXYZ(Double, Double, Double, Double): PrivateScope, Public, HideBySig
    AddXYZA(Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig
    AddXYZAB(Double, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig
    AddXY(Double, Double, Double): PrivateScope, Public, HideBySig
    AddXA(Double, Double, Double): PrivateScope, Public, HideBySig
    AddYA(Double, Double, Double): PrivateScope, Public, HideBySig
    SetOut(Output, Boolean): PrivateScope, Public, HideBySig
    SetOutToAllSteps(Output, Boolean): PrivateScope, Public, HideBySig
    ResetOut(Output): PrivateScope, Public, HideBySig
    ResetOut(): PrivateScope, Public, HideBySig
    AddXYAB(Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig
    AddXYA(Double, Double, Double, Double): PrivateScope, Public, HideBySig
    AddX(Double, Double): PrivateScope, Public, HideBySig
    AddY(Double, Double): PrivateScope, Public, HideBySig
    AddA(Double, Double): PrivateScope, Public, HideBySig
    AddZ(Double, Double): PrivateScope, Public, HideBySig
    AddWait(Int16): PrivateScope, Public, HideBySig
    AddB(Double, Double): PrivateScope, Public, HideBySig
    Add(Step): PrivateScope, Public, HideBySig
    get_List(): PrivateScope, Public, HideBySig, SpecialName
    set_List(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Last(): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Move.StepReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsOpened 'get ' : 
    System.IO.FileInfo Info 'get ' : 
    Int64 Count 'get ' : 
  Methods:
    Open(): PrivateScope, Public, HideBySig
    Read(): PrivateScope, Public, HideBySig
    ReadLast(): PrivateScope, Public, HideBySig
    ReadStep(Int32): PrivateScope, Public, HideBySig
    Read(Int32): PrivateScope, Public, HideBySig
    ReadToEnd(): PrivateScope, Public, HideBySig
    Close(): PrivateScope, Public, HideBySig
    get_IsOpened(): PrivateScope, Public, HideBySig, SpecialName
    get_Info(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Move.StepWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Steps 'get ' : 
    Boolean IsWrithed 'get ' : 
  Methods:
    Write(List`1): PrivateScope, Public, HideBySig
    LogSteps(String, Int32): PrivateScope, Public, HideBySig
    Write(Step): PrivateScope, Public, HideBySig
    get_Steps(): PrivateScope, Public, HideBySig, SpecialName
    get_IsWrithed(): PrivateScope, Public, HideBySig, SpecialName
    Close(): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Move.TimeCalculation: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Basics.Connector, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Time 'get ' : 
    Int32 LastLineIndex 'get ' : 
    Int32 CurrentLineIndex 'get ' : 
  Methods:
    Start(): PrivateScope, Public, HideBySig
    Abort(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, HideBySig
    IsRun(): PrivateScope, Public, HideBySig
    get_Time(): PrivateScope, Public, HideBySig, SpecialName
    get_LastLineIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentLineIndex(): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.License.AESEncryption: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Encrypt(Byte[], Byte[], Byte[]): PrivateScope, Public, Static, HideBySig
Class De.Boenigk.SMC5D.License.BinaryFile: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Save(String, Byte[]): PrivateScope, Public, HideBySig
    Load(String): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.License.Crypto: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encrypting(String): PrivateScope, Public, HideBySig
    Decrypting(Byte[]): PrivateScope, Public, HideBySig
    Encrypting(Byte[], Byte[], Byte[]): PrivateScope, Public, HideBySig
    Decrypting(Byte[], Byte[], Byte[]): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.License.CryptoString: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetAsString(LicenseData): PrivateScope, Public, Static, HideBySig
    GetAsStruct(String): PrivateScope, Public, Static, HideBySig
Class De.Boenigk.SMC5D.License.C_License: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Char LicenseMode_DateLimit = D : Public, Static, Literal, HasDefault
    Char LicenseMode_WithoutLimit = E : Public, Static, Literal, HasDefault
    Char LicenseMode_None = N : Public, Static, Literal, HasDefault
    Int32 LicenseFinish = -1 : Public, Static, Literal, HasDefault
    Int32 LicenseNotFound = -2 : Public, Static, Literal, HasDefault
    Int32 LicenseWithoutLimit = -3 : Public, Static, Literal, HasDefault
Struct De.Boenigk.SMC5D.License.LicenseData: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.String ProductID : Public
    System.String Name : Public
    System.String LicenseMode : Public
    System.String SerialNumber : Public
    System.String FreeString : Public
Class De.Boenigk.SMC5D.Dialogs.DlgPicTester: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Windows.Forms.Form
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Init(Connector): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Emulator.Emulator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt16 C_Version = 2 : Assembly, Static, Literal, HasDefault
  Properties:
    System.String Version 'get ' : 
    System.String IP 'get set' : 
    Int32 Port 'get set' : 
  Events:
    EmulatorMessageDelegate EmulatorMessage: 
  Methods:
    add_EmulatorMessage(EmulatorMessageDelegate): PrivateScope, Public, HideBySig, SpecialName
    remove_EmulatorMessage(EmulatorMessageDelegate): PrivateScope, Public, HideBySig, SpecialName
    Start(): PrivateScope, Public, HideBySig
    End(): PrivateScope, Public, HideBySig
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_IP(): PrivateScope, Public, HideBySig, SpecialName
    set_IP(String): PrivateScope, Public, HideBySig, SpecialName
    get_Port(): PrivateScope, Public, HideBySig, SpecialName
    set_Port(Int32): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Emulator.EmulatorAdmin: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :De.Boenigk.SMC5D.Core.Commands
    Void .ctor(De.Boenigk.SMC5D.Emulator.Settings.EmulatorSettings): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte C_CommandPos = 63 : Public, Static, Literal, HasDefault
  Properties:
    Boolean IsWriteJobData 'get ' : 
    De.Boenigk.SMC5D.Emulator.Settings.SMC5DSettings SMC5DSettings 'get set' : 
    De.Boenigk.SMC5D.Core.ReadData ReadData 'get set' : 
    Boolean Continue 'get set' : 
    De.Boenigk.SMC5D.Emulator.Settings.EmulatorSettings EmulatorSettings 'get set' : 
    UInt32 SpeedChangePercent 'get set' : 
  Events:
    EmulatorMessageDelegate EmulatorMessage: 
  Methods:
    add_EmulatorMessage(EmulatorMessageDelegate): PrivateScope, Public, HideBySig, SpecialName
    remove_EmulatorMessage(EmulatorMessageDelegate): PrivateScope, Public, HideBySig, SpecialName
    SendEmulatorMessage(String): PrivateScope, Public, HideBySig
    get_IsWriteJobData(): PrivateScope, Public, HideBySig, SpecialName
    get_SMC5DSettings(): PrivateScope, Public, HideBySig, SpecialName
    get_ReadData(): PrivateScope, Public, HideBySig, SpecialName
    set_ReadData(ReadData): PrivateScope, Public, HideBySig, SpecialName
    get_Continue(): PrivateScope, Public, HideBySig, SpecialName
    set_Continue(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_EmulatorSettings(): PrivateScope, Public, HideBySig, SpecialName
    SetDataOfCommand(Byte[]): PrivateScope, Public, HideBySig
    SetCommand(Byte[]): PrivateScope, Public, HideBySig
    get_SpeedChangePercent(): PrivateScope, Public, HideBySig, SpecialName
    GetData(): PrivateScope, Public, HideBySig
    GetBufferSize(): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Emulator.Extensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    ToByteArray(String): PrivateScope, Public, Static, HideBySig
Class De.Boenigk.SMC5D.Emulator.Settings.DistanceSettings: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean PercentOn 'get set' : 
    Byte Percent 'get set' : 
    Int32 Position 'get set' : 
    De.Boenigk.SMC5D.Basics.Input Input 'get set' : 
  Methods:
    get_PercentOn(): PrivateScope, Public, HideBySig, SpecialName
    set_PercentOn(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Percent(): PrivateScope, Public, HideBySig, SpecialName
    set_Percent(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    set_Position(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Input(): PrivateScope, Public, HideBySig, SpecialName
    set_Input(Input): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Emulator.Settings.EmulatorSettings: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    De.Boenigk.SMC5D.Settings.SMC SMCType 'get set' : 
    De.Boenigk.SMC5D.Emulator.Settings.M4Settings M4 'get set' : 
    System.Collections.Generic.List`1[De.Boenigk.SMC5D.Emulator.Settings.DistanceSettings] DistanceSettings 'get set' : 
  Methods:
    get_SMCType(): PrivateScope, Public, HideBySig, SpecialName
    set_SMCType(SMC): PrivateScope, Public, HideBySig, SpecialName
    get_M4(): PrivateScope, Public, HideBySig, SpecialName
    set_M4(M4Settings): PrivateScope, Public, HideBySig, SpecialName
    GetBufferSize(): PrivateScope, Public, HideBySig
    get_DistanceSettings(): PrivateScope, Public, HideBySig, SpecialName
    set_DistanceSettings(List`1): PrivateScope, Public, HideBySig, SpecialName
    GetDistanceSettings(JAZDA_NA_I_OD_LACZNIKA): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Emulator.Settings.M4Settings: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean OIExt0 'get set' : 
    Boolean OIExt1 'get set' : 
    Boolean OIExt2 'get set' : 
    Boolean OIExt3 'get set' : 
    Boolean OIExt4 'get set' : 
    Boolean OIExt5 'get set' : 
  Methods:
    get_OIExt0(): PrivateScope, Public, HideBySig, SpecialName
    set_OIExt0(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_OIExt1(): PrivateScope, Public, HideBySig, SpecialName
    set_OIExt1(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_OIExt2(): PrivateScope, Public, HideBySig, SpecialName
    set_OIExt2(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_OIExt3(): PrivateScope, Public, HideBySig, SpecialName
    set_OIExt3(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_OIExt4(): PrivateScope, Public, HideBySig, SpecialName
    set_OIExt4(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_OIExt5(): PrivateScope, Public, HideBySig, SpecialName
    set_OIExt5(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Emulator.Settings.SMC5DSettings: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    De.Boenigk.SMC5D.Core.INIT INIT 'get set' : 
    De.Boenigk.SMC5D.Core.INIT2 INIT2 'get set' : 
    De.Boenigk.SMC5D.Core.INIT_REFERENCE INIT_REFERENCE 'get set' : 
  Methods:
    get_INIT(): PrivateScope, Public, HideBySig, SpecialName
    set_INIT(INIT): PrivateScope, Public, HideBySig, SpecialName
    get_INIT2(): PrivateScope, Public, HideBySig, SpecialName
    set_INIT2(INIT2): PrivateScope, Public, HideBySig, SpecialName
    get_INIT_REFERENCE(): PrivateScope, Public, HideBySig, SpecialName
    set_INIT_REFERENCE(INIT_REFERENCE): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Emulator.Move.JobProgress: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Emulator.EmulatorAdmin): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Start(JobBuffer): PrivateScope, Public, HideBySig
    Abort(): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Emulator.Move.ManualMove: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Emulator.EmulatorAdmin): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    StepMove(DOPISZ_DANE): PrivateScope, Public, HideBySig
    Move(DOPISZ_DANE): PrivateScope, Public, HideBySig
    Stop(): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Emulator.Move.MoveToFromSwitch: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Emulator.EmulatorAdmin): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ToSwitch(JAZDA_NA_I_OD_LACZNIKA): PrivateScope, Public, HideBySig
    FromSwitch(JAZDA_NA_I_OD_LACZNIKA): PrivateScope, Public, HideBySig
    ToRefSwitch(JAZDA_NA_I_OD_LACZNIKA): PrivateScope, Public, HideBySig
    FromRefSwitch(JAZDA_NA_I_OD_LACZNIKA): PrivateScope, Public, HideBySig
    Abort(): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Emulator.Basics.JobBuffer: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean EndData 'get set' : 
    Int32 BufferCounter 'get ' : 
  Methods:
    get_EndData(): PrivateScope, Public, HideBySig, SpecialName
    set_EndData(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Reset(): PrivateScope, Public, HideBySig
    Add(Byte[]): PrivateScope, Public, HideBySig
    get_BufferCounter(): PrivateScope, Public, HideBySig, SpecialName
    NextNeededData(): PrivateScope, Public, HideBySig
    GetBuffer(): PrivateScope, Public, HideBySig
    RemoveBuffer0(): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Emulator.Basics.Monitoring: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Emulator.EmulatorAdmin): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AllowManuallyMoveStep(): PrivateScope, Public, HideBySig
    AllowManuallyMoveStep(ManualMoveAxis): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Emulator.Basics.MoveToDistance: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Emulator.EmulatorAdmin): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Start(JAZDA_NA_I_OD_LACZNIKA): PrivateScope, Public, HideBySig
    IsInputDistancePosition(): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Emulator.Basics.Point5D: AutoLayout, AnsiClass, Class, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
  Properties:
    Int32 X    'get set' : 
    Int32 Y    'get set' : 
    Int32 Z    'get set' : 
    Int32 A    'get set' : 
    Int32 B    'get set' : 
  Methods:
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    set_X(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    set_Y(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Z(): PrivateScope, Public, HideBySig, SpecialName
    set_Z(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_A(): PrivateScope, Public, HideBySig, SpecialName
    set_A(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_B(): PrivateScope, Public, HideBySig, SpecialName
    set_B(Int32): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Emulator.Basics.SMC: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 C_PicFreq = 80000000 : Public, Static, Literal, HasDefault
Class De.Boenigk.SMC5D.Emulator.Basics.SpeedInterval: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Emulator.EmulatorAdmin, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Set(JAZDA_NA_I_OD_LACZNIKA): PrivateScope, Public, HideBySig
    Set(DOPISZ_DANE): PrivateScope, Public, HideBySig
    Interval(): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Emulator.Basics.Straight5d: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetVector(Point5D): PrivateScope, Public, HideBySig
    CreateNextPos(ReadData&): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Emulator.Basics.Tact: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Core.INIT, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 NumberOfDopiszDane 'get ' : 
    UInt16 Delta 'get ' : 
  Methods:
    Set(DOPISZ_DANE): PrivateScope, Public, HideBySig
    GetSpeedSteps(): PrivateScope, Public, HideBySig
    GetSpeedDiv(): PrivateScope, Public, HideBySig
    IsBreak(): PrivateScope, Public, HideBySig
    get_NumberOfDopiszDane(): PrivateScope, Public, HideBySig, SpecialName
    get_Delta(): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Emulator.Basics.Vector5D: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetVector(DOPISZ_DANE): PrivateScope, Public, HideBySig
    CreateNextPos(ReadData&): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Core.Log: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, LogLevel, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(LogLevel, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetFile(String): PrivateScope, Public, HideBySig
    Write(String): PrivateScope, Public, HideBySig
    SetDate(Boolean): PrivateScope, Public, HideBySig
    RemoveLogFile(): PrivateScope, Public, HideBySig
    WriteLineWithoutDateTime(String, String): PrivateScope, Public, Static, HideBySig
    WriteLine(String, String, String): PrivateScope, Public, Static, HideBySig
    WriteLine(String, String, String, Byte[]): PrivateScope, Public, Static, HideBySig
    WriteLine(String, String): PrivateScope, Public, Static, HideBySig
    WriteLine(String, String, Byte[]): PrivateScope, Public, Static, HideBySig
    WriteLine(String, String, Boolean): PrivateScope, Public, Static, HideBySig
    WriteLine(String, String, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    Close(): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Core.AutoLimitingMotorCurrent: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Basics.Connector): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Check(UInt32): PrivateScope, Public, HideBySig
    Stop(): PrivateScope, Public, HideBySig
    Start(): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Core.Backlash: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Settings.SMCSettings, De.Boenigk.SMC5D.Basics.GlobPosition, De.Boenigk.SMC5D.Core.StartBacklash): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetDeltaX(Int64): PrivateScope, Public, HideBySig
    GetDeltaY(Int64): PrivateScope, Public, HideBySig
    GetDeltaZ(Int64): PrivateScope, Public, HideBySig
    GetDeltaA(Int64): PrivateScope, Public, HideBySig
    GetDeltaB(Int64): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Core.ConServices: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInRef(Int32): PrivateScope, Public, HideBySig
    GetInput(Int32): PrivateScope, Public, HideBySig
    GetInput(Input): PrivateScope, Public, HideBySig
    GetOutput(Int32): PrivateScope, Public, HideBySig
    GetOutput(Output): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Core.DecomposeByteArray: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetStart(Byte[], Int32): PrivateScope, Public, HideBySig
    SetStart(): PrivateScope, Public, HideBySig
    GetNext(): PrivateScope, Public, HideBySig
    IsNextArrayContain(): PrivateScope, Public, HideBySig
Struct De.Boenigk.SMC5D.Core.Counter: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    De.Boenigk.SMC5D.Core.Counter X = 1 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.Counter Y = 2 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.Counter Z = 4 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.Counter A = 8 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.Counter B = 16 : Public, Static, Literal, HasDefault
Struct De.Boenigk.SMC5D.Core.Axis: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    De.Boenigk.SMC5D.Core.Axis X = 1 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.Axis Y = 2 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.Axis Z = 3 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.Axis A = 4 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.Axis B = 5 : Public, Static, Literal, HasDefault
Struct De.Boenigk.SMC5D.Core.AxisPlusDirection: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    De.Boenigk.SMC5D.Core.AxisPlusDirection X = 128 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.AxisPlusDirection Y = 64 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.AxisPlusDirection Z = 32 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.AxisPlusDirection A = 16 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.AxisPlusDirection B = 8 : Public, Static, Literal, HasDefault
Class De.Boenigk.SMC5D.Core.IP: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ToUInt(String): PrivateScope, Public, Static, HideBySig
    ToAddress(UInt32): PrivateScope, Public, Static, HideBySig
Interface De.Boenigk.SMC5D.Core.IPic32: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    De.Boenigk.SMC5D.Settings.SMC SMCType 'get ' : 
    Int32 BufferCounter 'get ' : 
    UInt32 JobSpeed 'get ' : 
    Boolean IsUSB 'get ' : 
  Events:
    Pic32Delegate Pic32Command: 
  Methods:
    get_SMCType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_Pic32Command(Pic32Delegate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_Pic32Command(Pic32Delegate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_BufferCounter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CONNECT(String, Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CONNECT(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IS_CONNECTED(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DIS_CONNECT(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SET_UPDATE_MODE(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WRITE_UPDATE_DATA_LINE(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteLineToPicTester(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ESC(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    REBOOT(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RESET_INSPECTION_TIME(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    START(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    START(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    STOP(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WAIT(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    STOP_JOB(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    STOP_MEASURE(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    MANUAL_MOVE(DOPISZ_DANE): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    MANUAL_MOVE_STEP(DOPISZ_DANE): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    READ_DATA(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    READ_SD_DIR_FILES(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WRITE_FILE_TO_SD(String, UInt32, Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    INIT_WRITE_DATA(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WRITE_DATA(Byte[], Int32, Int32, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WRITE_END_COMMAND(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RESET_DATA(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    REFERENCE_MOVE(JAZDA_NA_I_OD_LACZNIKA, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    MOVE_TO_FROM_SWITCH(JAZDA_NA_I_OD_LACZNIKA, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CHANGE_SPEED(DOPISZ_DANE): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    LOCK_SPEED(Boolean, Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_JobSpeed(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    IS_SPEED_LOCK(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CONTINUE_JOB(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WRITE_INIT_HANDWHEEL(INIT_HANDWHEEL): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WRITE_INIT_JOYSTICK(INIT_JOYSTICK): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WRITE_INIT(INIT): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WRITE_INIT2(INIT2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WRITE_INIT2_LAN(INIT2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    READ_INIT(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WRITE_INIT_REFERENCJA_WEJSCIA(INIT_REFERENCE): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    READ_INIT_REFERENCJA_WEJSCIA(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SET_RELAY(UInt32, Byte, Module): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SET_RELAY(UInt32, Module): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SET_PWM(Byte, Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CHANGE_PWM(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SET_COUNTER(INIT, Counter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WRITE_FLASH(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    READ_FLASH(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WRITE_INIT_LASER_GRANIT(INIT_LASER): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    READ_BACKLASH_STATUS(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    READ_INIT_LASER(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    READ_LASER_ONLINE(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    LASEROn_Off(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsConnected(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_IsUSB(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    IsConnected(ReadData): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsConnected(LASER_ODCZYTAJ_DANE): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    JEDEN_KROK(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    READ_DEBUG_JOB_DATA(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CONTINUE_DEBUG_JOB(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    JustXY(JUST_XY): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    BLOCK_INIT_OUTPUTS_ON(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    BLOCK_INIT_OUTPUTS_OFF(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SET_UPGRADE_MODE(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SET_TEST_CON2(TestCommands): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SET_LCOUNTER(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SET_RELAY_PERMANENTLY(UInt32, Boolean, Module): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GLOBAL_PERMANENTLY_RELAYS_RESET(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ACTIVATION_WITH_DUMMY_COMMAND(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SET_LATHE(LATHE): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class De.Boenigk.SMC5D.Core.LaserID: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetNewID(List`1): PrivateScope, Public, HideBySig
    GetLaserPowerSettings(List`1, UInt16): PrivateScope, Public, HideBySig
    Remove(List`1, UInt16): PrivateScope, Public, HideBySig
    Override(List`1, LaserMaterial, UInt16): PrivateScope, Public, HideBySig
Struct De.Boenigk.SMC5D.Core.ManualMoveAxis: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    De.Boenigk.SMC5D.Core.ManualMoveAxis XPlus = 1 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.ManualMoveAxis XMinus = 2 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.ManualMoveAxis YPlus = 3 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.ManualMoveAxis YMinus = 4 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.ManualMoveAxis ZPlus = 5 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.ManualMoveAxis ZMinus = 6 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.ManualMoveAxis APlus = 7 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.ManualMoveAxis AMinus = 8 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.ManualMoveAxis BPlus = 9 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.ManualMoveAxis BMinus = 10 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.ManualMoveAxis XPlusYPlus = 11 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.ManualMoveAxis XPlusYMinus = 12 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.ManualMoveAxis XMinusYPlus = 13 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.ManualMoveAxis XMinusYMinus = 14 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.ManualMoveAxis XY2Plus = 15 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.ManualMoveAxis XY2Minus = 16 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.ManualMoveAxis XYPlus = 17 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.ManualMoveAxis XYMinus = 18 : Public, Static, Literal, HasDefault
Class De.Boenigk.SMC5D.Core.OutputDirection: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetCon2(SMCSettings): PrivateScope, Public, HideBySig
    GetCon3(SMCSettings): PrivateScope, Public, HideBySig
    GetCon4(SMCSettings): PrivateScope, Public, HideBySig
    IsOutputInvertInInit(Output, SMCSettings): PrivateScope, Public, HideBySig
    IsOutputInvertInSettings(Output, SMCSettings): PrivateScope, Public, HideBySig
    IsOutputModInvertInSettings(Output, UInt16, UInt16): PrivateScope, Public, HideBySig
    SetOutputsInvertToSettings(Output, Boolean, SMCSettings): PrivateScope, Public, HideBySig
    SetMod1OutputsInvertToSettings(Output, Boolean, SMCSettings): PrivateScope, Public, HideBySig
    SetMod2OutputsInvertToSettings(Output, Boolean, SMCSettings): PrivateScope, Public, HideBySig
    SetMod3OutputsInvertToSettings(Output, Boolean, SMCSettings): PrivateScope, Public, HideBySig
    SetMod4OutputsInvertToSettings(Output, Boolean, SMCSettings): PrivateScope, Public, HideBySig
    SetMod5OutputsInvertToSettings(Output, Boolean, SMCSettings): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Core.Commands: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(De.Boenigk.SMC5D.Settings.SMC): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte C_JobEnd = 1 : Public, Static, Literal, HasDefault
    Byte C_LaserAllowed = 2 : Public, Static, Literal, HasDefault
    Byte C_WaitDivider = 10 : Public, Static, Literal, HasDefault
    Byte C_M00 = 2 : Public, Static, Literal, HasDefault
  Properties:
    De.Boenigk.SMC5D.Settings.SMC SMCType 'get set' : 
  Methods:
    get_SMCType(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class De.Boenigk.SMC5D.Core.Pic32Buffer: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Basics.Connector): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 C_PIC32MX460F512L = 450 : Assembly, Static, Literal, HasDefault
    Int32 C_CACHE_SIZE_M4 = 13500 : Assembly, Static, Literal, HasDefault
    Int32 C_CACHE_SIZE_P32 = 13500 : Assembly, Static, Literal, HasDefault
    Byte C_ContentLength = 2 : Public, Static, Literal, HasDefault
  Properties:
    Int32 TotalCount 'get ' : 
    Int32 Count 'get ' : 
    Int32 Number_Of_Structs 'get ' : 
    System.String DeltaSum 'get ' : 
  Methods:
    AddRange(List`1): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    SetDataEnd(): PrivateScope, Public, HideBySig
    get_TotalCount(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    GetSizeBuffer(Connector): PrivateScope, Public, Static, HideBySig
    GetSim(): PrivateScope, Public, HideBySig
    GetCurrentWorkData(): PrivateScope, Public, HideBySig
    Get(): PrivateScope, Public, HideBySig
    GetNotCompressed(Byte[]): PrivateScope, Assembly, HideBySig
    GetCompressed(Byte[]): PrivateScope, Assembly, HideBySig
    GetStructCompressed(DOPISZ_DANE): PrivateScope, Assembly, HideBySig
    get_Number_Of_Structs(): PrivateScope, Public, HideBySig, SpecialName
    get_DeltaSum(): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Core.Pic32LAN: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :De.Boenigk.SMC5D.Core.Commands
    Void .ctor(De.Boenigk.SMC5D.Settings.LanSettings, Int32, De.Boenigk.SMC5D.Settings.SMC): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    De.Boenigk.SMC5D.Core.IPic32
  Properties:
    Int32 ConnectPort 'get ' : 
    System.String Hostname 'get ' : 
    Int32 BufferCounter 'get ' : 
    UInt32 JobSpeed 'get ' : 
    Boolean IsUSB 'get ' : 
  Events:
    Pic32Delegate Pic32Command: 
  Methods:
    add_Pic32Command(Pic32Delegate): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_Pic32Command(Pic32Delegate): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ConnectPort(): PrivateScope, Public, HideBySig, SpecialName
    get_Hostname(): PrivateScope, Public, HideBySig, SpecialName
    CONNECT(String, Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CONNECT(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IS_CONNECTED(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DIS_CONNECT(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SET_UPDATE_MODE(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BLOCK_INIT_OUTPUTS_ON(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BLOCK_INIT_OUTPUTS_OFF(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WRITE_UPDATE_DATA_LINE(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WriteLineToPicTester(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ESC(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    REBOOT(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RESET_INSPECTION_TIME(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    START(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    START(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    STOP(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WAIT(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    STOP_JOB(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    STOP_MEASURE(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MANUAL_MOVE(DOPISZ_DANE): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MANUAL_MOVE_STEP(DOPISZ_DANE): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    READ_DATA(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    READ_SD_DIR_FILES(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WRITE_FILE_TO_SD(String, UInt32, Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    INIT_WRITE_DATA(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WRITE_DATA(Byte[], Int32, Int32, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WRITE_END_COMMAND(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RESET_DATA(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_BufferCounter(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    REFERENCE_MOVE(JAZDA_NA_I_OD_LACZNIKA, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MOVE_TO_FROM_SWITCH(JAZDA_NA_I_OD_LACZNIKA, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CHANGE_SPEED(DOPISZ_DANE): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_JobSpeed(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    LOCK_SPEED(Boolean, Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IS_SPEED_LOCK(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SET_UPGRADE_MODE(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CONTINUE_JOB(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WRITE_INIT_HANDWHEEL(INIT_HANDWHEEL): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WRITE_INIT_JOYSTICK(INIT_JOYSTICK): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WRITE_INIT(INIT): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WRITE_INIT2_LAN(INIT2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WRITE_INIT2(INIT2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    READ_INIT(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WRITE_INIT_REFERENCJA_WEJSCIA(INIT_REFERENCE): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    READ_INIT_REFERENCJA_WEJSCIA(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    READ_BACKLASH_STATUS(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SET_RELAY(UInt32, Byte, Module): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SET_LATHE(LATHE): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SET_RELAY_PERMANENTLY(UInt32, Boolean, Module): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GLOBAL_PERMANENTLY_RELAYS_RESET(UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ACTIVATION_WITH_DUMMY_COMMAND(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CHANGE_PWM(Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SET_PWM(Byte, Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SET_RELAY(UInt32, Module): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SET_COUNTER(INIT, Counter): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SET_LCOUNTER(UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    JustXY(JUST_XY): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WRITE_FLASH(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    READ_FLASH(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WRITE_INIT_LASER_GRANIT(INIT_LASER): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    READ_INIT_LASER(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    READ_LASER_ONLINE(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    LASEROn_Off(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsConnected(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsConnected(ReadData): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsConnected(LASER_ODCZYTAJ_DANE): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SET_TEST_CON2(TestCommands): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    JEDEN_KROK(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    READ_DEBUG_JOB_DATA(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CONTINUE_DEBUG_JOB(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_IsUSB(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class De.Boenigk.SMC5D.Core.Pic32Speed: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetStepSpeedInSec(UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    GetPicPeriodSpeed(UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    GetPicPeriodLatheSpeed(Int32, Int32, UInt32): PrivateScope, Public, Static, HideBySig
Struct De.Boenigk.SMC5D.Core.LATHE: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 Speed : Public
    Byte Free : Public
    Byte Acceleration : Public
    Byte Direction : Public
Struct De.Boenigk.SMC5D.Core.TEST_CON2: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 Output : Public
Struct De.Boenigk.SMC5D.Core.DOPISZ_DANE: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 X : Public
    UInt16 Y : Public
    UInt16 Z : Public
    UInt16 A : Public
    UInt16 B : Public
    UInt16 dane_osi : Public
    UInt32 StartSpeed : Public
    UInt32 Speed : Public
    UInt32 WYJSCIA : Public
    Byte PWM_spindle : Public
    Byte dane_Status : Public
    Int16 Czekaj : Public
    Int16 ReduceFlip : Public
  Methods:
    GeLongestDelta(): PrivateScope, Public, HideBySig
    GetTitle(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct De.Boenigk.SMC5D.Core.JUST_XY: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 Steps : Public
    UInt16 dane_osi : Public
Struct De.Boenigk.SMC5D.Core.JAZDA_NA_I_OD_LACZNIKA: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 Speed : Public
    UInt32 WEJSCIE : Public
    UInt32 INWERTUJ : Public
    UInt16 dane_osi : Public
Struct De.Boenigk.SMC5D.Core.ReadData: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 X : Public
    Int32 Y : Public
    Int32 Z : Public
    Int32 A : Public
    Int32 B : Public
    UInt32 Speed : Public
    Int32 L_Wekt : Public
    UInt32 WEJSCIA : Public
    UInt32 WYJSCIA : Public
    UInt16 JobMode : Public
    Byte JoystickVersion : Public
    Byte PWM_Number : Public
    Int32 TimeTotal : Public
    Byte Options : Public
    Byte Error : Public
    UInt16 Version : Public
    UInt16 AD1 : Public
    UInt16 AD2 : Public
    UInt16 Update : Public
    Byte PWM_spindle : Public
    Byte Backlash : Public
    Int32 InspectionTime : Public
    Byte HardwareKey : Public
    Byte HandwheelVersion : Public
    Byte SpeedPercent : Public
    Byte Wait : Public
    UInt32 InputsMod1 : Public
    UInt32 OutputsMod1 : Public
    UInt32 InputsMod2 : Public
    UInt32 OutputsMod2 : Public
    UInt32 InputsMod3 : Public
    UInt32 OutputsMod3 : Public
    UInt32 InputsMod4 : Public
    UInt32 OutputsMod4 : Public
    UInt32 InputsMod5 : Public
    UInt32 OutputsMod5 : Public
    Byte OutInModules : Public
    Byte PWMModules : Public
    UInt16 AD3 : Public
    UInt16 AD4 : Public
    UInt16 U33 : Public
    UInt16 U50 : Public
    UInt16 U24 : Public
    UInt16 DA1 : Public
    UInt16 DA2 : Public
    UInt16 DA3 : Public
    UInt16 DA4 : Public
    Byte ActiveIOModule : Public
    UInt32 PermanentOutputs0 : Public
    UInt32 PermanentOutputs1 : Public
    UInt32 PermanentOutputs2 : Public
    UInt32 PermanentOutputs3 : Public
    UInt32 PermanentOutputs4 : Public
    UInt32 PermanentOutputs5 : Public
    Byte Firmware_IO_0 : Public
    Byte Firmware_IO_1 : Public
    Byte Firmware_IO_2 : Public
    Byte Firmware_IO_3 : Public
    Byte Firmware_IO_4 : Public
    Byte Firmware_IO_5 : Public
    Byte Firmware_PWM_0 : Public
    Byte Firmware_PWM_1 : Public
    Byte Firmware_PWM_2 : Public
    Byte Firmware_PWM_3 : Public
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    GetInToBytes(): PrivateScope, Public, HideBySig
    GetOutToBytes(): PrivateScope, Public, HideBySig
Struct De.Boenigk.SMC5D.Core.ReadSD: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Byte Option : Public
    System.Collections.Generic.List`1[System.String] FileName : Public
    System.Collections.Generic.List`1[System.UInt32] FileSize : Public
Struct De.Boenigk.SMC5D.Core.OdczytajDane_Extra_Axes: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 E1 : Public
    Int32 E2 : Public
    Int32 E3 : Public
    Int32 E4 : Public
    Int32 E5 : Public
Struct De.Boenigk.SMC5D.Core.Read_Backlash_Status: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 BacklashX : Public
    UInt32 BacklashY : Public
    UInt32 BacklashZ : Public
    UInt32 BacklashA : Public
    UInt32 BacklashB : Public
Struct De.Boenigk.SMC5D.Core.INIT: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 max_X : Public
    Int32 max_Y : Public
    Int32 max_Z : Public
    Int32 max_A : Public
    Int32 max_B : Public
    UInt32 V_start_stopX : Public
    UInt32 V_start_stopY : Public
    UInt32 V_start_stopZ : Public
    UInt32 V_start_stopA : Public
    UInt32 V_start_stopB : Public
    UInt32 Speed_Increment : Public
    UInt16 CON2_OUTPUTS : Public
    UInt16 CON3_OUTPUTS : Public
    UInt16 CON4_OUTPUTS : Public
    Byte Free : Public
    Byte Increment_Slope : Public
    UInt32 Security_Z_Heigth : Public
    Byte Reset_Absolut_Axis_Counter : Public
    Byte Manual_Moving_Axis_Monitoring : Public
    Byte Enabling_X2_Y2 : Public
    Byte Slope : Public
    Byte Debug : Public
    Byte Options : Public
    Byte SecurityTime : Public
    Byte Command : Public
    UInt16 CON3_MOD1_OUTPUTS : Public
    UInt16 CON4_MOD1_OUTPUTS : Public
    UInt16 CON3_MOD2_OUTPUTS : Public
    UInt16 CON4_MOD2_OUTPUTS : Public
    UInt16 CON3_MOD3_OUTPUTS : Public
    UInt16 CON4_MOD3_OUTPUTS : Public
    UInt16 CON3_MOD4_OUTPUTS : Public
    UInt16 CON4_MOD4_OUTPUTS : Public
    UInt16 CON3_MOD5_OUTPUTS : Public
    UInt16 CON4_MOD5_OUTPUTS : Public
Struct De.Boenigk.SMC5D.Core.INIT2: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 BacklashX : Public
    UInt32 BacklashY : Public
    UInt32 BacklashZ : Public
    UInt32 BacklashA : Public
    UInt32 BacklashB : Public
    Byte Options : Public
    Byte PauseSlope : Public
    Byte MaxFreqP32 : Public
    Byte StatusReference : Public
    UInt32 MaxSpeed : Public
    UInt32 IP : Public
    UInt32 Mask : Public
    UInt32 DefaultGateway : Public
    UInt32 Out8kHz : Public
    Byte OutkHz : Public
    Byte SpeedChangerLevel : Public
    UInt16 StepDirectionTime : Public
    UInt16 DebouncingTime : Public
    UInt32 PlasmaUp : Public
    UInt32 PlasmaDown : Public
    UInt32 PlasmaSpeed : Public
    UInt16 MaxFreq : Public
Struct De.Boenigk.SMC5D.Core.INIT_HANDWHEEL: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 Steps01X : Public
    UInt16 Steps01Y : Public
    UInt16 Steps01Z : Public
    UInt16 Steps01A : Public
    UInt16 Steps01B : Public
    UInt16 Steps001X : Public
    UInt16 Steps001Y : Public
    UInt16 Steps001Z : Public
    UInt16 Steps001A : Public
    UInt16 Steps001B : Public
    UInt32 V_MaxXY : Public
    UInt32 V_MaxZ : Public
    UInt32 V_MaxA : Public
    UInt32 V_MaxB : Public
    Byte Option : Public
Struct De.Boenigk.SMC5D.Core.INIT_JOYSTICK: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 Free1 : Public
    UInt16 Free2 : Public
    UInt16 Free3 : Public
    UInt16 Free4 : Public
    UInt16 Free5 : Public
    UInt16 Free6 : Public
    UInt16 Free7 : Public
    UInt16 Free8 : Public
    UInt16 Free9 : Public
    UInt16 Free10 : Public
    UInt32 V_MaxXY : Public
    UInt32 V_MaxZ : Public
    UInt32 XYDiagonal : Public
    UInt32 Free11 : Public
    Byte Options : Public
Struct De.Boenigk.SMC5D.Core.INIT_EXTRA_AXES: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Byte Z : Public
    Byte A : Public
    Byte B : Public
    Byte Dummy : Public
    Byte Reset_Absolute_Axis_Counter : Public
Struct De.Boenigk.SMC5D.Core.INIT_REFERENCE: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 X_REFERENCE : Public
    UInt32 Y_REFERENCE : Public
    UInt32 Z_REFERENCE : Public
    UInt32 A_REFERENCE : Public
    UInt32 B_REFERENCE : Public
    UInt32 X2_REFERENCE : Public
    UInt32 V_REFERENCE_XY : Public
    UInt32 V_REFERENCE_Z : Public
    UInt32 V_REFERENCE_A : Public
    UInt32 V_REFERENCE_B : Public
    Byte ReferencePoint : Public
    Byte Increment_Slope : Public
    UInt16 MOVE_FROM_X : Public
    UInt16 MOVE_FROM_Y : Public
    UInt16 MOVE_FROM_Z : Public
    Int32 MOVE_FROM_A : Public
    UInt32 OpenCloseSwitch : Public
    UInt16 Speed_Increment : Public
    Byte OnOffAxes : Public
    Int32 MOVE_FROM_B : Public
Struct De.Boenigk.SMC5D.Core.INIT_LASER: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 StartPower : Public
    UInt16 MaxPower : Public
    UInt16 Duty : Public
    UInt16 OutputGranit : Public
    UInt16 LengthOfOutputGranit : Public
    UInt16 OptionsGranit : Public
    UInt32 MaxSpeed : Public
    Int16 Manual_Duty_max : Public
    UInt16 ID : Public
    UInt32 Output : Public
    Byte Options : Public
Struct De.Boenigk.SMC5D.Core.LASER_ODCZYTAJ_DANE: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 XY_freq : Public
    UInt32 Pwm_period : Public
    UInt32 Pwm_duty : Public
    UInt32 Status : Public
    Int32 LaserPowerOffset : Public
  Methods:
    Clear(): PrivateScope, Public, HideBySig
Struct De.Boenigk.SMC5D.Core.DEBUG_JOB: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 X : Public
    UInt16 Y : Public
    UInt16 Z : Public
    UInt16 A : Public
    UInt16 B : Public
    UInt16 dane_osi : Public
    UInt32 StartSpeed : Public
    UInt32 Speed : Public
    UInt32 WYJSCIA : Public
    Byte PWM_spindle : Public
    Byte dane_Status : Public
    Int16 Czekaj : Public
    UInt32 VSpeed : Public
    UInt32 VSpeedActual : Public
    UInt32 WParam : Public
    UInt32 Period : Public
    UInt32 PR45 : Public
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class De.Boenigk.SMC5D.Core.Pic32USB: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :De.Boenigk.SMC5D.Core.Commands
    Void .ctor(De.Boenigk.SMC5D.Settings.USBSettings, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(De.Boenigk.SMC5D.Settings.USBSettings): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    De.Boenigk.SMC5D.Core.IPic32
  Properties:
    Int32 BufferCounter 'get ' : 
    UInt32 JobSpeed 'get ' : 
    Boolean IsUSB 'get ' : 
  Events:
    Pic32Delegate Pic32Command: 
  Methods:
    add_Pic32Command(Pic32Delegate): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_Pic32Command(Pic32Delegate): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CONNECT(String, Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CONNECT(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IS_CONNECTED(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DIS_CONNECT(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SET_UPDATE_MODE(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BLOCK_INIT_OUTPUTS_ON(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BLOCK_INIT_OUTPUTS_OFF(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WRITE_UPDATE_DATA_LINE(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WriteLineToPicTester(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ESC(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    REBOOT(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RESET_INSPECTION_TIME(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    START(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    START(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    STOP(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WAIT(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    STOP_JOB(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    STOP_MEASURE(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MANUAL_MOVE(DOPISZ_DANE): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MANUAL_MOVE_STEP(DOPISZ_DANE): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    READ_DATA(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    READ_SD_DIR_FILES(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WRITE_FILE_TO_SD(String, UInt32, Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    INIT_WRITE_DATA(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WRITE_DATA(Byte[], Int32, Int32, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WRITE_END_COMMAND(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RESET_DATA(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_BufferCounter(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    REFERENCE_MOVE(JAZDA_NA_I_OD_LACZNIKA, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MOVE_TO_FROM_SWITCH(JAZDA_NA_I_OD_LACZNIKA, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CHANGE_SPEED(DOPISZ_DANE): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_JobSpeed(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    LOCK_SPEED(Boolean, Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IS_SPEED_LOCK(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SET_UPGRADE_MODE(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CONTINUE_JOB(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WRITE_INIT_JOYSTICK(INIT_JOYSTICK): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WRITE_INIT_HANDWHEEL(INIT_HANDWHEEL): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WRITE_INIT(INIT): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WRITE_INIT2(INIT2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WRITE_INIT2_LAN(INIT2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    READ_INIT(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WRITE_INIT_REFERENCJA_WEJSCIA(INIT_REFERENCE): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    READ_INIT_REFERENCJA_WEJSCIA(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    READ_BACKLASH_STATUS(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SET_RELAY(UInt32, Byte, Module): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SET_LATHE(LATHE): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SET_RELAY_PERMANENTLY(UInt32, Boolean, Module): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GLOBAL_PERMANENTLY_RELAYS_RESET(UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ACTIVATION_WITH_DUMMY_COMMAND(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CHANGE_PWM(Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SET_PWM(Byte, Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SET_RELAY(UInt32, Module): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SET_LCOUNTER(UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SET_COUNTER(INIT, Counter): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    JustXY(JUST_XY): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_IsUSB(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    WRITE_FLASH(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    READ_FLASH(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WRITE_INIT_LASER_GRANIT(INIT_LASER): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    READ_INIT_LASER(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    READ_LASER_ONLINE(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    LASEROn_Off(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsConnected(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsConnected(ReadData): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsConnected(LASER_ODCZYTAJ_DANE): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SET_TEST_CON2(TestCommands): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    JEDEN_KROK(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    READ_DEBUG_JOB_DATA(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CONTINUE_DEBUG_JOB(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class De.Boenigk.SMC5D.Core.SDConverter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte C_FileNameSize = 13 : Public, Static, Literal, HasDefault
    Byte C_FileCount = 30 : Public, Static, Literal, HasDefault
  Methods:
    GetOptions(Byte[]): PrivateScope, Public, Static, HideBySig
    GetFileNames(Byte[]): PrivateScope, Public, Static, HideBySig
    GetFileSizes(Byte[]): PrivateScope, Public, Static, HideBySig
    GetFileName(Byte[], Int32): PrivateScope, Public, Static, HideBySig
    GetFileSize(Byte[], Int32): PrivateScope, Public, Static, HideBySig
    GetFileName(String): PrivateScope, Public, Static, HideBySig
    GetFileSize(UInt32): PrivateScope, Public, Static, HideBySig
Class De.Boenigk.SMC5D.Core.Set`1[T]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: T
    Void .ctor(T[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IFormattable
    System.Collections.Generic.IEnumerable`1[T]
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    T[] Enums  'get set' : 
  Methods:
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_Enums(): PrivateScope, Public, HideBySig, SpecialName
    set_Enums(T[]): PrivateScope, Public, HideBySig, SpecialName
    Contains(T[]): PrivateScope, Public, HideBySig
    ContainsExact(T[]): PrivateScope, Public, HideBySig
    IsEmpty(): PrivateScope, Public, HideBySig
    Add(T[]): PrivateScope, Public, HideBySig
    Remove(T[]): PrivateScope, Public, HideBySig
    Complement(): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    AddAll(): PrivateScope, Public, HideBySig
    Join(Set`1): PrivateScope, Public, HideBySig
    Minus(Set`1): PrivateScope, Public, HideBySig
    Intersect(Set`1): PrivateScope, Public, HideBySig
    XOR(Set`1): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, HideBySig
    IsOverlapping(Set`1): PrivateScope, Public, HideBySig
    IsSubsetOf(Set`1): PrivateScope, Public, HideBySig
    IsStrictSubsetOf(Set`1): PrivateScope, Public, HideBySig
    IsSupersetOf(Set`1): PrivateScope, Public, HideBySig
    IsStrictSupersetOf(Set`1): PrivateScope, Public, HideBySig
    Equals(Object, Object): PrivateScope, Public, Static, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Parse(String): PrivateScope, Public, Static, HideBySig
    FromString(String): PrivateScope, Public, Static, HideBySig
    FromRange(T, T): PrivateScope, Public, Static, HideBySig
    ParseAdd(String): PrivateScope, Public, HideBySig
    CheckFlagged(): PrivateScope, Public, Static, HideBySig
    IsFlags(): PrivateScope, Public, Static, HideBySig
    ToFlaggedEnum(): PrivateScope, Public, HideBySig
    FromFlaggedEnum(T): PrivateScope, Public, Static, HideBySig
    op_Implicit(Set`1): PrivateScope, Public, Static, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Set`1, Set`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Set`1, Set`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(Set`1, Set`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThanOrEqual(Set`1, Set`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThan(Set`1, Set`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThanOrEqual(Set`1, Set`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Set`1, Set`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Set`1, Set`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Set`1, Set`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_ExclusiveOr(Set`1, Set`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_OnesComplement(Set`1): PrivateScope, Public, Static, HideBySig, SpecialName
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class De.Boenigk.SMC5D.Core.Speed: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Settings.SMCSettings): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetSpeed(DStruct, Single): PrivateScope, Public, HideBySig
    GetConstSpeed(Axis, Single, DStruct): PrivateScope, Public, HideBySig
    GetSpeed(Axis, Single): PrivateScope, Public, HideBySig
    GetSpeed(Axis, UInt32): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Core.StartBacklash: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 X   'get set' : 
    UInt32 Y   'get set' : 
    UInt32 Z   'get set' : 
    UInt32 A   'get set' : 
    UInt32 B   'get set' : 
  Methods:
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    set_X(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    set_Y(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Z(): PrivateScope, Public, HideBySig, SpecialName
    set_Z(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_A(): PrivateScope, Public, HideBySig, SpecialName
    set_A(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_B(): PrivateScope, Public, HideBySig, SpecialName
    set_B(UInt32): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Core.StructByteArray: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetCopyOfStruct(Object, Type): PrivateScope, Public, Static, HideBySig
    RawDeserializeEx(Byte[], Type): PrivateScope, Public, Static, HideBySig
    RawSerializeEx(Object): PrivateScope, Public, Static, HideBySig
    CopyTo(Byte[], Int32): PrivateScope, Public, Static, HideBySig
    GetStructLength(Object): PrivateScope, Public, Static, HideBySig
Class De.Boenigk.SMC5D.Core.TCPClient: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Settings.LanSettings, Int32, Buffer): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 ConnectPort 'get ' : 
    System.String Hostname 'get ' : 
    Boolean Connected 'get ' : 
  Methods:
    get_ConnectPort(): PrivateScope, Public, HideBySig, SpecialName
    get_Hostname(): PrivateScope, Public, HideBySig, SpecialName
    Init(): PrivateScope, Public, HideBySig
    Close(): PrivateScope, Public, HideBySig
    get_Connected(): PrivateScope, Public, HideBySig, SpecialName
    ReceiveData(): PrivateScope, Public, HideBySig
    SenData(Byte[]): PrivateScope, Public, HideBySig
    SenData(Byte[], Int32, Int32): PrivateScope, Public, HideBySig
Struct De.Boenigk.SMC5D.Core.TestCommands: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    De.Boenigk.SMC5D.Core.TestCommands Reset = 65535 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.TestCommands DirX = 65534 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.TestCommands StepX = 65533 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.TestCommands DirY = 65531 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.TestCommands StepY = 65527 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.TestCommands DirZ = 65519 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.TestCommands StepZ = 65503 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.TestCommands DirA = 65471 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.TestCommands StepA = 65407 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.TestCommands DirB = 65279 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.TestCommands StepB = 65023 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Core.TestCommands StepX2 = 64511 : Public, Static, Literal, HasDefault
Class De.Boenigk.SMC5D.Core.TimerState: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Stopped 'get set' : 
    Int32 Counter 'get set' : 
    System.Threading.Timer Timer 'get set' : 
  Methods:
    get_Stopped(): PrivateScope, Public, HideBySig, SpecialName
    set_Stopped(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Counter(): PrivateScope, Public, HideBySig, SpecialName
    set_Counter(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Timer(): PrivateScope, Public, HideBySig, SpecialName
    set_Timer(Timer): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Core.Udp: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Init(): PrivateScope, Public, HideBySig
    Close(): PrivateScope, Public, HideBySig
    ReceiveData(): PrivateScope, Public, HideBySig
    SenData(String): PrivateScope, Public, HideBySig
    SenData(Byte[]): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Core.Mill.Deflector: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Move.Step, De.Boenigk.SMC5D.Settings.SMCSettings): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetXtoA(List`1): PrivateScope, Public, HideBySig
    GetXtoA(Step): PrivateScope, Public, HideBySig
    GetYtoA(List`1): PrivateScope, Public, HideBySig
    GetYtoA(Step): PrivateScope, Public, HideBySig
Struct De.Boenigk.SMC5D.Core.Mill.DStruct: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 Nr : Public
    Int64 DeltaX : Public
    Int64 DeltaY : Public
    Int64 DeltaZ : Public
    Int64 DeltaA : Public
    Int64 DeltaB : Public
    UInt32 MaxSpeed : Public
    UInt32 StartSpeed : Public
    De.Boenigk.SMC5D.Basics.Output Output : Public
    Byte PWM : Public
    Int16 Wait : Public
    Boolean Down : Public
    Int32 LineIndex : Public
    Single Time : Public
    De.Boenigk.SMC5D.Move.Step Step : Public
    Double Alpha : Public
    Double Radius : Public
    Byte dane_Status : Public
    Int16 ReduceFlip : Public
  Methods:
    IsDeltaZero(): PrivateScope, Public, HideBySig
    GetCopy(): PrivateScope, Public, HideBySig
    IsDeltaValue(): PrivateScope, Public, HideBySig
    GetTitle(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class De.Boenigk.SMC5D.Core.Mill.LargestDelta: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    De.Boenigk.SMC5D.Core.Axis Axis 'get ' : 
  Methods:
    GetLargestDelta(DStruct): PrivateScope, Public, HideBySig
    get_Axis(): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Core.Mill.Puffer: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Basics.Connector, De.Boenigk.SMC5D.Core.StartBacklash): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean UseDeflectorA 'get set' : 
    Int32 LastLineIndex 'get ' : 
    Int32 NumberOfStructsInPuffer 'get ' : 
    System.String DeltaSum 'get ' : 
    De.Boenigk.SMC5D.Move.Step NextCreatedStep 'get ' : 
    Double TotalWorkTime 'get ' : 
    UInt32 MaxSpeed 'get ' : 
  Methods:
    SetList(List`1, Int32): PrivateScope, Public, HideBySig
    SetList(String, Int32): PrivateScope, Public, HideBySig
    get_UseDeflectorA(): PrivateScope, Public, HideBySig, SpecialName
    set_UseDeflectorA(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_LastLineIndex(): PrivateScope, Public, HideBySig, SpecialName
    GetCurrentWorkData(): PrivateScope, Public, HideBySig
    ClearData(): PrivateScope, Public, HideBySig
    CloseFiles(): PrivateScope, Public, HideBySig
    Charge(): PrivateScope, Public, HideBySig
    GetPufferData(): PrivateScope, Public, HideBySig
    GetSimPufferData(): PrivateScope, Public, HideBySig
    ResetSimPufferData(): PrivateScope, Public, HideBySig
    get_NumberOfStructsInPuffer(): PrivateScope, Public, HideBySig, SpecialName
    get_DeltaSum(): PrivateScope, Public, HideBySig, SpecialName
    GetCurrentWorkSimData(Int32): PrivateScope, Public, HideBySig
    get_NextCreatedStep(): PrivateScope, Public, HideBySig, SpecialName
    get_TotalWorkTime(): PrivateScope, Public, HideBySig, SpecialName
    get_MaxSpeed(): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Core.Mill.PufferStep1Data: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Settings.SMCSettings): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.List`1[De.Boenigk.SMC5D.Core.Mill.DStruct] DeltaList 'get ' : 
    De.Boenigk.SMC5D.Move.Step Step1 'get set' : 
    De.Boenigk.SMC5D.Move.Step Step2 'get set' : 
    Int32 DeltaListFileIndex 'get set' : 
    De.Boenigk.SMC5D.Core.Mill.Delta Delta 'get ' : 
    De.Boenigk.SMC5D.Core.Speed Speed 'get ' : 
  Methods:
    Init(Connector): PrivateScope, Public, HideBySig
    GetStep1MM(): PrivateScope, Public, HideBySig
    SetNewStep1(Connector, Step): PrivateScope, Public, HideBySig
    get_DeltaList(): PrivateScope, Public, HideBySig, SpecialName
    get_Step1(): PrivateScope, Public, HideBySig, SpecialName
    set_Step1(Step): PrivateScope, Public, HideBySig, SpecialName
    get_Step2(): PrivateScope, Public, HideBySig, SpecialName
    set_Step2(Step): PrivateScope, Public, HideBySig, SpecialName
    get_DeltaListFileIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_DeltaListFileIndex(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Delta(): PrivateScope, Public, HideBySig, SpecialName
    get_Speed(): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Core.Mill.PufferStep2Data: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 DeltaListIndex 'get set' : 
  Methods:
    get_DeltaListIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_DeltaListIndex(Int32): PrivateScope, Public, HideBySig, SpecialName
    Init(): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Core.Mill.PufferStep3Data: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 InsertAccelerationBrakeIndex 'get set' : 
    UInt32 StartSpeed 'get set' : 
  Methods:
    get_InsertAccelerationBrakeIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_InsertAccelerationBrakeIndex(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_StartSpeed(): PrivateScope, Public, HideBySig, SpecialName
    set_StartSpeed(UInt32): PrivateScope, Public, HideBySig, SpecialName
    Init(Connector): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Core.Mill.PufferStep4Data: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 DeltaPicListIndex 'get set' : 
    Boolean StartSpeedSet 'get set' : 
  Methods:
    get_DeltaPicListIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_DeltaPicListIndex(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_StartSpeedSet(): PrivateScope, Public, HideBySig, SpecialName
    set_StartSpeedSet(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Init(): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Core.Mill.PufferSumTester: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String DeltaSum 'get ' : 
    Int32 WriteToConsoleInterval 'get set' : 
    UInt64 DeltaSumX 'get ' : 
    UInt64 DeltaSumY 'get ' : 
    UInt64 DeltaSumZ 'get ' : 
    UInt64 DeltaSumA 'get ' : 
    UInt64 DeltaSumB 'get ' : 
  Methods:
    ResetSum(): PrivateScope, Public, HideBySig
    AddSum(DOPISZ_DANE): PrivateScope, Public, HideBySig
    get_DeltaSum(): PrivateScope, Public, HideBySig, SpecialName
    get_WriteToConsoleInterval(): PrivateScope, Public, HideBySig, SpecialName
    set_WriteToConsoleInterval(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_DeltaSumX(): PrivateScope, Public, HideBySig, SpecialName
    get_DeltaSumY(): PrivateScope, Public, HideBySig, SpecialName
    get_DeltaSumZ(): PrivateScope, Public, HideBySig, SpecialName
    get_DeltaSumA(): PrivateScope, Public, HideBySig, SpecialName
    get_DeltaSumB(): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Core.Mill.StartStopSpeed: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Settings.SMCSettings): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetBegin(DOPISZ_DANE): PrivateScope, Public, HideBySig
    Get(DStruct, DStruct): PrivateScope, Public, HideBySig
    Get(): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Core.Mill.ByteArray: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Set(Int32, Single, Byte[]): PrivateScope, Public, Static, HideBySig
    Set(Int32, Double, Byte[]): PrivateScope, Public, Static, HideBySig
    Set(Int32, Int32, Byte[]): PrivateScope, Public, Static, HideBySig
    Set(Int32, UInt32, Byte[]): PrivateScope, Public, Static, HideBySig
    Set(Int32, Boolean, Byte[]): PrivateScope, Public, Static, HideBySig
    Set(Int32, String, Byte[]): PrivateScope, Public, Static, HideBySig
    Set(Int32, String, Byte[], Int32): PrivateScope, Public, Static, HideBySig
    StringToByteArray(String): PrivateScope, Public, Static, HideBySig
    ByteArrayToString(Byte[]): PrivateScope, Public, Static, HideBySig
    Set(Int32, Byte[], Byte[]): PrivateScope, Public, Static, HideBySig
    GetString(Byte[], Int32, Int32): PrivateScope, Public, Static, HideBySig
Class De.Boenigk.SMC5D.Core.Mill.C_VarLength: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Double = 8 : Public, Static, Literal, HasDefault
    Int32 Float = 4 : Public, Static, Literal, HasDefault
    Int32 Int = 4 : Public, Static, Literal, HasDefault
    Int32 UInt = 4 : Public, Static, Literal, HasDefault
    Int32 Byte = 1 : Public, Static, Literal, HasDefault
    Int32 Bool = 1 : Public, Static, Literal, HasDefault
Class De.Boenigk.SMC5D.Core.Mill.Delta: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Settings.SMCSettings): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    De.Boenigk.SMC5D.Core.Mill.DStruct DStruct 'get ' : 
  Methods:
    get_DStruct(): PrivateScope, Public, HideBySig, SpecialName
    CreateDelta(Step, Step): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Core.Mill.PointD5D: AutoLayout, AnsiClass, Class, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
  Properties:
    Double X   'get set' : 
    Double Y   'get set' : 
    Double Z   'get set' : 
    Double A   'get set' : 
    Double B   'get set' : 
  Methods:
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    set_X(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    set_Y(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Z(): PrivateScope, Public, HideBySig, SpecialName
    set_Z(Double): PrivateScope, Public, HideBySig, SpecialName
    get_A(): PrivateScope, Public, HideBySig, SpecialName
    set_A(Double): PrivateScope, Public, HideBySig, SpecialName
    get_B(): PrivateScope, Public, HideBySig, SpecialName
    set_B(Double): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Core.Mill.AngleBetweenVectors: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Settings.SMCSettings): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Radius 'get ' : 
    Double Alpha 'get ' : 
  Methods:
    CalculateAlphaAndRadius(DStruct, DStruct): PrivateScope, Public, HideBySig
    get_Radius(): PrivateScope, Public, HideBySig, SpecialName
    get_Alpha(): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Core.Mill.AngleBetweenVectorsV6: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Radius 'get ' : 
    Double Alpha 'get ' : 
  Methods:
    CalculateAlphaAndRadius(DStruct, DStruct): PrivateScope, Public, HideBySig
    get_Radius(): PrivateScope, Public, HideBySig, SpecialName
    get_Alpha(): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Core.Mill.DeltaSpeed: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Settings.SMCSettings): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 MaxSpeed 'get ' : 
  Methods:
    get_MaxSpeed(): PrivateScope, Public, HideBySig, SpecialName
    GetSpeed(AngleBetweenVectors, DStruct, DStruct): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Core.Mill.RadiusCalc: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Settings.SMCSettings): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Double C_AlphaMin = 0,0001 : Public, Static, Literal, HasDefault
  Properties:
    Double Radius 'get ' : 
    Double Alpha 'get ' : 
  Methods:
    Create(DStruct, DStruct, DStruct): PrivateScope, Public, HideBySig
    get_Radius(): PrivateScope, Public, HideBySig, SpecialName
    get_Alpha(): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Core.Mill.AccelerationBrakeWay: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetBrakeWay(INIT, UInt32, UInt32): PrivateScope, Public, HideBySig
    GetAccelerationBrakeWay(INIT, DStruct, Int64): PrivateScope, Public, HideBySig
    GetAccelerationBrakeWay(INIT, UInt32, UInt32, Int64): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Core.Mill.DeltaAccelerationBrakeSimple: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Settings.SMCSettings): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 C_SpeedConstValue = 256 : Public, Static, Literal, HasDefault
  Methods:
    CanMerge(DStruct, UInt32, Boolean): PrivateScope, Assembly, HideBySig
    GetMergeData(DStruct, UInt32, Boolean): PrivateScope, Assembly, HideBySig
    Merge(List`1, Int32, UInt32, Boolean): PrivateScope, Assembly, HideBySig
Class De.Boenigk.SMC5D.Core.Mill.DeltaMaxSpeed: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Settings.SMCSettings): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Get(Int64, UInt32): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Core.Mill.DeltaMerger: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Merge(List`1, Int32, DeltaPart): PrivateScope, Public, HideBySig
Struct De.Boenigk.SMC5D.Core.Mill.DeltaPart: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int64 Brake : Public
    Int64 AccelerationAndWayWithConstantSpeed : Public
    UInt32 Speed : Public
    Int16 ReduceFlipValue : Public
Class De.Boenigk.SMC5D.Core.Mill.DataOfAxes: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt16 Dane_osi 'get set' : 
  Methods:
    Set(DStruct, DOPISZ_DANE): PrivateScope, Public, HideBySig
    get_Dane_osi(): PrivateScope, Public, HideBySig, SpecialName
    Get(DOPISZ_DANE, Boolean, Boolean, Boolean, Boolean, Boolean): PrivateScope, Public, HideBySig
    GetLargestAxis(DOPISZ_DANE): PrivateScope, Public, Static, HideBySig
    DirectionOfAxis(DOPISZ_DANE, Axis): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Core.Mill.DeltaDivider: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Divider 'get ' : 
  Methods:
    GetDelta(DStruct, Axis): PrivateScope, Public, HideBySig
    get_Divider(): PrivateScope, Public, HideBySig, SpecialName
    InitDivider(Int64): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Core.Mill.DeltaPicStruct: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.List`1[De.Boenigk.SMC5D.Core.Mill.P32OutputData] DeltaStructList 'get ' : 
  Methods:
    Convert(DStruct, UInt32): PrivateScope, Public, HideBySig
    get_DeltaStructList(): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Core.Mill.P32OutputData: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    De.Boenigk.SMC5D.Core.DOPISZ_DANE DOPISZ_DANE 'get set' : 
    De.Boenigk.SMC5D.Move.Step Step 'get set' : 
    Int32 LineIndex 'get set' : 
    Single Time 'get set' : 
  Methods:
    get_DOPISZ_DANE(): PrivateScope, Public, HideBySig, SpecialName
    set_DOPISZ_DANE(DOPISZ_DANE): PrivateScope, Public, HideBySig, SpecialName
    get_Step(): PrivateScope, Public, HideBySig, SpecialName
    set_Step(Step): PrivateScope, Public, HideBySig, SpecialName
    get_LineIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_LineIndex(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Time(): PrivateScope, Public, HideBySig, SpecialName
    set_Time(Single): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Core.Mill.Time: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Settings.SMCSettings): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32, Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetAccelerationTime(UInt32, UInt32): PrivateScope, Public, HideBySig
    GetConstantSpeedTime(Int64, UInt32): PrivateScope, Public, HideBySig
    GetBrakeTime(UInt32, UInt32): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Core.Mill.Vacuum.VacuumCreator: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Settings.SMCSettings): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Set(Step): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreator: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Settings.SMCSettings, System.String, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(De.Boenigk.SMC5D.Settings.SMCSettings, System.Collections.Generic.List`1[De.Boenigk.SMC5D.Move.Step], Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Create(): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialCreatorB: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Settings.SMCSettings, System.String, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(De.Boenigk.SMC5D.Settings.SMCSettings, System.Collections.Generic.List`1[De.Boenigk.SMC5D.Move.Step], Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Create(): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialDelta: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Settings.SMCSettings): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetDeltaA(Double): PrivateScope, Public, HideBySig
    GetMMA(Double): PrivateScope, Public, HideBySig
    GetDeltaB(Double): PrivateScope, Public, HideBySig
    GetMMB(Double): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Core.Mill.Tangential.TangentialIndex: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 LastPUIndex 'get ' : 
    Int32 LastPDIndex 'get ' : 
  Methods:
    get_LastPUIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_LastPDIndex(): PrivateScope, Public, HideBySig, SpecialName
    SetIndex(Step, Int32): PrivateScope, Public, HideBySig
    Reset(): PrivateScope, Public, HideBySig
Struct De.Boenigk.SMC5D.Basics.AxisUnit: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    De.Boenigk.SMC5D.Basics.AxisUnit AMM = 0 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.AxisUnit AGrad = 1 : Public, Static, Literal, HasDefault
Class De.Boenigk.SMC5D.Basics.Connector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 C_NextNeededData = 1 : Assembly, Static, Literal, HasDefault
    Int32 C_Pause = 2 : Assembly, Static, Literal, HasDefault
    Int32 C_JobRun = 4 : Assembly, Static, Literal, HasDefault
    Int32 C_MoveByHandwheel = 8 : Assembly, Static, Literal, HasDefault
    Int32 C_JobEnd = 16 : Assembly, Static, Literal, HasDefault
    System.String C_EmulatorSn = 99-1111-1111111 : Public, Static, Literal, HasDefault
  Properties:
    System.String CultureName 'get set' : 
    Boolean ReferenceCreated 'get set' : 
    De.Boenigk.SMC5D.Basics.SMCStatus Status 'get ' : 
    Double AD1Volt 'get ' : 
    Double AD2Volt 'get ' : 
    Double AD3Volt 'get ' : 
    Double AD4Volt 'get ' : 
    Double U33Volt 'get ' : 
    Double U50Volt 'get ' : 
    Double U24Volt 'get ' : 
    Double DA1Volt 'get ' : 
    Double DA2Volt 'get ' : 
    Double DA3Volt 'get ' : 
    Double DA4Volt 'get ' : 
    Int32 Version 'get ' : 
    UInt16 FirmwareVersion 'get ' : 
    De.Boenigk.SMC5D.Basics.GlobPosition GlobPosition 'get set' : 
    UInt32 CurrentSpeed 'get ' : 
    UInt32 MaxSpeed 'get ' : 
    Boolean Enabled 'get ' : 
    De.Boenigk.SMC5D.Basics.SMCLic Lic 'get ' : 
    System.String SN 'get ' : 
    De.Boenigk.SMC5D.Settings.SMCSettings SMCSettings 'get set' : 
    De.Boenigk.SMC5D.Basics.Module ActiveIOModule 'get ' : 
    Byte SpeedPercent 'get set' : 
    Boolean IsHandWheelEmergencyMade 'get ' : 
    Boolean IsMoveNotPossible 'get ' : 
    Boolean IsJoystickEmergencyMade 'get ' : 
    Byte LastPressedHardwareKey 'get ' : 
    De.Boenigk.SMC5D.Move.Job Job 'get set' : 
    Int32 JobIndex 'get ' : 
    System.String LogPath 'get ' : 
    De.Boenigk.SMC5D.Core.AutoLimitingMotorCurrent AutoLimitingMotorCurrent 'get ' : 
    Boolean DebugJob 'get set' : 
    Boolean JobTestMode 'get set' : 
    Boolean JobCompression 'get set' : 
    Boolean LaserMainSwitchOn 'get set' : 
    Boolean CreateJobTestFiles 'get set' : 
    System.String TestDataDir 'get set' : 
    Boolean IgnoreAutoConnect 'get set' : 
    System.String ConfigFile 'get ' : 
    Int32 Time 'get ' : 
    Boolean IsUSB 'get ' : 
    Boolean IsHandwheelOn 'get ' : 
    Boolean IsJoystickOn 'get ' : 
    Boolean LeserPower 'get set' : 
    De.Boenigk.SMC5D.Basics.Output LockedOutputs 'get set' : 
    De.Boenigk.SMC5D.Core.ReadData ODCZYTAJ_DANE 'get ' : 
    Int32 PufferSize 'get set' : 
    Int32 DataSize 'get set' : 
  Events:
    JobStatusDelegate JobStatusChanged: 
    ConnectorStatusDelegate ConnectorStatus: 
    OutputStatusDelegate OutputChanged: 
    InputStatusDelegate InputChanged: 
    HandWheelPotentiometerDelegate HandWheelPotentiometer: 
    HandWheelKeyDelegate HandWheelKeyPressed: 
    JoystickKeyDelegate JoystickKeyPressed: 
  Methods:
    set_PufferSize(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_DataSize(): PrivateScope, Assembly, HideBySig, SpecialName
    set_DataSize(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    WriteInitLaserGranit(UInt32): PrivateScope, Assembly, HideBySig
    WriteInitLaserGranit(): PrivateScope, Assembly, HideBySig
    WriteInitLaserOff(): PrivateScope, Assembly, HideBySig
    add_JobStatusChanged(JobStatusDelegate): PrivateScope, Public, HideBySig, SpecialName
    remove_JobStatusChanged(JobStatusDelegate): PrivateScope, Public, HideBySig, SpecialName
    add_ConnectorStatus(ConnectorStatusDelegate): PrivateScope, Public, HideBySig, SpecialName
    remove_ConnectorStatus(ConnectorStatusDelegate): PrivateScope, Public, HideBySig, SpecialName
    add_OutputChanged(OutputStatusDelegate): PrivateScope, Public, HideBySig, SpecialName
    remove_OutputChanged(OutputStatusDelegate): PrivateScope, Public, HideBySig, SpecialName
    add_InputChanged(InputStatusDelegate): PrivateScope, Public, HideBySig, SpecialName
    remove_InputChanged(InputStatusDelegate): PrivateScope, Public, HideBySig, SpecialName
    add_HandWheelPotentiometer(HandWheelPotentiometerDelegate): PrivateScope, Public, HideBySig, SpecialName
    remove_HandWheelPotentiometer(HandWheelPotentiometerDelegate): PrivateScope, Public, HideBySig, SpecialName
    add_HandWheelKeyPressed(HandWheelKeyDelegate): PrivateScope, Public, HideBySig, SpecialName
    remove_HandWheelKeyPressed(HandWheelKeyDelegate): PrivateScope, Public, HideBySig, SpecialName
    add_JoystickKeyPressed(JoystickKeyDelegate): PrivateScope, Public, HideBySig, SpecialName
    remove_JoystickKeyPressed(JoystickKeyDelegate): PrivateScope, Public, HideBySig, SpecialName
    Reconnect(): PrivateScope, Public, HideBySig
    SetSettings(GlobPosition, String[]): PrivateScope, Public, HideBySig
    Load(String): PrivateScope, Public, HideBySig
    get_CultureName(): PrivateScope, Public, HideBySig, SpecialName
    set_CultureName(String): PrivateScope, Public, HideBySig, SpecialName
    get_ReferenceCreated(): PrivateScope, Public, HideBySig, SpecialName
    set_ReferenceCreated(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Status(): PrivateScope, Public, HideBySig, SpecialName
    get_AD1Volt(): PrivateScope, Public, HideBySig, SpecialName
    get_AD2Volt(): PrivateScope, Public, HideBySig, SpecialName
    get_AD3Volt(): PrivateScope, Public, HideBySig, SpecialName
    get_AD4Volt(): PrivateScope, Public, HideBySig, SpecialName
    get_U33Volt(): PrivateScope, Public, HideBySig, SpecialName
    get_U50Volt(): PrivateScope, Public, HideBySig, SpecialName
    get_U24Volt(): PrivateScope, Public, HideBySig, SpecialName
    get_DA1Volt(): PrivateScope, Public, HideBySig, SpecialName
    get_DA2Volt(): PrivateScope, Public, HideBySig, SpecialName
    get_DA3Volt(): PrivateScope, Public, HideBySig, SpecialName
    get_DA4Volt(): PrivateScope, Public, HideBySig, SpecialName
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    GetControllerName(): PrivateScope, Public, HideBySig
    get_FirmwareVersion(): PrivateScope, Public, HideBySig, SpecialName
    get_GlobPosition(): PrivateScope, Public, HideBySig, SpecialName
    set_GlobPosition(GlobPosition): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentSpeed(): PrivateScope, Public, HideBySig, SpecialName
    get_MaxSpeed(): PrivateScope, Public, HideBySig, SpecialName
    Enable(): PrivateScope, Public, HideBySig
    Enable(String): PrivateScope, Public, HideBySig
    Disable(): PrivateScope, Public, HideBySig
    Stop(): PrivateScope, Assembly, HideBySig
    Continue(): PrivateScope, Assembly, HideBySig
    get_Enabled(): PrivateScope, Public, HideBySig, SpecialName
    Abort(): PrivateScope, Public, HideBySig
    ResetOuts(): PrivateScope, Public, HideBySig
    ResetGlobPosition(): PrivateScope, Public, HideBySig
    ResetGlobPositionX(Double): PrivateScope, Public, HideBySig
    ResetGlobPositionY(Double): PrivateScope, Public, HideBySig
    ResetGlobPositionZ(Double): PrivateScope, Public, HideBySig
    ResetGlobPositionA(Double): PrivateScope, Public, HideBySig
    ResetGlobPositionB(Double): PrivateScope, Public, HideBySig
    SetSecureZ(Double): PrivateScope, Public, HideBySig
    WriteSettings(Boolean): PrivateScope, Public, HideBySig
    WriteLanSettings(): PrivateScope, Public, HideBySig
    RefreshGlobPos(): PrivateScope, Public, HideBySig (Obsolete)
    RefreshData(): PrivateScope, Public, HideBySig
    WriteSettings(SMCSettings, Boolean): PrivateScope, Public, HideBySig
    get_Lic(): PrivateScope, Public, HideBySig, SpecialName
    get_SN(): PrivateScope, Public, HideBySig, SpecialName
    RefreshSN(): PrivateScope, Public, HideBySig
    get_SMCSettings(): PrivateScope, Public, HideBySig, SpecialName
    set_SMCSettings(SMCSettings): PrivateScope, Public, HideBySig, SpecialName
    get_ActiveIOModule(): PrivateScope, Public, HideBySig, SpecialName
    IsRun(): PrivateScope, Public, HideBySig
    IsMoveByHandwheel(): PrivateScope, Public, HideBySig
    IsSpindleOn(): PrivateScope, Public, HideBySig
    IsEmulator(): PrivateScope, Public, HideBySig
    SetHandwheelSettings(HandWheelSettings): PrivateScope, Public, HideBySig
    get_SpeedPercent(): PrivateScope, Public, HideBySig, SpecialName
    set_SpeedPercent(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_IsHandWheelEmergencyMade(): PrivateScope, Public, HideBySig, SpecialName
    get_IsMoveNotPossible(): PrivateScope, Public, HideBySig, SpecialName
    get_IsJoystickEmergencyMade(): PrivateScope, Public, HideBySig, SpecialName
    get_LastPressedHardwareKey(): PrivateScope, Public, HideBySig, SpecialName
    IsExpansionIOConnected(Module): PrivateScope, Public, HideBySig
    set_Job(Job): PrivateScope, Assembly, HideBySig, SpecialName
    get_Job(): PrivateScope, Public, HideBySig, SpecialName
    get_JobIndex(): PrivateScope, Assembly, HideBySig, SpecialName
    get_LogPath(): PrivateScope, Assembly, HideBySig, SpecialName
    get_AutoLimitingMotorCurrent(): PrivateScope, Assembly, HideBySig, SpecialName
    get_DebugJob(): PrivateScope, Assembly, HideBySig, SpecialName
    set_DebugJob(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_JobTestMode(): PrivateScope, Assembly, HideBySig, SpecialName
    set_JobTestMode(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_JobCompression(): PrivateScope, Assembly, HideBySig, SpecialName
    set_JobCompression(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_LaserMainSwitchOn(): PrivateScope, Assembly, HideBySig, SpecialName
    set_LaserMainSwitchOn(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_CreateJobTestFiles(): PrivateScope, Assembly, HideBySig, SpecialName
    set_CreateJobTestFiles(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_TestDataDir(): PrivateScope, Assembly, HideBySig, SpecialName
    set_TestDataDir(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_IgnoreAutoConnect(): PrivateScope, Assembly, HideBySig, SpecialName
    set_IgnoreAutoConnect(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_ConfigFile(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Time(): PrivateScope, Assembly, HideBySig, SpecialName
    Get(): PrivateScope, Assembly, HideBySig
    IsInputOn(Input, Boolean): PrivateScope, Public, HideBySig
    IsInputModOn(Input, Boolean, Module): PrivateScope, Public, HideBySig
    get_IsUSB(): PrivateScope, Public, HideBySig, SpecialName
    get_IsHandwheelOn(): PrivateScope, Public, HideBySig, SpecialName
    get_IsJoystickOn(): PrivateScope, Public, HideBySig, SpecialName
    get_LeserPower(): PrivateScope, Assembly, HideBySig, SpecialName
    set_LeserPower(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_LockedOutputs(): PrivateScope, Public, HideBySig, SpecialName
    set_LockedOutputs(Output): PrivateScope, Public, HideBySig, SpecialName
    get_ODCZYTAJ_DANE(): PrivateScope, Assembly, HideBySig, SpecialName
    get_PufferSize(): PrivateScope, Assembly, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Basics.ControlByte: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Or(Int32, Byte): PrivateScope, Public, Static, HideBySig
    Xor(Int32, Byte): PrivateScope, Public, Static, HideBySig
    IsOne(Int32, Int32): PrivateScope, Public, Static, HideBySig
    IsOne(UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    IsOne(Output, Output): PrivateScope, Public, Static, HideBySig
    IsOne(Input, Input): PrivateScope, Public, Static, HideBySig
    IsOne(UInt16, UInt16): PrivateScope, Public, Static, HideBySig
    IsOne(Byte, Byte): PrivateScope, Public, Static, HideBySig
    Reset(Byte, Byte): PrivateScope, Public, Static, HideBySig
    Reset(Int32, Int32): PrivateScope, Public, Static, HideBySig
    Reset(UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    Reset(UInt16, UInt16): PrivateScope, Public, Static, HideBySig
    Mask(Byte, Byte): PrivateScope, Public, Static, HideBySig
    And(Int32, Byte): PrivateScope, Public, Static, HideBySig
Class De.Boenigk.SMC5D.Basics.ExternStartCounter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 CheckInputCounter 'get set' : 
  Methods:
    get_CheckInputCounter(): PrivateScope, Public, HideBySig, SpecialName
    set_CheckInputCounter(Int32): PrivateScope, Public, HideBySig, SpecialName
    IsCounter(): PrivateScope, Public, HideBySig
    Reset(): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Basics.GlobPosition: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 LineIndex 'get set' : 
    Int32 X    'get set' : 
    Int32 Y    'get set' : 
    Int32 Z    'get set' : 
    Int32 Z2   'get set' : 
    Int32 A    'get set' : 
    Int32 A2   'get set' : 
    Int32 B    'get set' : 
    De.Boenigk.SMC5D.Basics.Input In 'get set' : 
    De.Boenigk.SMC5D.Basics.Input InMod1 'get set' : 
    De.Boenigk.SMC5D.Basics.Input InMod2 'get set' : 
    De.Boenigk.SMC5D.Basics.Input InMod3 'get set' : 
    De.Boenigk.SMC5D.Basics.Input InMod4 'get set' : 
    De.Boenigk.SMC5D.Basics.Input InMod5 'get set' : 
    De.Boenigk.SMC5D.Basics.Output Out 'get set' : 
    De.Boenigk.SMC5D.Basics.Output OutMod1 'get set' : 
    De.Boenigk.SMC5D.Basics.Output OutMod2 'get set' : 
    De.Boenigk.SMC5D.Basics.Output OutMod3 'get set' : 
    De.Boenigk.SMC5D.Basics.Output OutMod4 'get set' : 
    De.Boenigk.SMC5D.Basics.Output OutMod5 'get set' : 
    UInt32 Speed 'get set' : 
    Byte HardwareKey 'get set' : 
    UInt32 Version 'get set' : 
    Byte JoystickVersion 'get set' : 
    UInt32 ErrorAdress 'get set' : 
    Byte SpindleSpeed 'get set' : 
    Byte Wait  'get set' : 
    Byte PWMNumber 'get set' : 
    Byte Backlash 'get set' : 
    Boolean BacklashXPlus 'get ' : 
    Boolean BacklashYPlus 'get ' : 
    Boolean BacklashZPlus 'get ' : 
    Boolean BacklashAPlus 'get ' : 
    Boolean BacklashBPlus 'get ' : 
  Methods:
    Set(GlobPosition): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, HideBySig
    Reset(): PrivateScope, Public, HideBySig
    SetMMX(SMCSettings, Double): PrivateScope, Assembly, HideBySig
    SetMMY(SMCSettings, Double): PrivateScope, Assembly, HideBySig
    SetMMZ(SMCSettings, Double): PrivateScope, Assembly, HideBySig
    SetMMZ2(SMCSettings, Double): PrivateScope, Assembly, HideBySig
    SetMMA(SMCSettings, Double): PrivateScope, Assembly, HideBySig
    SetMMA2(SMCSettings, Double): PrivateScope, Assembly, HideBySig
    GetMMX(SMCSettings): PrivateScope, Assembly, HideBySig
    GetMMY(SMCSettings): PrivateScope, Assembly, HideBySig
    GetMMZ(SMCSettings): PrivateScope, Assembly, HideBySig
    GetMMZ2(SMCSettings): PrivateScope, Assembly, HideBySig
    GetMMA(SMCSettings): PrivateScope, Assembly, HideBySig
    GetMMB(SMCSettings): PrivateScope, Assembly, HideBySig
    GetMMA2(SMCSettings): PrivateScope, Assembly, HideBySig
    get_LineIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_LineIndex(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    set_X(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    set_Y(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Z(): PrivateScope, Public, HideBySig, SpecialName
    set_Z(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Z2(): PrivateScope, Public, HideBySig, SpecialName
    set_Z2(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_A(): PrivateScope, Public, HideBySig, SpecialName
    set_A(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_A2(): PrivateScope, Public, HideBySig, SpecialName
    set_A2(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_B(): PrivateScope, Public, HideBySig, SpecialName
    set_B(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_In(): PrivateScope, Public, HideBySig, SpecialName
    set_In(Input): PrivateScope, Public, HideBySig, SpecialName
    get_InMod1(): PrivateScope, Public, HideBySig, SpecialName
    set_InMod1(Input): PrivateScope, Public, HideBySig, SpecialName
    get_InMod2(): PrivateScope, Public, HideBySig, SpecialName
    set_InMod2(Input): PrivateScope, Public, HideBySig, SpecialName
    get_InMod3(): PrivateScope, Public, HideBySig, SpecialName
    set_InMod3(Input): PrivateScope, Public, HideBySig, SpecialName
    get_InMod4(): PrivateScope, Public, HideBySig, SpecialName
    set_InMod4(Input): PrivateScope, Public, HideBySig, SpecialName
    get_InMod5(): PrivateScope, Public, HideBySig, SpecialName
    set_InMod5(Input): PrivateScope, Public, HideBySig, SpecialName
    get_Out(): PrivateScope, Public, HideBySig, SpecialName
    set_Out(Output): PrivateScope, Public, HideBySig, SpecialName
    get_OutMod1(): PrivateScope, Public, HideBySig, SpecialName
    set_OutMod1(Output): PrivateScope, Public, HideBySig, SpecialName
    get_OutMod2(): PrivateScope, Public, HideBySig, SpecialName
    set_OutMod2(Output): PrivateScope, Public, HideBySig, SpecialName
    get_OutMod3(): PrivateScope, Public, HideBySig, SpecialName
    set_OutMod3(Output): PrivateScope, Public, HideBySig, SpecialName
    get_OutMod4(): PrivateScope, Public, HideBySig, SpecialName
    set_OutMod4(Output): PrivateScope, Public, HideBySig, SpecialName
    get_OutMod5(): PrivateScope, Public, HideBySig, SpecialName
    set_OutMod5(Output): PrivateScope, Public, HideBySig, SpecialName
    get_Speed(): PrivateScope, Public, HideBySig, SpecialName
    set_Speed(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_HardwareKey(): PrivateScope, Public, HideBySig, SpecialName
    set_HardwareKey(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    set_Version(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_JoystickVersion(): PrivateScope, Public, HideBySig, SpecialName
    set_JoystickVersion(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_ErrorAdress(): PrivateScope, Public, HideBySig, SpecialName
    set_ErrorAdress(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_SpindleSpeed(): PrivateScope, Public, HideBySig, SpecialName
    set_SpindleSpeed(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_Wait(): PrivateScope, Public, HideBySig, SpecialName
    set_Wait(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_PWMNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_PWMNumber(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_Backlash(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Backlash(Byte): PrivateScope, Assembly, HideBySig, SpecialName
    get_BacklashXPlus(): PrivateScope, Assembly, HideBySig, SpecialName
    get_BacklashYPlus(): PrivateScope, Assembly, HideBySig, SpecialName
    get_BacklashZPlus(): PrivateScope, Assembly, HideBySig, SpecialName
    get_BacklashAPlus(): PrivateScope, Assembly, HideBySig, SpecialName
    get_BacklashBPlus(): PrivateScope, Assembly, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Basics.GlobPositionConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Basics.Connector): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetMM(GlobPosition, SMCAxisType): PrivateScope, Public, HideBySig
Struct De.Boenigk.SMC5D.Basics.HardwareKey: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    De.Boenigk.SMC5D.Basics.HardwareKey None = 0 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey Key1 = 1 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey Key2 = 2 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey Key3 = 3 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey Key4 = 4 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey Key5 = 5 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey Key6 = 6 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey Key7 = 7 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey Key8 = 8 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey Key9 = 9 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey Key10 = 10 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey Key11 = 11 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey Key12 = 12 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey Key13 = 13 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey Key14 = 14 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey Key15 = 15 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey Key16 = 16 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey MoveReference = 20 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey MoveZero = 21 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey MovePark = 22 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey SpindleOn = 23 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey SetX = 24 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey SetY = 25 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey SetZ = 26 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey PumpOn = 27 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey JobStart = 28 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey JobContinue = 29 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey Pause = 30 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey Esc = 31 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey Ok = 32 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey EmergencyMade = 33 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey PlusSpindle = 34 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey MinusSpindle = 35 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey JoystickF1 = 41 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey JoystickF2 = 42 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey JoystickF3 = 43 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey JoystickEmergencyMade = 44 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey JoystickEsc = 45 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey JoystickOk = 46 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey MoveNotPossible = 55 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey Potentiometer = 64 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.HardwareKey Encoder = 66 : Public, Static, Literal, HasDefault
Struct De.Boenigk.SMC5D.Basics.Input: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    De.Boenigk.SMC5D.Basics.Input Default = 0 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Input Con2Pin1 = 1 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Input Con2Pin2 = 2 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Input Con2Pin3 = 4 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Input Con2Pin4 = 128 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Input Con2Pin5 = 8 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Input Con2Pin6 = 16 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Input Con2Pin7 = 32 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Input Con2Pin8 = 64 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Input Con3Pin9 = 65536 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Input Con3Pin10 = 131072 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Input Con3Pin11 = 262144 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Input Con3Pin12 = 524288 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Input Con3Pin13 = 1048576 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Input Con3Pin14 = 2097152 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Input Con3Pin15 = 4194304 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Input Con3Pin16 = 8388608 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Input Con4Pin17 = 256 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Input Con4Pin18 = 512 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Input Con4Pin19 = 1024 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Input Con4Pin20 = 2048 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Input Con4Pin21 = 4096 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Input Con4Pin22 = 8192 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Input Con4Pin23 = 16384 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Input Con4Pin24 = 32768 : Public, Static, Literal, HasDefault
Class De.Boenigk.SMC5D.Basics.InputChanged: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    IsInputsChanged(Input, Int32): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Basics.InputChecker: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Basics.Connector): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ReduceJobSpeed 'get set' : 
    Byte JobSpeed 'get set' : 
  Methods:
    CheckInputHood(Boolean): PrivateScope, Public, HideBySig
    IsHoodOn(Int32, Boolean): PrivateScope, Public, HideBySig
    IsHoodOpen(Connector): PrivateScope, Public, Static, HideBySig
    SetAutomaticallyInputDefaultStatus(): PrivateScope, Public, HideBySig
    IsInputEmergency(Connector): PrivateScope, Public, Static, HideBySig
    CheckInputEmergency(Boolean, Int32, Boolean, String[]): PrivateScope, Public, HideBySig
    IsInputEmergency(Int32, Boolean): PrivateScope, Public, HideBySig
    get_ReduceJobSpeed(): PrivateScope, Public, HideBySig, SpecialName
    get_JobSpeed(): PrivateScope, Public, HideBySig, SpecialName
    CheckInputRefZ(Boolean): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Basics.InputConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetInput(Int32): PrivateScope, Public, Static, HideBySig
    GetInputNumber(Input): PrivateScope, Public, Static, HideBySig
Class De.Boenigk.SMC5D.Basics.IPDevice: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String C_MacPartSMC5dM4 : Public, Static
    System.String[] C_MacPartSMC5dP32 : Public, Static
  Properties:
    System.String IP 'get set' : 
    System.String HostName 'get set' : 
    System.String MAC 'get set' : 
  Methods:
    get_IP(): PrivateScope, Public, HideBySig, SpecialName
    set_IP(String): PrivateScope, Public, HideBySig, SpecialName
    get_HostName(): PrivateScope, Public, HideBySig, SpecialName
    set_HostName(String): PrivateScope, Public, HideBySig, SpecialName
    get_MAC(): PrivateScope, Public, HideBySig, SpecialName
    set_MAC(String): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Basics.Lathe: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Basics.Connector): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Set(Int32, Boolean): PrivateScope, Public, HideBySig
    GetMaxSpeed(): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Basics.SDCard: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Basics.Connector): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    StartJob(String): PrivateScope, Public, HideBySig
    IsExist(): PrivateScope, Public, HideBySig
    GetFileNames(): PrivateScope, Public, HideBySig
    GetFileSizes(): PrivateScope, Public, HideBySig
    FileUpload(String, Int32): PrivateScope, Public, HideBySig
    FileDownload(String, String): PrivateScope, Public, HideBySig
Struct De.Boenigk.SMC5D.Basics.Module: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    De.Boenigk.SMC5D.Basics.Module SMC5DMod0InOut = 0 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Module Mod1InOut = 1 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Module Mod2InOut = 2 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Module Mod3InOut = 3 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Module Mod4InOut = 4 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Module Mod5InOut = 5 : Public, Static, Literal, HasDefault
Class De.Boenigk.SMC5D.Basics.Pinger: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.List`1[De.Boenigk.SMC5D.Basics.IPDevice] IPDevices 'get ' : 
    Int32 SubIP 'get ' : 
    System.String IP 'get ' : 
  Methods:
    PingAll(String): PrivateScope, Public, HideBySig
    PingAll(): PrivateScope, Public, HideBySig
    PingAllAbort(): PrivateScope, Public, HideBySig
    get_IPDevices(): PrivateScope, Public, HideBySig, SpecialName
    get_SubIP(): PrivateScope, Public, HideBySig, SpecialName
    get_IP(): PrivateScope, Public, HideBySig, SpecialName
    Ping(String): PrivateScope, Public, HideBySig
    RequestMACAddress(String): PrivateScope, Public, HideBySig
    GetHostIP(): PrivateScope, Public, Static, HideBySig
    GetInterNetworkStartIPs(): PrivateScope, Public, Static, HideBySig
    IsIP(String): PrivateScope, Public, Static, HideBySig
Class De.Boenigk.SMC5D.Basics.StatusMonitor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Basics.Connector): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Start(Input): PrivateScope, Public, HideBySig
    IsChanged(): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Basics.VacuumHelper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Settings.VacuumSettings): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ClearVacuumAreaDrawingList(): PrivateScope, Public, HideBySig
    SetAllVacuumAreaToNotUsed(): PrivateScope, Public, HideBySig
    SetVacuumToVacuumAreaDrawingListIfLineIn(Step): PrivateScope, Public, HideBySig
    LineInArray(Step, Step, VacuumArea): PrivateScope, Public, Static, HideBySig
Struct De.Boenigk.SMC5D.Basics.MoveAxis: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    De.Boenigk.SMC5D.Basics.MoveAxis X = 0 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.MoveAxis Y = 1 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.MoveAxis Z = 2 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.MoveAxis A = 4 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.MoveAxis XY = 5 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.MoveAxis ScanHeightZDepth = 6 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.MoveAxis MeasureToolZDepth = 7 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.MoveAxis Z2 = 8 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.MoveAxis A2 = 9 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.MoveAxis B = 10 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.MoveAxis None = 100 : Public, Static, Literal, HasDefault
Struct De.Boenigk.SMC5D.Basics.Output: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    De.Boenigk.SMC5D.Basics.Output Default = 0 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Output Con2Pin1 = 1 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Output Con2Pin2 = 2 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Output Con2Pin8MotorCurrent = 4 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Output Con2Pin3 = 8 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Output Con2Pin4 = 16 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Output Con3Pin5 = 32768 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Output Con3Pin6 = 65536 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Output Con3Pin7 = 131072 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Output Con3Pin8 = 262144 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Output Con3Pin9 = 524288 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Output Con3Pin10 = 1048576 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Output Con3Pin11 = 2097152 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Output Con3Pin12 = 4194304 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Output Con3Pin13 = 8388608 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Output Con3Pin14 = 16777216 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Output Con4Pin15 = 32 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Output Con4Pin16 = 64 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Output Con4Pin17 = 128 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Output Con4Pin18 = 256 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Output Con4Pin19 = 512 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Output Con4Pin20 = 1024 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Output Con4Pin21 = 2048 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Output Con4Pin22 = 4096 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Output Con4Pin23 = 8192 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Output Con4Pin24 = 16384 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Output Mod1 = 33554432 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Output Mod2 = 67108864 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Output Mod3 = 134217728 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Output Mod4 = 268435456 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.Output Mod5 = 536870912 : Public, Static, Literal, HasDefault
Class De.Boenigk.SMC5D.Basics.OutputChanged: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    IsOutputsChanged(Output, Int32): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Basics.OutputConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetOutputs(Int32): PrivateScope, Public, Static, HideBySig
    GetOutput(Int32): PrivateScope, Public, Static, HideBySig
    GetOutputNumber(Output): PrivateScope, Public, Static, HideBySig
Struct De.Boenigk.SMC5D.Basics.RestrictedAreaExcept: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    De.Boenigk.SMC5D.Basics.RestrictedAreaExcept Default = 0 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.RestrictedAreaExcept ManuallyMoving = 2 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.RestrictedAreaExcept Milling = 4 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.RestrictedAreaExcept MoveTo = 8 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.RestrictedAreaExcept ToolChange = 16 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.RestrictedAreaExcept ToolMeasure = 32 : Public, Static, Literal, HasDefault
Class De.Boenigk.SMC5D.Basics.SecCalc: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Hour 'get ' : 
    Int32 Minutes 'get ' : 
    Int32 Seconds 'get ' : 
    System.String Time 'get ' : 
  Methods:
    Convert(Int64): PrivateScope, Public, HideBySig
    get_Hour(): PrivateScope, Public, HideBySig, SpecialName
    get_Minutes(): PrivateScope, Public, HideBySig, SpecialName
    get_Seconds(): PrivateScope, Public, HideBySig, SpecialName
    get_Time(): PrivateScope, Public, HideBySig, SpecialName
Struct De.Boenigk.SMC5D.Basics.SMCAxisType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    De.Boenigk.SMC5D.Basics.SMCAxisType None = 0 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.SMCAxisType X = 1 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.SMCAxisType X2 = 2 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.SMCAxisType Y = 3 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.SMCAxisType Y2 = 4 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.SMCAxisType Z = 5 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.SMCAxisType Z2 = 6 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.SMCAxisType A = 7 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.SMCAxisType A2 = 8 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.SMCAxisType B = 9 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.SMCAxisType C = 10 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.SMCAxisType D = 11 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.SMCAxisType XY = 12 : Public, Static, Literal, HasDefault
Class De.Boenigk.SMC5D.Basics.SMCException: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(De.Boenigk.SMC5D.Basics.SMCStatus): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, De.Boenigk.SMC5D.Basics.SMCStatus): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Collections.Generic.Dictionary`2[System.String,System.Object], De.Boenigk.SMC5D.Basics.SMCStatus): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception, De.Boenigk.SMC5D.Basics.SMCStatus): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    De.Boenigk.SMC5D.Basics.SMCStatus Status 'get ' : 
    System.Collections.Generic.Dictionary`2[System.String,System.Object] ExceptionData 'get set' : 
  Methods:
    get_Status(): PrivateScope, Public, HideBySig, SpecialName
    get_ExceptionData(): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Basics.SMCInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Basics.Connector): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    De.Boenigk.SMC5D.Basics.SMCStatus SMCStatus 'get ' : 
  Methods:
    GetSN(): PrivateScope, Public, HideBySig
    GetSNString(): PrivateScope, Public, HideBySig
    get_SMCStatus(): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Basics.SMCLic: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Basics.Connector, System.String[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Byte ErrorID 'get ' : 
    Int32 LicDays 'get ' : 
  Methods:
    Load(): PrivateScope, Public, HideBySig
    GetSN(Byte[]): PrivateScope, Public, Static, HideBySig
    ValidFormat(String): PrivateScope, Public, Static, HideBySig
    get_ErrorID(): PrivateScope, Public, HideBySig, SpecialName
    Init(): PrivateScope, Public, HideBySig
    ResetSN(Byte): PrivateScope, Public, HideBySig
    ResetSN(): PrivateScope, Public, HideBySig
    IsLicensed(): PrivateScope, Public, HideBySig
    get_LicDays(): PrivateScope, Public, HideBySig, SpecialName
    CreateLicence(Byte, Lic): PrivateScope, Assembly, HideBySig
    GetID(): PrivateScope, Public, HideBySig
    WRITE(Byte[]): PrivateScope, Assembly, HideBySig
    READ(): PrivateScope, Assembly, HideBySig
Class De.Boenigk.SMC5D.Basics.SMCRefEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(De.Boenigk.SMC5D.Basics.SMCAxisType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(De.Boenigk.SMC5D.Basics.SMCAxisType, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    De.Boenigk.SMC5D.Basics.SMCAxisType SMCAxis 'get ' : 
    Int32 StepError 'get ' : 
  Methods:
    get_SMCAxis(): PrivateScope, Public, HideBySig, SpecialName
    get_StepError(): PrivateScope, Public, HideBySig, SpecialName
Struct De.Boenigk.SMC5D.Basics.SMCStatus: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    De.Boenigk.SMC5D.Basics.SMCStatus None = -1 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.SMCStatus Ready = 1001 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.SMCStatus Run = 1002 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.SMCStatus Abort = 1003 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.SMCStatus Pause = 1004 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.SMCStatus Error = 1005 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.SMCStatus NotFound = 1006 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.SMCStatus HoodIsOpen = 1008 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.SMCStatus AbortRefSwitchXOn = 1010 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.SMCStatus AbortRefSwitchYOn = 1011 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.SMCStatus AbortRefSwitchZOn = 1012 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.SMCStatus AbortRefSwitchZ2On = 1013 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.SMCStatus AbortOutOfXArea = 1014 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.SMCStatus AbortOutOfYArea = 1015 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.SMCStatus AbortOutOfZArea = 1016 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.SMCStatus AbortOutOfZ2Area = 1017 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.SMCStatus StopZAchieved = 1018 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.SMCStatus LicenseNotFound = 1020 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.SMCStatus Disabled = 1021 : Public, Static, Literal, HasDefault
    De.Boenigk.SMC5D.Basics.SMCStatus EmergencyStop = 1022 : Public, Static, Literal, HasDefault
Class De.Boenigk.SMC5D.Basics.SMCStatusEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, SMCStatusEventArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, SMCStatusEventArgs, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class De.Boenigk.SMC5D.Basics.SMCStatusEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(System.String, De.Boenigk.SMC5D.Basics.SMCStatus): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(De.Boenigk.SMC5D.Basics.SMCStatus): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Text 'get ' : 
    De.Boenigk.SMC5D.Basics.SMCStatus Status 'get ' : 
  Methods:
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    get_Status(): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Basics.SpeedArea: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Settings.SMCSettings): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetMaxSpeed(Axis): PrivateScope, Public, HideBySig
    GetMaxSpeed(Axis, Double, UInt16): PrivateScope, Public, Static, HideBySig
Class De.Boenigk.SMC5D.Basics.StartTime: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetStartDateTime(): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Basics.StepCalc: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetStepsX(Connector, Double): PrivateScope, Public, Static, HideBySig
    GetStepsY(Connector, Double): PrivateScope, Public, Static, HideBySig
    GetStepsZ(Connector, Double): PrivateScope, Public, Static, HideBySig
    GetStepsA(Connector, Double): PrivateScope, Public, Static, HideBySig
    GetStepsB(Connector, Double): PrivateScope, Public, Static, HideBySig
    GetRotateSteps(Int32, Double, Double): PrivateScope, Public, Static, HideBySig
    GetStepMM(Int32, Double): PrivateScope, Public, Static, HideBySig
    GetRotateStepMM(Int32, Double): PrivateScope, Public, Static, HideBySig
    GetMM(Int32, Double, Int32): PrivateScope, Public, Static, HideBySig
    GetMMX(Connector): PrivateScope, Public, Static, HideBySig
    GetMMX(Connector, Int32): PrivateScope, Public, Static, HideBySig
    GetMMY(Connector): PrivateScope, Public, Static, HideBySig
    GetMMY(Connector, Int32): PrivateScope, Public, Static, HideBySig
    GetMMZ(Connector): PrivateScope, Public, Static, HideBySig
    GetMMZ(Connector, Int32): PrivateScope, Public, Static, HideBySig
    GetMMA(Connector): PrivateScope, Public, Static, HideBySig
    GetMMA(Connector, Int32): PrivateScope, Public, Static, HideBySig
    GetMMB(Connector): PrivateScope, Public, Static, HideBySig
    GetMMB(Connector, Int32): PrivateScope, Public, Static, HideBySig
    GetSteps(Int32, Double, Double): PrivateScope, Public, Static, HideBySig
    GetAxisLength(SMCAxis): PrivateScope, Public, Static, HideBySig
    GetLength(SMCAxis, Double): PrivateScope, Public, Static, HideBySig
    GetAxisResolution(Int32, Double): PrivateScope, Public, Static, HideBySig
Class De.Boenigk.SMC5D.Basics.Switch: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(De.Boenigk.SMC5D.Basics.Connector): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean[] Inputs 'get ' : 
    Boolean[] InputsMod1 'get ' : 
    Boolean[] InputsMod2 'get ' : 
    Boolean[] InputsMod3 'get ' : 
    Boolean[] InputsMod4 'get ' : 
    Boolean[] InputsMod5 'get ' : 
  Methods:
    SetPin(Output, Boolean, Boolean): PrivateScope, Public, HideBySig
    SetPin(Output, Module, Boolean, Boolean): PrivateScope, Public, HideBySig
    SetPinPermanently(Output, Module, Boolean): PrivateScope, Public, HideBySig
    SetPinPermanently(Output, Boolean): PrivateScope, Public, HideBySig
    SetPWMSpindle(Boolean): PrivateScope, Public, HideBySig
    SetPin(Output, Boolean, Byte): PrivateScope, Public, HideBySig
    SetPin(Output, Module, Boolean, Byte): PrivateScope, Public, HideBySig
    SetPinNoDelay(Output): PrivateScope, Public, HideBySig
    SetPinNoDelay(Output, Module): PrivateScope, Public, HideBySig
    SetPWM(Byte, Byte): PrivateScope, Public, HideBySig
    SetPin(Output, Boolean): PrivateScope, Public, HideBySig
    SetPin(Output, Module, Boolean): PrivateScope, Public, HideBySig
    InvertPin(Output): PrivateScope, Public, HideBySig
    IsOutputOn(Output, GlobPosition): PrivateScope, Public, HideBySig
    IsOutputOn(Output): PrivateScope, Public, HideBySig
    IsOutputOn(Output, Module): PrivateScope, Public, HideBySig
    IsOutputOn(Output, Module, Boolean): PrivateScope, Public, HideBySig
    IsOutputPermanentlyAtMod0On(Output, Boolean): PrivateScope, Public, HideBySig
    IsOutputAtMod1On(Output): PrivateScope, Public, HideBySig
    IsOutputAtMod1On(Output, Boolean): PrivateScope, Public, HideBySig
    IsOutputPermanentlyAtMod1On(Output, Boolean): PrivateScope, Public, HideBySig
    IsOutputAtMod1On(Output, GlobPosition): PrivateScope, Public, HideBySig
    IsOutputAtMod2On(Output): PrivateScope, Public, HideBySig
    IsOutputAtMod2On(Output, Boolean): PrivateScope, Public, HideBySig
    IsOutputPermanentlyAtMod2On(Output, Boolean): PrivateScope, Public, HideBySig
    IsOutputAtMod2On(Output, GlobPosition): PrivateScope, Public, HideBySig
    IsOutputAtMod3On(Output): PrivateScope, Public, HideBySig
    IsOutputAtMod3On(Output, Boolean): PrivateScope, Public, HideBySig
    IsOutputPermanentlyAtMod3On(Output, Boolean): PrivateScope, Public, HideBySig
    IsOutputAtMod3On(Output, GlobPosition): PrivateScope, Public, HideBySig
    IsOutputAtMod4On(Output): PrivateScope, Public, HideBySig
    IsOutputAtMod4On(Output, Boolean): PrivateScope, Public, HideBySig
    IsOutputPermanentlyAtMod4On(Output, Boolean): PrivateScope, Public, HideBySig
    IsOutputAtMod4On(Output, GlobPosition): PrivateScope, Public, HideBySig
    IsOutputAtMod5On(Output): PrivateScope, Public, HideBySig
    IsOutputAtMod5On(Output, Boolean): PrivateScope, Public, HideBySig
    IsOutputPermanentlyAtMod5On(Output, Boolean): PrivateScope, Public, HideBySig
    IsOutputAtMod5On(Output, GlobPosition): PrivateScope, Public, HideBySig
    ResetAll(): PrivateScope, Public, HideBySig
    ResetPWM(): PrivateScope, Public, HideBySig
    ReadInputs(): PrivateScope, Public, HideBySig
    IsInputOn(Input, Boolean): PrivateScope, Public, HideBySig
    IsInputOn(Input, Boolean, Module): PrivateScope, Public, HideBySig
    IsInputOn(Input, Boolean, Int32): PrivateScope, Public, HideBySig
    get_Inputs(): PrivateScope, Public, HideBySig, SpecialName
    get_InputsMod1(): PrivateScope, Public, HideBySig, SpecialName
    get_InputsMod2(): PrivateScope, Public, HideBySig, SpecialName
    get_InputsMod3(): PrivateScope, Public, HideBySig, SpecialName
    get_InputsMod4(): PrivateScope, Public, HideBySig, SpecialName
    get_InputsMod5(): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Basics.TxtFile: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int64 Position 'get set' : 
    Int64 Length 'get ' : 
    System.String Current 'get ' : 
    Int64 Counter 'get ' : 
  Methods:
    ReadToEnd(): PrivateScope, Public, HideBySig
    Read(Int32): PrivateScope, Public, HideBySig
    ReadPLine(): PrivateScope, Public, HideBySig
    ReadLine(): PrivateScope, Public, HideBySig
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    get_Current(): PrivateScope, Public, HideBySig, SpecialName
    get_Counter(): PrivateScope, Public, HideBySig, SpecialName
    Close(): PrivateScope, Public, HideBySig
    ClearPLineBuffer(): PrivateScope, Public, HideBySig
Class De.Boenigk.SMC5D.Basics.XYPointD: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
  Fields:
    Int32 C_Length = 16 : Public, Static, Literal, HasDefault
  Properties:
    Double X   'get set' : 
    Double Y   'get set' : 
  Methods:
    ToByteArray(): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    set_X(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    set_Y(Double): PrivateScope, Public, HideBySig, SpecialName
Class De.Boenigk.SMC5D.Basics.Cons: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    De.Boenigk.SMC5D.Basics.Input[] Inputs : Public, InitOnly
    De.Boenigk.SMC5D.Basics.Output[] Outputs : Public, InitOnly
Interface De.Boenigk.SMC5D.Basics.I_Connector: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    De.Boenigk.SMC5D.Basics.SMCStatus Status 'get ' : 
  Methods:
    Abort(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Status(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class MicroLibrary.MicroTimer+MicroTimerElapsedEventHandler: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, MicroTimerEventArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, MicroTimerEventArgs, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct De.Boenigk.SMC5D.Settings.AutoToolSettings+ToolPosition: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Decimal, System.Decimal, System.Decimal, System.Decimal, System.Decimal, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Decimal X : Public
    System.Decimal Y : Public
    System.Decimal Z : Public
    System.Decimal A : Public
    System.Decimal B : Public
    Boolean Aon : Public
    Boolean Bon : Public
Struct De.Boenigk.SMC5D.Settings.AutoToolSettings+MoveAfter: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Double X : Public
    Double Y : Public
    Double Z1 : Public
    Double X2 : Public
    Double Y3 : Public
Struct De.Boenigk.SMC5D.Settings.DoubleX2Y2Settings+AdjustAxes: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AdjustAxes X = 0 : Public, Static, Literal, HasDefault
    AdjustAxes X2 = 1 : Public, Static, Literal, HasDefault
    AdjustAxes Y = 2 : Public, Static, Literal, HasDefault
    AdjustAxes Y2 = 3 : Public, Static, Literal, HasDefault
Struct De.Boenigk.SMC5D.Settings.LanSettings+Buffer: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Buffer Size64 = 64 : Public, Static, Literal, HasDefault
    Buffer Size512 = 512 : Public, Static, Literal, HasDefault
Struct De.Boenigk.SMC5D.Settings.OutputSignal+OutputType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OutputType Reference = 0 : Public, Static, Literal, HasDefault
    OutputType Park = 1 : Public, Static, Literal, HasDefault
Class De.Boenigk.SMC5D.Settings.SMCSettings+UpdateDelegate: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct De.Boenigk.SMC5D.Settings.VacuumSettings+VacuumType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    VacuumType Variable = 0 : Public, Static, Literal, HasDefault
    VacuumType IfInArea = 1 : Public, Static, Literal, HasDefault
    VacuumType Permanently = 2 : Public, Static, Literal, HasDefault
    VacuumType PermanentlyIfInArea = 3 : Public, Static, Literal, HasDefault
Struct De.Boenigk.SMC5D.Move.Axis+AxisID: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AxisID X = 0 : Public, Static, Literal, HasDefault
    AxisID Y = 1 : Public, Static, Literal, HasDefault
    AxisID Z = 2 : Public, Static, Literal, HasDefault
    AxisID A = 3 : Public, Static, Literal, HasDefault
    AxisID B = 4 : Public, Static, Literal, HasDefault
    AxisID X2 = 5 : Public, Static, Literal, HasDefault
    AxisID Y2 = 6 : Public, Static, Literal, HasDefault
    AxisID Settings = 7 : Public, Static, Literal, HasDefault
    AxisID XY = 8 : Public, Static, Literal, HasDefault
Struct De.Boenigk.SMC5D.Move.Axis+AxisServices: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Boolean RunToSwitch : Public
    AxisID Axis : Public
Class De.Boenigk.SMC5D.Move.Axis+SMCStatusEventHandler: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, SMCStatusEventArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, SMCStatusEventArgs, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class De.Boenigk.SMC5D.Move.Axis+RefDirectionEventHandle: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Boolean, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class De.Boenigk.SMC5D.Move.Job+SMCStatusEventHandler: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, SMCStatusEventArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, SMCStatusEventArgs, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class De.Boenigk.SMC5D.Move.ManualMove+SMCStatusEventHandler: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, SMCStatusEventArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, SMCStatusEventArgs, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class De.Boenigk.SMC5D.Move.Reference+SMCStatusEventHandler: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, SMCStatusEventArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, SMCStatusEventArgs, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class De.Boenigk.SMC5D.Move.Reference+SMCAxisEventHandler: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, SMCRefEventArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, SMCRefEventArgs, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class De.Boenigk.SMC5D.Move.Reference+RefDirectionEventHandle: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Boolean, SMCAxisType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Boolean, SMCAxisType, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class De.Boenigk.SMC5D.Move.AxisSimply+SMCStatusEventHandler: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, SMCStatusEventArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, SMCStatusEventArgs, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class De.Boenigk.SMC5D.Dialogs.DlgPicTester+Action: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class De.Boenigk.SMC5D.Emulator.Emulator+EmulatorMessageDelegate: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(String, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class De.Boenigk.SMC5D.Emulator.EmulatorAdmin+EmulatorMessageDelegate: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(String, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct De.Boenigk.SMC5D.Core.Log+LogLevel: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    LogLevel NoneLevelAndTime = 0 : Public, Static, Literal, HasDefault
    LogLevel Low = 1 : Public, Static, Literal, HasDefault
    LogLevel Standard = 2 : Public, Static, Literal, HasDefault
    LogLevel High = 3 : Public, Static, Literal, HasDefault
    LogLevel VeryHigh = 4 : Public, Static, Literal, HasDefault
Class De.Boenigk.SMC5D.Core.Commands+Pic32Delegate: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(String, Int16, Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(String, Int16, Byte[], AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class De.Boenigk.SMC5D.Core.Pic32LAN+Pic32Delegate: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(String, Int16, Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(String, Int16, Byte[], AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class De.Boenigk.SMC5D.Core.Pic32USB+Pic32Delegate: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(String, Int16, Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(String, Int16, Byte[], AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct De.Boenigk.SMC5D.Core.Mill.DeltaAccelerationBrakeSimple+MergeStruct: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int64 LargestDelta : Public
    Int64 AWay : Public
    Int64 BWay : Public
Class De.Boenigk.SMC5D.Basics.Connector+JobStatusDelegate: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Boolean, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class De.Boenigk.SMC5D.Basics.Connector+ConnectorStatusDelegate: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(SMCStatus, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(SMCStatus, Object, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class De.Boenigk.SMC5D.Basics.Connector+OutputStatusDelegate: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class De.Boenigk.SMC5D.Basics.Connector+InputStatusDelegate: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class De.Boenigk.SMC5D.Basics.Connector+HandWheelPotentiometerDelegate: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Byte, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Byte, Object, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class De.Boenigk.SMC5D.Basics.Connector+HandWheelKeyDelegate: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(HardwareKey, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(HardwareKey, Object, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class De.Boenigk.SMC5D.Basics.Connector+JoystickKeyDelegate: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(HardwareKey, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(HardwareKey, Object, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct De.Boenigk.SMC5D.Basics.SMCLic+Lic: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Lic Final = 0 : Public, Static, Literal, HasDefault
    Lic DaysX = 1 : Public, Static, Literal, HasDefault
    Lic None = 2 : Public, Static, Literal, HasDefault
Struct De.Boenigk.SMC5D.Basics.SpeedArea+Axis: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Axis X = 1 : Public, Static, Literal, HasDefault
    Axis Y = 2 : Public, Static, Literal, HasDefault
    Axis Z = 3 : Public, Static, Literal, HasDefault
    Axis A = 4 : Public, Static, Literal, HasDefault
    Axis B = 5 : Public, Static, Literal, HasDefault
